<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>2022年度总结</title>
    <url>/2022/12/29/2022%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<p>还有两天就是元旦，不知不觉一年就这样过去了。正如《潜伏》中的吴敬中说的：”时间就像一头野驴，跑起来就不会停下“。特别是上了大学之后，更有这种感觉，一学期只有十八周，感觉一学期什么事都没有做就结束了。</p>
<h2 id="永远忘不了的疫情"><a class="markdownIt-Anchor" href="#永远忘不了的疫情"></a> 永远忘不了的疫情</h2>
<p>回想去年的元旦，我是在宿舍里度过的，当时西安的正在经历很严重的疫情，学校开始实行封宿舍，每天只能由一个人出门带饭，我们吃饭的方式就是把塑料袋套到塑料碗里吃。记得去年的12月31号，我们为了吃顿好的，下午三点多就打电话给学校的鸡公煲订了一份，买了几碗泡面，就算是吃顿好的了，吃完也没有特别的活动，到点就睡了。**我的2022年就这么开始了！**这真是一段心酸而又难忘的时光，从那以后西安每有疫情，我都会祈祷千万别出现年初的情况。</p>
<p>七月份，学习为20级学生组织了军训。教官从延安来到我们学校，军训组织不到一半，西安突然传出消息说要“静默”，没有办法，教官们为了及时返回他们的学校，在新闻放出来的两三个小时候就匆匆地离开了。我当时负责到宿舍协助整理物资，看到许多教官练被子都来不及收拾，急忙忙地带着自己的装备行李就跟着大部队走了。还看到有许多同学提前得到了消息，拿着一束鲜花到楼下，在迷彩服中寻找自己的教官，只为了献上一个拥抱或者说一句谢谢。我的许多同学为了不像年初一样被困在西安，也立即改了车票，急忙离开了西安。上半年就这么匆忙地结束了，连道别都来不及说一声。</p>
<p>到了下半年，防疫的措施越来越严格，全国上下对病毒围追堵截，就是防不住无孔不入的病毒。新疆地区被封了若干个月，最终爆发了1124乌鲁木齐大火，全国人民为之伤痛。最终，在人们的努力，和某种神秘力量的作用下，终于有了转机，国家开始对人民松绑，但带价是人们要承受若干个月甚至更长的阵痛，也就是现在，布洛芬和抗原检测试剂成了炙手可热的商品。</p>
<p>我不知道新冠疫情到底是天灾还是人祸，但我知道，肯定有人要为那些逝去的人们负责。</p>
<h2 id="活在未来的人"><a class="markdownIt-Anchor" href="#活在未来的人"></a> 活在未来的人</h2>
<p>我妈常常感叹，以前她上班的时候看到厂里同事高考考完摆酒席，羡慕得不行，当时我还在读小学，如今一晃我已经大三了。我们总是对生活有着很好的期盼，读初中时，老师告诉我考上一中，生活会变得很美好；读高中时，老师告诉我考上好的大学，生活会变得很美好……如今大三了，我却感受不到他们所描述的“美好”，除了封校和做不完的实验，我还要为我将来的研究生生涯着想。之前在B站上看到过一个视频，视频讲的大概就是一个道理：我们更应该享受当下，而不是没完没了为了未来努力。我当然没有宣传“躺平”、“摆烂”的思想，只是想表达不要为将来焦虑，而放弃现在的美好，生命中的每一段时光都是有意义的。有时候停下来享受一下路旁的风景，享受一个人生中的GAP year，也是挺不错的。</p>
<h2 id="人生到处知何似应似飞鸿踏雪泥"><a class="markdownIt-Anchor" href="#人生到处知何似应似飞鸿踏雪泥"></a> ”人生到处知何似，应似飞鸿踏雪泥“</h2>
<p>今年我做了许多尝试，好像是为了提升自己，实际是功利地想让自己的简历“更好看”，用一些无意义的工作填满自己的课余时间。当夜晚失眠时，我经常翻看相册或者朋友圈，寻找自己留下的痕迹。其实我大部分时间都在忙，很少会拍照或者分享（也找不到人一起分享），这就是我为什么发出这样的感慨的原因，太急着追求将来，把身边的小美好都给忽略了。好在网易云音乐的年度听歌报告能给我留下一些记忆。我认识的一些朋友就很棒，每天可以坚持写日记，或者每天更新一篇QQ空间说说，这应该就是苏轼说的“人生到处知何似，应似飞鸿踏雪泥”吧。</p>
<h2 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h2>
<p>一言以蔽之，今年疫情使我的价值观被撕裂，遇到的挫折也让我重新审视自己努力的方向，但是挫折再多终归是成长，我不该活在未来，但也不该徘徊于过去，2023，再加油！</p>
]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title>C/C++字符串处理常用技巧</title>
    <url>/2022/04/16/C-C-%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%A4%84%E7%90%86%E5%B8%B8%E7%94%A8%E6%8A%80%E5%B7%A7/</url>
    <content><![CDATA[<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1>
<p>由于在做题时，经常纠结到底该使用C还是C<ins>风格的字符串，而且对读入方式也比较纠结，所以写一篇blog来总结一下C/C</ins>中字符串处理的技巧。</p>
<h1 id="c语言"><a class="markdownIt-Anchor" href="#c语言"></a> C语言</h1>
<p>与其说C语言的字符串是字符串，不如说是字符数组，C语言中对字符串的操作也大多依托于指针。</p>
<h2 id="声明字符串"><a class="markdownIt-Anchor" href="#声明字符串"></a> 声明字符串</h2>
<figure class="highlight c"><table><tr><td class="code"><pre><code class="hljs c">[...]<br><span class="hljs-keyword">char</span> str1[<span class="hljs-number">1001</span>]; <span class="hljs-comment">//声明一个字符数组</span><br><span class="hljs-keyword">char</span> str2[<span class="hljs-number">1001</span>]=<span class="hljs-string">&quot;Hello, World!&quot;</span> <span class="hljs-comment">//为其赋初值（此方法会自动添加结束符）</span><br>[...]<br></code></pre></td></tr></table></figure>
<p>当然，由于C语言字符串本质上是字符串，也可以使用逐个字符赋值的方法，需要注意的是别忘记在行末加上结束符。</p>
<h2 id="读入字符串"><a class="markdownIt-Anchor" href="#读入字符串"></a> 读入字符串</h2>
<h3 id="1-scanf"><a class="markdownIt-Anchor" href="#1-scanf"></a> 1. scanf</h3>
<figure class="highlight c"><table><tr><td class="code"><pre><code class="hljs C"><span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%s&quot;</span>,str);<br></code></pre></td></tr></table></figure>
<p>参数为想要读入的字符串的初地址，如果希望字符串下标从1开始，可以将参数改为<strong>str+1</strong></p>
<p>使用该方式读入的特点：</p>
<ul>
<li>遇到空格、回车会自动停止，<strong>并将其遗留在缓冲区中</strong></li>
<li>自动为字符串添加结束符’\0’</li>
</ul>
<p><strong>scanf用于读取单个字符时需要特别注意</strong></p>
<p>若想要使用循环来为字符串的各个字符赋值，由于缓冲区中不符合条件的字符会被scanf丢弃，所以不需要添加占位符，直接处理即可。但是，读取单个字符的情况并不会像读取字符串一样抛弃空格和换行，所以有如下代码的结果：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><code class="hljs C"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-keyword">char</span> str1[<span class="hljs-number">101</span>];<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>	<br>	<span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">5</span>;i++)<br>	&#123;<br>		<span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%c&quot;</span>,&amp;str1[i]);<br>	&#125;<br>	<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%s&quot;</span>,str1);<br>&#125;<br><span class="hljs-comment">/*input:</span><br><span class="hljs-comment">  ab ef&lt;回车&gt;</span><br><span class="hljs-comment">  output:</span><br><span class="hljs-comment">  ab ef</span><br><span class="hljs-comment">*/</span><br></code></pre></td></tr></table></figure>
<p><strong>总而言之，当使用%s读取时，scanf会忽略回车和空格；使用%c读取时，不会忽略回车和空格，且要考虑scanf的占位符和缓冲区，所以用scanf读取单个字符时常常需要使用空格作为占位符</strong></p>
<h2 id="2getchar"><a class="markdownIt-Anchor" href="#2getchar"></a> 2.getchar</h2>
<p>getchar的特点是不会抛弃如何字符，而是直接将缓冲区中的内容读入目标地址中。可以利用getchar的这一特点来清楚缓冲区中的换行。</p>
<h2 id="3gets"><a class="markdownIt-Anchor" href="#3gets"></a> 3.gets</h2>
<p>gets与scanf有如下不同的地方：</p>
<ul>
<li>gets会直接读取一整行，不会丢弃空格</li>
<li>gets会将行末的回车符从缓冲区中取出并丢弃（而在结尾补上结束符），所以gets读完之后并不需要getchar来清理缓冲区。</li>
</ul>
<h2 id="4fgets"><a class="markdownIt-Anchor" href="#4fgets"></a> 4.fgets</h2>
<p>函数原型：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><code class="hljs C"><span class="hljs-function"><span class="hljs-keyword">char</span> *<span class="hljs-title">fgets</span><span class="hljs-params">(<span class="hljs-keyword">char</span> *s, <span class="hljs-keyword">int</span> size, FILE *stream)</span></span>;<br></code></pre></td></tr></table></figure>
<p>其中size是读取的最大长度（不过通常不会填满，需要留出一位给结束符），当读取长度大于size时，多出来的长度会被截取；读取长度小于size时，fegts会将缓冲区中的换行符读入字符串（与gets不同），接下来的一个位置用结束符来填充。</p>
<p>第三个参数是文件指针，若从键盘读入，则用使用常数stdin</p>
<h2 id="输出字符串"><a class="markdownIt-Anchor" href="#输出字符串"></a> 输出字符串</h2>
<h3 id="printf"><a class="markdownIt-Anchor" href="#printf"></a> printf</h3>
<p>正常输出，遇到停止符则不再输出，且不会自动添加换行符，当需要换行时，需要手动添加’\n’。</p>
<h3 id="puts"><a class="markdownIt-Anchor" href="#puts"></a> puts</h3>
<p>输出完字符串后会<strong>自动再输出一个换行符</strong>。</p>
<h2 id="处理字符串"><a class="markdownIt-Anchor" href="#处理字符串"></a> 处理字符串</h2>
<h3 id="1-strlen"><a class="markdownIt-Anchor" href="#1-strlen"></a> 1. strlen</h3>
<figure class="highlight c"><table><tr><td class="code"><pre><code class="hljs C"><span class="hljs-function"><span class="hljs-keyword">size_t</span> <span class="hljs-title">strlen</span><span class="hljs-params">(<span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span>* str)</span></span>;<br></code></pre></td></tr></table></figure>
<p>计算字符串长度，遇到第一个停止符才算结束，若字符串不是以’\0’结束则会不停找下去。</p>
<h3 id="21-strcat"><a class="markdownIt-Anchor" href="#21-strcat"></a> 2.1 strcat</h3>
<figure class="highlight c"><table><tr><td class="code"><pre><code class="hljs C"><span class="hljs-function"><span class="hljs-keyword">char</span>* <span class="hljs-title">strcat</span><span class="hljs-params">(<span class="hljs-keyword">char</span>* s1, <span class="hljs-keyword">char</span>* s2)</span></span>;<br></code></pre></td></tr></table></figure>
<p>strcat() 将把 arrayName2 连接到 arrayName1 后面，<strong>并删除原来 arrayName1 最后的结束标志’\0’</strong>。</p>
<h3 id="22-strncat"><a class="markdownIt-Anchor" href="#22-strncat"></a> 2.2 strncat</h3>
<figure class="highlight c"><table><tr><td class="code"><pre><code class="hljs C"><span class="hljs-function"><span class="hljs-keyword">char</span>* <span class="hljs-title">strncat</span><span class="hljs-params">(<span class="hljs-keyword">char</span>* s1, <span class="hljs-keyword">char</span>* s2,<span class="hljs-keyword">size_t</span> count)</span></span>;<br></code></pre></td></tr></table></figure>
<p>与上述函数类似，但限制了拼接字符的个数。</p>
<h3 id="31-strcpy"><a class="markdownIt-Anchor" href="#31-strcpy"></a> 3.1 strcpy</h3>
<figure class="highlight c"><table><tr><td class="code"><pre><code class="hljs C"><span class="hljs-function"><span class="hljs-keyword">char</span> *<span class="hljs-title">strcpy</span><span class="hljs-params">(<span class="hljs-keyword">char</span>* dest,<span class="hljs-keyword">char</span>* source)</span></span>;<br></code></pre></td></tr></table></figure>
<p>将字符串source复制到字符串dest中，并覆盖原始字符串，可以用来为字符串变量赋值。从首元素开始，遇到\0结束。</p>
<h3 id="32-strncpy"><a class="markdownIt-Anchor" href="#32-strncpy"></a> 3.2 strncpy</h3>
<figure class="highlight c"><table><tr><td class="code"><pre><code class="hljs c"><span class="hljs-function"><span class="hljs-keyword">char</span> *<span class="hljs-title">strncpy</span><span class="hljs-params">(<span class="hljs-keyword">char</span>* dest,<span class="hljs-keyword">char</span>* source,<span class="hljs-keyword">size_t</span> count)</span></span><br></code></pre></td></tr></table></figure>
<p>将source字符串中前count个字符复制到dest中，并覆盖原始字符串。与strcpy不同的是，该函数只会更改前count个字符。</p>
<h3 id="41-strcmp"><a class="markdownIt-Anchor" href="#41-strcmp"></a> 4.1 strcmp</h3>
<p>按字典序比较字符串。</p>
<p>返回值为正数（未必为1），负数或0。</p>
<h3 id="42-strncmp"><a class="markdownIt-Anchor" href="#42-strncmp"></a> 4.2 strncmp</h3>
<p>按字典序比较前n个字符。</p>
<h3 id="43-stricmp"><a class="markdownIt-Anchor" href="#43-stricmp"></a> 4.3 stricmp</h3>
<p>按字典序（但忽略大小写）比较前n个字符。</p>
<h3 id="51-strchr"><a class="markdownIt-Anchor" href="#51-strchr"></a> 5.1 strchr</h3>
<figure class="highlight c"><table><tr><td class="code"><pre><code class="hljs C"><span class="hljs-function"><span class="hljs-keyword">char</span>* <span class="hljs-title">strchr</span><span class="hljs-params">(<span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span>* str,<span class="hljs-keyword">int</span> _val)</span></span>;<br></code></pre></td></tr></table></figure>
<p>返回指定字符在字符串中首次出现的地址，若想要利用此函数获取索引，则需要减去字符串的首地址，未找到则返回NULL。</p>
<h3 id="52-strrchar"><a class="markdownIt-Anchor" href="#52-strrchar"></a> 5.2 strrchar</h3>
<p>与上一个函数类似，但是从字符串尾部开始寻找。</p>
<h3 id="53-strstr"><a class="markdownIt-Anchor" href="#53-strstr"></a> 5.3 strstr</h3>
<figure class="highlight c"><table><tr><td class="code"><pre><code class="hljs C"><span class="hljs-function"><span class="hljs-keyword">char</span>* <span class="hljs-title">strstr</span><span class="hljs-params">(<span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span>* str1,<span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span>* str2)</span></span>;<br></code></pre></td></tr></table></figure>
<p>在字符串str1中查找字符串str2的位置，若找到，则返回str2第一个字符在str1中的位置的指针，若没找到，返回NULL</p>
<h3 id="6-atoiatofatol"><a class="markdownIt-Anchor" href="#6-atoiatofatol"></a> 6. atoi,atof,atol</h3>
<p>分别是字符串转整型、浮点型、长整型。</p>
<p>遇到正负号或数字则开始转化，遇到非数字字符则停止。</p>
<h3 id="7-strtok"><a class="markdownIt-Anchor" href="#7-strtok"></a> 7. strtok</h3>
<figure class="highlight c"><table><tr><td class="code"><pre><code class="hljs C"><span class="hljs-function"><span class="hljs-keyword">char</span> *<span class="hljs-title">strtok</span><span class="hljs-params">(<span class="hljs-keyword">char</span> *str, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *delim)</span></span>;<br></code></pre></td></tr></table></figure>
<p>类似python中的split方法，但是该函数将str中包含的所有delim子串转化成’\0’</p>
<h3 id="8sprintf"><a class="markdownIt-Anchor" href="#8sprintf"></a> 8.sprintf</h3>
<figure class="highlight c"><table><tr><td class="code"><pre><code class="hljs C"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">sprintf</span><span class="hljs-params">(<span class="hljs-keyword">char</span> *str, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *format, ...)</span></span>;<br></code></pre></td></tr></table></figure>
<p>将format中（类似printf格式）的数据以字符串形式存到str中，该方法转化的字符串与使用printf的结果是一样的，只是不在屏幕上输出而已。尝尝用于想要将整型变量转化成字符串的情形。</p>
<h3 id="9sscanf"><a class="markdownIt-Anchor" href="#9sscanf"></a> 9.sscanf</h3>
<figure class="highlight c"><table><tr><td class="code"><pre><code class="hljs C"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">sscanf</span><span class="hljs-params">(<span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *str, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *format, ...)</span></span>;<br></code></pre></td></tr></table></figure>
<p>与sprintf相同但是方向相反，是将字符串中的数据读入到后续format代表的数据中。</p>
<h1 id="c"><a class="markdownIt-Anchor" href="#c"></a> C++</h1>
<p>C<ins>在某种意义上可以看成C语言的扩展，所以上文提到的C语言风格字符串处理方式，在C</ins>中也可以用。另一方面，C++在C语言的基础上增加了<strong>类、流</strong>的概念，因此有了更多的操作空间。</p>
<h2 id="声明字符串-2"><a class="markdownIt-Anchor" href="#声明字符串-2"></a> 声明字符串</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><code class="hljs C++">string s;<span class="hljs-comment">//声明一个string对象，可以进行‘+’操作</span><br><span class="hljs-function">string <span class="hljs-title">s1</span><span class="hljs-params">()</span></span>;  <span class="hljs-comment">// s1 = &quot;&quot;</span><br><span class="hljs-function">string <span class="hljs-title">s2</span><span class="hljs-params">(<span class="hljs-string">&quot;Hello&quot;</span>)</span></span>;  <span class="hljs-comment">// s2 = &quot;Hello&quot;</span><br><span class="hljs-function">string <span class="hljs-title">s3</span><span class="hljs-params">(<span class="hljs-number">4</span>, <span class="hljs-string">&#x27;K&#x27;</span>)</span></span>;  <span class="hljs-comment">// s3 = &quot;KKKK&quot;</span><br><span class="hljs-function">string <span class="hljs-title">s4</span><span class="hljs-params">(<span class="hljs-string">&quot;12345&quot;</span>, <span class="hljs-number">1</span>, <span class="hljs-number">3</span>)</span></span>;  <span class="hljs-comment">//s4 = &quot;234&quot;，即 &quot;12345&quot; 的从下标 1 开始，长度为 3 的子串</span><br>s.<span class="hljs-built_in">assign</span>(str); <span class="hljs-comment">//形参可以是string对象或者C字符串</span><br></code></pre></td></tr></table></figure>
<h2 id="读入字符串-2"><a class="markdownIt-Anchor" href="#读入字符串-2"></a> 读入字符串</h2>
<h3 id="cin"><a class="markdownIt-Anchor" href="#cin"></a> cin</h3>
<p>c++中可以用cin来为字符数组和string对象读取数据，cin的特性与scanf十分相似，都是遇到空格、换行停止，且会将最后的换行符留在缓冲区中。</p>
<p><strong>不同的是，scanf不可以用于读入string对象。</strong></p>
<h3 id="cinget"><a class="markdownIt-Anchor" href="#cinget"></a> cin.get</h3>
<p>该函数有三种用法：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><code class="hljs C++">cin.<span class="hljs-built_in">get</span>(ch); <span class="hljs-comment">//读入单个字符，效果和getchar类似</span><br>cin.<span class="hljs-built_in">get</span>(str,len); <span class="hljs-comment">//读入字符串，遇到换行符结束，并在结尾补&#x27;\0&#x27;，不会将换行符从流中去掉</span><br>cin.<span class="hljs-built_in">get</span>(str,len,ch) <span class="hljs-comment">//读入字符串，遇到ch结束，并在结尾补&#x27;\0&#x27;,不会将换行从流中去掉</span><br></code></pre></td></tr></table></figure>
<h3 id="cingetline"><a class="markdownIt-Anchor" href="#cingetline"></a> cin.getline</h3>
<p>该函数有两个原型：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><code class="hljs C++">cin.<span class="hljs-built_in">getline</span>(<span class="hljs-keyword">char</span>* str,<span class="hljs-keyword">int</span> n);<br>cin.<span class="hljs-built_in">getline</span>(<span class="hljs-keyword">char</span>* str,<span class="hljs-keyword">int</span> n,<span class="hljs-keyword">int</span> <span class="hljs-keyword">char</span>);<br></code></pre></td></tr></table></figure>
<p>这两个函数与上文的cin.get看似相似，实则会从流中获得空格并丢弃。</p>
<h2 id="输出字符串-2"><a class="markdownIt-Anchor" href="#输出字符串-2"></a> 输出字符串</h2>
<p>这部分没什么好说的，似乎就比C多了一个cout。</p>
<h2 id="处理字符串-2"><a class="markdownIt-Anchor" href="#处理字符串-2"></a> 处理字符串</h2>
<p>这一部分主要介绍C++中string对象的成员函数，其中大部分成员函数的参数可以是string对象也可以是C的字符串指针。</p>
<h3 id="1-length"><a class="markdownIt-Anchor" href="#1-length"></a> 1. length</h3>
<p>用于获取该字符串的长度。</p>
<h3 id="2-append"><a class="markdownIt-Anchor" href="#2-append"></a> 2. append</h3>
<p>append方法对string对象进行原地修改。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><code class="hljs C++"><span class="hljs-function">string <span class="hljs-title">s1</span><span class="hljs-params">(<span class="hljs-string">&quot;123&quot;</span>)</span>, <span class="hljs-title">s2</span><span class="hljs-params">(<span class="hljs-string">&quot;abc&quot;</span>)</span></span>;<br>s1.<span class="hljs-built_in">append</span>(s2);  <span class="hljs-comment">// s1 = &quot;123abc&quot;</span><br>s1.<span class="hljs-built_in">append</span>(s2, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>);  <span class="hljs-comment">// s1 = &quot;123abcbc&quot;,添加从下标1开始，长度为2的子串</span><br>s1.<span class="hljs-built_in">append</span>(<span class="hljs-number">3</span>, <span class="hljs-string">&#x27;K&#x27;</span>);  <span class="hljs-comment">// s1 = &quot;123abcbcKKK&quot;</span><br>s1.<span class="hljs-built_in">append</span>(<span class="hljs-string">&quot;ABCDE&quot;</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>);  <span class="hljs-comment">// s1 = &quot;123abcbcKKKCDE&quot;，添加 &quot;ABCDE&quot; 的子串(2, 3)</span><br></code></pre></td></tr></table></figure>
<h3 id="3substr"><a class="markdownIt-Anchor" href="#3substr"></a> 3.substr</h3>
<figure class="highlight c++"><table><tr><td class="code"><pre><code class="hljs C++">string s1 = <span class="hljs-string">&quot;this is ok&quot;</span>;<br>string s2 = s1.<span class="hljs-built_in">substr</span>(<span class="hljs-number">2</span>, <span class="hljs-number">4</span>);  <span class="hljs-comment">// s2 = &quot;is i&quot;，截取长度为4的子串</span><br>s2 = s1.<span class="hljs-built_in">substr</span>(<span class="hljs-number">2</span>);  <span class="hljs-comment">// s2 = &quot;is is ok&quot;,未指定第二个长度则直接截取到尾部。</span><br></code></pre></td></tr></table></figure>
<h3 id="4-erase"><a class="markdownIt-Anchor" href="#4-erase"></a> 4. erase</h3>
<p>与append一样，对string对象进行原地修改。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><code class="hljs C++"><span class="hljs-function">string <span class="hljs-title">s1</span><span class="hljs-params">(<span class="hljs-string">&quot;Real Steel&quot;</span>)</span></span>;<br>s1.<span class="hljs-built_in">erase</span>(<span class="hljs-number">1</span>, <span class="hljs-number">3</span>);  <span class="hljs-comment">//删除子串(1, 3)，此后 s1 = &quot;R Steel&quot;</span><br>s1.<span class="hljs-built_in">erase</span>(<span class="hljs-number">5</span>);  <span class="hljs-comment">//删除下标5及其后面的所有字符，此后 s1 = &quot;R Ste&quot;</span><br></code></pre></td></tr></table></figure>
<h3 id="5insert"><a class="markdownIt-Anchor" href="#5insert"></a> 5.insert</h3>
<p>同样是原地修改</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><code class="hljs C++"><span class="hljs-function">string <span class="hljs-title">s1</span><span class="hljs-params">(<span class="hljs-string">&quot;Limitless&quot;</span>)</span>, <span class="hljs-title">s2</span><span class="hljs-params">(<span class="hljs-string">&quot;00&quot;</span>)</span></span>;<br>s1.<span class="hljs-built_in">insert</span>(<span class="hljs-number">2</span>, <span class="hljs-string">&quot;123&quot;</span>);  <span class="hljs-comment">//在下标 2 处插入字符串&quot;123&quot;，s1 = &quot;Li123mitless&quot;</span><br>s1.<span class="hljs-built_in">insert</span>(<span class="hljs-number">3</span>, s2);  <span class="hljs-comment">//在下标 2 处插入 s2 , s1 = &quot;Li10023mitless&quot;</span><br>s1.<span class="hljs-built_in">insert</span>(<span class="hljs-number">3</span>, <span class="hljs-number">5</span>, <span class="hljs-string">&#x27;X&#x27;</span>);  <span class="hljs-comment">//在下标 3 处插入 5 个 &#x27;X&#x27;，s1 = &quot;Li1XXXXX0023mitless&quot;</span><br></code></pre></td></tr></table></figure>
<h3 id="6compare"><a class="markdownIt-Anchor" href="#6compare"></a> 6.compare</h3>
<p>与C语言中strcmp的效果类似。</p>
<h3 id="7c_str"><a class="markdownIt-Anchor" href="#7c_str"></a> 7.c_str</h3>
<p>返回string对象的C字符串数组指针。</p>
<h3 id="8-find与rfind"><a class="markdownIt-Anchor" href="#8-find与rfind"></a> 8. find与rfind</h3>
<figure class="highlight c++"><table><tr><td class="code"><pre><code class="hljs C++">s1.<span class="hljs-built_in">find</span>(s2,pos); <span class="hljs-comment">//查找字符串s2第一次出现的位置</span><br>s1.<span class="hljs-built_in">find</span>(ch,pos); <span class="hljs-comment">//查找字符ch第一次出现的位置</span><br></code></pre></td></tr></table></figure>
<p>其中pos是起始的搜索位置，若未指定，则从头开始。</p>
<h1 id="结语"><a class="markdownIt-Anchor" href="#结语"></a> 结语</h1>
<p>C++和C语言风格的字符串有一些类似的地方，函数调用方法有很大不同，做题时特别需要注意的是读入字符串时回车是否会被取出并丢弃，否则会引发许多问题。</p>
<p><strong>That’s all！</strong></p>
]]></content>
      <tags>
        <tag>C/C++</tag>
        <tag>编程语言</tag>
      </tags>
  </entry>
  <entry>
    <title>C++之STL简易食用指南</title>
    <url>/2022/03/10/C-%E4%B9%8BSTL%E7%AE%80%E6%98%93%E9%A3%9F%E7%94%A8%E6%8C%87%E5%8D%97/</url>
    <content><![CDATA[<h1 id="一-何为stl"><a class="markdownIt-Anchor" href="#一-何为stl"></a> 一、何为STL</h1>
<blockquote>
<p><em>STL 是“Standard Template Library”的缩写，中文译为“标准模板库”。STL 是 C++ 标准库的一部分，不用单独安装。C++ 对模板（Template）支持得很好，STL 就是借助模板把常用的数据结构及其算法都实现了一遍，并且做到了数据结构和算法的分离。</em><br>
————摘自C语言中文网</p>
</blockquote>
<h1 id="二-容器"><a class="markdownIt-Anchor" href="#二-容器"></a> 二、容器</h1>
<p><font color="orange">以下代码中的T可以是任何一中数据类型,可以是自定义类型，甚至可以嵌套。</font></p>
<h2 id="1-栈"><a class="markdownIt-Anchor" href="#1-栈"></a> 1、栈</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><code class="hljs C++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;stack&gt;</span></span><br><br><span class="hljs-comment">//声明：</span><br>stack&lt;T&gt;mystack;<br><br><span class="hljs-comment">//常用方法：</span><br><span class="hljs-keyword">void</span> mystack.<span class="hljs-built_in">push</span>(T elem); <span class="hljs-comment">//压栈</span><br><span class="hljs-keyword">void</span> mystack.<span class="hljs-built_in">pop</span>(); <span class="hljs-comment">//出栈</span><br>T mystack.<span class="hljs-built_in">top</span>(); <span class="hljs-comment">//返回栈顶的元素</span><br><span class="hljs-keyword">int</span> mystack.<span class="hljs-built_in">size</span>(); <span class="hljs-comment">//返回栈中元素个数</span><br><span class="hljs-keyword">bool</span> mystack.<span class="hljs-built_in">empty</span>(); <span class="hljs-comment">//判断栈是否为空</span><br></code></pre></td></tr></table></figure>
<h2 id="2-队列"><a class="markdownIt-Anchor" href="#2-队列"></a> 2、队列</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><code class="hljs C++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;queue&gt;</span></span><br><br><span class="hljs-comment">//声明</span><br>queue&lt;T&gt;myqueue;<br><br><span class="hljs-comment">//常用方法</span><br><span class="hljs-keyword">void</span> myqueue.<span class="hljs-built_in">push</span>(T elem); <span class="hljs-comment">//入队</span><br>T myqueue.<span class="hljs-built_in">front</span>(); <span class="hljs-comment">//返回队头元素</span><br>T myqueue.<span class="hljs-built_in">back</span>(); <span class="hljs-comment">//返回队尾元素</span><br><span class="hljs-keyword">void</span> myqueue.<span class="hljs-built_in">pop</span>(); <span class="hljs-comment">//出队</span><br><span class="hljs-keyword">int</span> myqueue.<span class="hljs-built_in">size</span>(); <span class="hljs-comment">//返回队列中元素个数</span><br><span class="hljs-keyword">bool</span> myqueue.<span class="hljs-built_in">isempty</span>(); <span class="hljs-comment">//判断队列是否为空</span><br></code></pre></td></tr></table></figure>
<h3 id="双端队列deque"><a class="markdownIt-Anchor" href="#双端队列deque"></a> 双端队列deque</h3>
<p>双端队列可以在队列的两端进行存取操作，包含在头文件deque中，声明方法与普通队列类似。<br>
接下来使用表格形式来展示部分常用的方法</p>
<table>
<thead>
<tr>
<th>方法名</th>
<th style="text-align:center">用处</th>
</tr>
</thead>
<tbody>
<tr>
<td>front()</td>
<td style="text-align:center">返回第一个元素</td>
</tr>
<tr>
<td>back()</td>
<td style="text-align:center">返回最后一个元素</td>
</tr>
<tr>
<td>push_back()</td>
<td style="text-align:center">在序列的尾部添加一个元素</td>
</tr>
<tr>
<td>push_front()</td>
<td style="text-align:center">在序列的头部添加一个元素</td>
</tr>
<tr>
<td>pop_back()</td>
<td style="text-align:center">移除容器尾部的元素</td>
</tr>
<tr>
<td>pop_front()</td>
<td style="text-align:center">移除容器头部的元素</td>
</tr>
</tbody>
</table>
<p>deque和vector的作用十分类似，但实际上deque更适合频繁的入队、出队操作。</p>
<h3 id="优先队列priority_queue"><a class="markdownIt-Anchor" href="#优先队列priority_queue"></a> 优先队列priority_queue</h3>
<p>普通的队列是一个先进先出的序列，而优先队列会在队内根据优先级对元素进行排序，是一种<em>先进最高级先出</em>的队列。其本质上是一个堆,每次出队时，会将队列内优先级最高的元素弹出。</p>
<table>
<thead>
<tr>
<th>方法名</th>
<th style="text-align:center">用处</th>
</tr>
</thead>
<tbody>
<tr>
<td>top</td>
<td style="text-align:center">访问队头元素</td>
</tr>
<tr>
<td>empty</td>
<td style="text-align:center">队列是否为空</td>
</tr>
<tr>
<td>size</td>
<td style="text-align:center">返回队列内元素个数</td>
</tr>
<tr>
<td>push</td>
<td style="text-align:center">插入元素到队尾 (并排序)</td>
</tr>
<tr>
<td>pop</td>
<td style="text-align:center">弹出队头元素</td>
</tr>
</tbody>
</table>
<p>除了front改为top外，其他方法没有什么区别。<br>
优先队列比较复杂的是声明操作,其定义为：<br>
priority_queue&lt;Type, Container, Functional&gt;<br>
Type是模板类型，Container是容器，Functional是仿函数（一般写为greater<T>或less<T>）</T></T></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><code class="hljs C++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;queue&gt;</span></span><br><span class="hljs-comment">//下面这个声明新建一个将int从小到大排序的优先队列</span><br>priority_queue &lt;<span class="hljs-keyword">int</span>,vector&lt;<span class="hljs-keyword">int</span>&gt;,greater&lt;<span class="hljs-keyword">int</span>&gt; &gt; pq1;<br><span class="hljs-comment">//下面这个声明新建一个将int从大到小排序的优先队列</span><br>priority_queue &lt;<span class="hljs-keyword">int</span>,vector&lt;<span class="hljs-keyword">int</span>&gt;,less&lt;<span class="hljs-keyword">int</span>&gt; &gt; pq2;<br><span class="hljs-comment">//！！！注意，部分编译器会将“&gt;&gt;”认成右移运算符，所以需要加一个空格以区分</span><br></code></pre></td></tr></table></figure>
<h4 id="在优先队列中使用自定义类"><a class="markdownIt-Anchor" href="#在优先队列中使用自定义类"></a> 在优先队列中使用自定义类</h4>
<p>在实际运用中很经常遇到的情况是对含有多个属性的记录进行排序，这时候就要使用自定义类（结构体）。而如果直接将上述代码中的int改为自定义结构体，实际上是会报错的。因为我们并没有为结构体定义如何比较他们的大小（也就是优先级），两个学生，谁的优先级更高，到底是由身高、体重还是成绩决定呢？<br>
所以，在使用自定义类（结构体）时，需要先进行运算符重载（只需要重载小于号）：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><code class="hljs C++"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Student</span></span><br><span class="hljs-class">&#123;</span><br>    <span class="hljs-keyword">int</span> grade,height;<br>    <span class="hljs-built_in">Student</span>(<span class="hljs-keyword">int</span> grade, <span class="hljs-keyword">int</span> height)<br>    &#123;<br>        <span class="hljs-keyword">this</span>.grade=grade;<br>        <span class="hljs-keyword">this</span>.height=height;<br>    &#125;<br>    <span class="hljs-comment">//下面是重载运算符的部分</span><br>    <span class="hljs-keyword">bool</span> <span class="hljs-keyword">operator</span> &lt; (<span class="hljs-keyword">const</span> Student&amp; a) <span class="hljs-keyword">const</span><br>    &#123;<br>        <span class="hljs-comment">//若成绩一样就用身高</span><br>        <span class="hljs-keyword">if</span>(<span class="hljs-keyword">this</span>.grade==a.grade)<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.height&lt;a.height;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.grade&lt;a.grade;<br>    &#125;<br>&#125;<br><br>[...]<br><br>priority_queue &lt;<span class="hljs-keyword">int</span>,vector&lt;<span class="hljs-keyword">int</span>&gt;,less&lt;<span class="hljs-keyword">int</span>&gt; &gt; pq1;<br></code></pre></td></tr></table></figure>
<p>这样就可以声明一个优先队列，队列优先弹出成绩高的学生，若成绩一样，就优先弹出身高高的学生。<br>
当然，也可以通过自定义仿函数的方法来定义优先级，本着实用主义的原则，会其中一种方法就可以，这里不再赘述。</p>
<h2 id="3-映射map"><a class="markdownIt-Anchor" href="#3-映射map"></a> 3、映射map</h2>
<p>map的定义类似python中的字典，是一个键值对映射，包含两个模板参数key和value。map的内部实现是一棵红黑树，所以<strong>key必须定义小于号运算符</strong>。map也可以被当做哈希表使用。由于map内部已经定义“[]”运算符，所以元素的存取可以通过下标来实现，十分方便。<br>
举个最常用的例子：统计单词重复出现的次数</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><code class="hljs C++"><span class="hljs-comment">//健是字符串，值是整型</span><br>map&lt;string,<span class="hljs-keyword">int</span>&gt;words;<br>[...]<br>string article[<span class="hljs-number">101</span>];<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br>&#123;<br>    map[article[i]]++;<br>&#125;<br></code></pre></td></tr></table></figure>
<p>需要注意的是，当使用“[]”操作没有找到对应的键时，map会自动创建一个值为0的键值对，积累之后，可能会产生大量的无意义记录，占用空间，并且影响运行速度。所以建议在使用下标获取值之前，事先使用map.find()找到该元素（该方法返回一个迭代器，若不存在，则会返回map.end()）。</p>
<h1 id="二-算法"><a class="markdownIt-Anchor" href="#二-算法"></a> 二、算法</h1>
<p>算法在上一篇《C语言的上机小技巧》已经说的差不多了，这里不再赘述。</p>
]]></content>
      <categories>
        <category>课内</category>
        <category>数据结构</category>
      </categories>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>C#学习笔记</title>
    <url>/2022/07/09/C-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1>
<p>参考书籍：《C#图解教程》</p>
<h1 id="一-c编程概述"><a class="markdownIt-Anchor" href="#一-c编程概述"></a> 一、C#编程概述</h1>
<h2 id="一个简单的c程序"><a class="markdownIt-Anchor" href="#一个简单的c程序"></a> 一个简单的C#程序</h2>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs C#">using System;<br>namespace Simple<br>&#123;<br>    Class Program<br>    &#123;<br>        static void main()<br>        &#123;<br>            Console.WriteLine(&quot;Hello, World!&quot;);<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>
<p>文件名为<code>SimpleProgram.cs</code>，这点和Java不太一样，类名和文件名可以不一样。</p>
<h2 id="输入和输出字符串"><a class="markdownIt-Anchor" href="#输入和输出字符串"></a> 输入和输出字符串</h2>
<p>使用函数<code>Write</code>和<code>WriteLine</code>，其中格式化方法可以使用类似python的方法。例如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs C#">Console.WriteLine(&quot;Two sample integers are &#123;0&#125; and &#123;1&#125;&quot;,3,6);<br>// C# 6.0之后可以使用下面的方式<br>Console.WriteLine($&quot;Two sample integers are &#123;var1&#125; and &#123;var2&#125;&quot;);<br></code></pre></td></tr></table></figure>
<p>对数字格式化时可以使用更复杂的表达方式如**{index,alignment:format}**其中index是必选项。</p>
<h1 id="二-类型-储存和变量"><a class="markdownIt-Anchor" href="#二-类型-储存和变量"></a> 二、类型、储存和变量</h1>
<h2 id="栈和堆"><a class="markdownIt-Anchor" href="#栈和堆"></a> 栈和堆</h2>
<p>以下数据存放在栈中：</p>
<ul>
<li>某些类型变量的值</li>
<li>程序当前的执行环境</li>
<li>传递给方法的参数</li>
</ul>
<h2 id="值类型和引用类型"><a class="markdownIt-Anchor" href="#值类型和引用类型"></a> 值类型和引用类型</h2>
<p>值类型只需要一段单独的内存，用于储存实际的数据，它总是位于堆中。</p>
<p>引用类型需要两段内存，第一段储存实际的数据，它总是位于堆中；第二段是一个引用，指向数据在堆中存放的位置。</p>
<h1 id="三-类"><a class="markdownIt-Anchor" href="#三-类"></a> 三、类</h1>
<p>类有两种成员，一种是数据成员，一种是函数成员。</p>
<h2 id="类成员"><a class="markdownIt-Anchor" href="#类成员"></a> 类成员</h2>
<p>如果没有初始化，字段的值会被编译器设置为默认值（0和null）。</p>
<h2 id="实例化"><a class="markdownIt-Anchor" href="#实例化"></a> 实例化</h2>
<p>实例化一个类的手段和C++类似，都是使用new关键字，同时带上圆括号，需要时可以加上参数。</p>
<h2 id="访问修饰符"><a class="markdownIt-Anchor" href="#访问修饰符"></a> 访问修饰符</h2>
<ul>
<li>private只在类的内部可访问</li>
<li>public任何类可以访问</li>
<li>protected所有继承该类的类可以访问</li>
<li>internal该程序集内声明的类可以访问</li>
<li>protected internal所有继承该类或者在该程序集内声明的类可以访问</li>
</ul>
<h2 id="静态成员"><a class="markdownIt-Anchor" href="#静态成员"></a> 静态成员</h2>
<p>可以从类的内部和外部访问这个静态成员，从外部访问时，可以使用<code>using static</code>关键字，从而省去前缀。</p>
<p>静态字段的生命期不需要依赖类，而普通字段只有在实例创建后才开始它的生命期。</p>
<p>静态函数成员也类似，但是静态函数成员不能访问实例成员</p>
<h2 id="常量"><a class="markdownIt-Anchor" href="#常量"></a> 常量</h2>
<p>常量比较特殊，它们表现得像静态值，但是它们没有真正的存储位置，而是在编译时被编译器替换，类似C/C++的define</p>
<h2 id="属性"><a class="markdownIt-Anchor" href="#属性"></a> 属性</h2>
<p>属性与字段的相同点和不同点如下：</p>
<ul>
<li>相同
<ul>
<li>都是类成员</li>
<li>都有类型</li>
<li>都可以被赋值和读取</li>
</ul>
</li>
<li>不同
<ul>
<li>属性是一个函数成员</li>
<li>属性不一定为数据存储分配内存</li>
<li>它执行代码</li>
</ul>
</li>
</ul>
<p>且需要一个<strong>set访问器和get访问器</strong></p>
<ul>
<li>set访问器总是拥有一个单独的、隐式的值参，名称为value，与属性的类型相同，拥有一个返回类型void</li>
<li>get访问器没有参数，返回一个与属性类型相同的返回类型</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs C#">private int RealValue;<br><br>public int MyValue<br>&#123;<br>    set&#123;<br>        RealValue=value;<br>    &#125;<br>    get&#123;<br>        return RealValue;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>
<blockquote>
<p>属性访问器尝尝使用字段作为<strong>后备储存</strong>。</p>
<p>不能显式地调用set和get访问器，只能使用类似赋值语句的方法。</p>
</blockquote>
<h3 id="lambda表达式"><a class="markdownIt-Anchor" href="#lambda表达式"></a> lambda表达式</h3>
<p>在C# 7.0以上，引入的lambda表达式，可以用更简洁的语言来表达访问器。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs C#">int MyValue<br>&#123;<br>    set=&gt; value&gt;100?100:value;<br>    get=&gt; theRealValue;<br>&#125;<br></code></pre></td></tr></table></figure>
<p>只有get访问器的属性称为只读属性，只有set访问器的属性称为只写属性，一个属性至少要有两种访问器的其一，否则编译器会报错。与字段相比，属性的好处是可以在读取和输出时完成一些处理。</p>
<h3 id="自动属性"><a class="markdownIt-Anchor" href="#自动属性"></a> 自动属性</h3>
<p>如果想要使用自动属性的话，将get和set的方法体省略，如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs C#">public int MyValue<br>&#123;<br>    set;get;<br>&#125;<br></code></pre></td></tr></table></figure>
<h3 id="静态属性"><a class="markdownIt-Anchor" href="#静态属性"></a> 静态属性</h3>
<p>静态属性有以下特点：</p>
<ul>
<li>不能访问类的实例成员，但能被实例成员访问</li>
<li>不管类是否有实例，它都存在</li>
<li>在类的内部，可以仅使用名称来引用静态属性</li>
<li>在类的外部，可以通过类名或者使用using static结构来引用静态属性</li>
</ul>
<h2 id="构造函数"><a class="markdownIt-Anchor" href="#构造函数"></a> 构造函数</h2>
<p>如果没有为类声明任何构造函数，则编译器会自动定义一个<strong>无参数、无函数体</strong>的默认构造函数；而如果你已经声明了任何一个构造函数，则这个默认构造函数将不会存在。</p>
<h3 id="静态构造函数"><a class="markdownIt-Anchor" href="#静态构造函数"></a> 静态构造函数</h3>
<p>当静态成员被调用时，静态构造函数会随之被调用，<strong>静态构造函数只会被调用一次</strong>，用于初始化静态成员变量。</p>
<h2 id="readonly修饰符"><a class="markdownIt-Anchor" href="#readonly修饰符"></a> readonly修饰符</h2>
<p>与const区别如下：</p>
<ul>
<li>const只能在字段的声明语句中初始化，而readonly还可以在类的任何构造函数中使用。</li>
<li>const的值必须在编译时确定，而readonly可以在运行时确定。</li>
<li>const是静态的，在内存中没有存储位置，而readonly有。</li>
</ul>
<h2 id="索引器"><a class="markdownIt-Anchor" href="#索引器"></a> 索引器</h2>
<p>索引器是一组get和set访问器，与属性类似，属性通常表示单个数据成员，而索引器表示多个数据成员。可以认为索引器是为类的多个数据成员提供set和get访问的属性。</p>
<blockquote>
<p>索引器总是实例成员，因此不能被声明为static</p>
</blockquote>
<h3 id="声明索引器"><a class="markdownIt-Anchor" href="#声明索引器"></a> 声明索引器</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs C#">ReturnType this [Type Params1, ...]<br>&#123;<br>    get<br>    &#123;<br>        <br>    &#125;<br>    set<br>    &#123;<br>        <br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>
<p>使用this关键字作为名称，参数列表在方括号中，且至少声明一个参数。</p>
<blockquote>
<p>索引器可以理解为，用方括号中的参数作为索引，然后在get和set中人为地判断当前索引所指向的成员字段，从而在后续的编程中节省精力。<strong>索引器像方法一样，可以被重载，只需要参数类型不同</strong></p>
</blockquote>
<h1 id="四-方法"><a class="markdownIt-Anchor" href="#四-方法"></a> 四、方法</h1>
<h2 id="参数"><a class="markdownIt-Anchor" href="#参数"></a> 参数</h2>
<p>形参：声明在方法的参数列表中</p>
<p>实参：由于初始化形参和表达式或变量</p>
<h3 id="值参数"><a class="markdownIt-Anchor" href="#值参数"></a> 值参数</h3>
<p>值类型作为值参数在被传递时，会在栈中开辟一个空间，并将值复制给形参。<strong>所以，在方法中无法改变值参数原来的值（除非采用ref关键字）</strong>，与此相对的是<strong>引用类型作为值参数</strong>，在方法内修改引用参数的字段时，会相应地修改原实参的值。</p>
<h3 id="引用参数"><a class="markdownIt-Anchor" href="#引用参数"></a> 引用参数</h3>
<p>特点是：</p>
<ul>
<li>不会在栈上为形参分配内存</li>
<li>形参的参数名作为实参的别名</li>
</ul>
<p>使用ref关键字来声明一个引用参数。</p>
<h3 id="引用类型作为值参数传递"><a class="markdownIt-Anchor" href="#引用类型作为值参数传递"></a> 引用类型作为值参数传递</h3>
<p>此时，若从方法体内部修改这个引用类型变量，会直接切断形参与实参之间的联系，可以把引用类型看成一个指针，可以通过指针修改引用类型变量的字段值，但是若想要修改这个引用变量本身，则不会对实参产生任何效果。</p>
<h3 id="引用类型作为引用参数传递"><a class="markdownIt-Anchor" href="#引用类型作为引用参数传递"></a> 引用类型作为引用参数传递</h3>
<p>此时可以把形参当做实参的别名使用。</p>
<h3 id="输出参数"><a class="markdownIt-Anchor" href="#输出参数"></a> 输出参数</h3>
<p>使用out关键字来表达一个输出参数，输出参数有以下要求：</p>
<ul>
<li>在方法内部，给输出参数赋值后才能读取它。</li>
<li>在方法内部，代码中的每条路径都必须为所有输出参数赋值。</li>
</ul>
<blockquote>
<p>在C# 7.0中，可以不需要预先声明一个变量来用作out参数。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs c#">MyMethod(out MyClass a1, out int a2);<br></code></pre></td></tr></table></figure>
</blockquote>
<h3 id="参数数组"><a class="markdownIt-Anchor" href="#参数数组"></a> 参数数组</h3>
<p>关键字为params。</p>
<p>参数数组的重点有：</p>
<ul>
<li>一个参数列表中只能有一个参数数组</li>
<li>如果有，它必须是最后一个</li>
<li>参数数组表示的所有参数必须是同一类型</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs C#">void ListInts(params int[] inVals);<br></code></pre></td></tr></table></figure>
<p>可以传递由逗号分隔的若干个参数，或一个一维数组来作为实参，当数组在堆中被创建时，实参的值被复制到数组中，所以，可以说参数数组是值参数。</p>
<h3 id="ref局部变量和ref返回"><a class="markdownIt-Anchor" href="#ref局部变量和ref返回"></a> ref局部变量和ref返回</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs C#">ref int y = ref x;<br></code></pre></td></tr></table></figure>
<p>创建一个别名，对x和y变量的修改变得同步。</p>
<p>可以将此技巧和ref返回共同使用。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs C#">&#123;<br>    private int Score;<br>	public ref int RefToVal()<br>    &#123;<br>        return ref Score;<br>    &#125;<br>&#125;<br>...<br>&#123;<br>	ref int OutSide = ref s.RefToVal();<br>&#125;<br></code></pre></td></tr></table></figure>
<p>这样，就可以获得类成员的引用（即使是private限制）</p>
<p>这个功能有以下限制：</p>
<ul>
<li>ref return表达式不能返回以下内容：
<ul>
<li>空值</li>
<li>常量</li>
<li>枚举成员</li>
<li>类或者结构体的属性</li>
<li>指向只读位置的指针</li>
</ul>
</li>
<li>只能指向原先就在调用域内的位置或者字段，不能指向方法内的局部变量</li>
<li>ref局部变量只能被赋值一次</li>
<li>即使一个方法被声明为ref返回方法，这个方法返回时没有加ref关键字，则这个方法返回的也只是普通类型</li>
</ul>
<h3 id="命名参数"><a class="markdownIt-Anchor" href="#命名参数"></a> 命名参数</h3>
<p>类似python，但是使用的是冒号而不是等于号</p>
<figure class="highlight c"><table><tr><td class="code"><pre><code class="hljs C">c.cal(c:<span class="hljs-number">2</span>,b:<span class="hljs-number">3</span>,a:<span class="hljs-number">5</span>);<br></code></pre></td></tr></table></figure>
<p>这样可以不按声明的顺序来调用方法，且代码可读性也得到了提升，但是<strong>位置参数</strong>必须在命名参数前面列出。</p>
<h3 id="可选参数"><a class="markdownIt-Anchor" href="#可选参数"></a> 可选参数</h3>
<p>类似python中的默认参数，调用时可以不为其赋值，则采用声明时的默认值。</p>
<h2 id="运算符重载"><a class="markdownIt-Anchor" href="#运算符重载"></a> 运算符重载</h2>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs C#">public static MyClass operator +(MyClass a,MyClass b);<br></code></pre></td></tr></table></figure>
<p>该方法必须是静态的和公共的，且运算符必须是要操作的类或者结构的成员。</p>
<p>需要注意，递增和递减运算符的前置和后置操作是有所区别的。</p>
<h1 id="五-类和继承"><a class="markdownIt-Anchor" href="#五-类和继承"></a> 五、类和继承</h1>
<h2 id="屏蔽类的成员"><a class="markdownIt-Anchor" href="#屏蔽类的成员"></a> 屏蔽类的成员</h2>
<p>可以使用相同的名称来屏蔽父类的成员，若想屏蔽函数成员，则签名必须相同。要让编译器知道你在故意屏蔽父类的成员，可以使用new修饰符，否则编译器可以会发出警告。</p>
<h2 id="访问类的成员"><a class="markdownIt-Anchor" href="#访问类的成员"></a> 访问类的成员</h2>
<p>与其他语言不同，C#使用<strong>base</strong>关键字来表示父类（或者说是基类）</p>
<h2 id="使用基类的引用"><a class="markdownIt-Anchor" href="#使用基类的引用"></a> 使用基类的引用</h2>
<p>可以用<strong>类型转化运算</strong>将派生类转化为基类，即使两个引用指向的是同样一个实例，但是派生类类型的引用可以“看到”更多成员，而基类类型的引用只能看到在基类中声明的内容（即使被屏蔽）。</p>
<h3 id="虚方法和覆写方法"><a class="markdownIt-Anchor" href="#虚方法和覆写方法"></a> 虚方法和覆写方法</h3>
<p>想要在基类中使用派生类的方法，可以使用虚方法和覆写方法来实现，这个方法有以下要求：</p>
<ul>
<li>派生类的方法和基类的方法要有相同的签名</li>
<li>基类的方法使用virtual标注</li>
<li>派生类的方法使用override标注</li>
</ul>
<p>这样，即使派生类的实例被转化成基类，也可以通过这个基类的引用来访问到派生类中的方法。</p>
<p>可以继续让新的类继承这个派生类，并再次覆写某个方法，这样调用基类时，就会优先调用覆写层数最高的方法。</p>
<blockquote>
<p>与屏蔽（使用new修饰符）不同，屏蔽的方法只会向上传递一级。</p>
</blockquote>
<h2 id="构造函数的执行"><a class="markdownIt-Anchor" href="#构造函数的执行"></a> 构造函数的执行</h2>
<p>构造函数会先执行基类的构造函数。默认情况下，派生类会调用基类的无参数构造函数，但是当你不希望调用无参数构造函数，或基类压根就没有无参数构造函数时，必须在<strong>构造函数初始化语句</strong>中指定它。</p>
<p>调用父类的构造函数：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs C#">public MyDerivedClass(int x,string s) : base(s,x)<br>&#123;<br>    ...<br>&#125;<br></code></pre></td></tr></table></figure>
<p>调用自己的构造函数：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs c#">public MyDerivedClass(int x) : this(x,&quot;Using default string&quot;)<br>&#123;<br>    ...<br>&#125;<br></code></pre></td></tr></table></figure>
<p>这种手段在存在好几种构造方法时特别好用。</p>
<h2 id="抽象类"><a class="markdownIt-Anchor" href="#抽象类"></a> 抽象类</h2>
<p>抽象类不能被实例化，只能被继承。</p>
<p>抽象成员和虚成员类似，但是抽象成员没有实现体，必须在派生类中被实现；且抽象方法只能在抽象类中存在。</p>
<h2 id="密封类"><a class="markdownIt-Anchor" href="#密封类"></a> 密封类</h2>
<p>使用sealed关键字来制定一个密封类，密封类无法被继承。</p>
<h1 id="六-语句和运算符"><a class="markdownIt-Anchor" href="#六-语句和运算符"></a> 六、语句和运算符</h1>
<h2 id="typeof"><a class="markdownIt-Anchor" href="#typeof"></a> typeof</h2>
<p>typeof返回一个System.Type对象，参数是一个类。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs C#">class SomeClass<br>&#123;<br>    ...<br>&#125;<br>Type t = typeof(SomeClass);<br>FieldInfo fieldInfo = t.GetFields();<br>MethodInfo mi = t.GetMethods();<br></code></pre></td></tr></table></figure>
<h2 id="nameof"><a class="markdownIt-Anchor" href="#nameof"></a> nameof</h2>
<p>nameof返回一个字符串，这个字符串是一个变量的非限定名称。</p>
<h2 id="using语句"><a class="markdownIt-Anchor" href="#using语句"></a> using语句</h2>
<blockquote>
<p>using语句和using指令不同，using语句是用于打开文件的（类似python的with语句），而using指令是对某个包的使用</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs C#">using (Type resource = new Type(...))<br>&#123;<br>    ...<br>&#125;<br></code></pre></td></tr></table></figure>
<p>相当于using语句隐式地使用了try…finally…语句。using语句的括号中可以使用多个资源。</p>
<h1 id="七-枚举"><a class="markdownIt-Anchor" href="#七-枚举"></a> 七、枚举</h1>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs C#">enum TrafficLight<br>&#123;<br>    Green,<br>    Yellow,<br>    Red<br>&#125;<br></code></pre></td></tr></table></figure>
<p>默认情况下，编译器把int类型的0,1,2…赋值给枚举值，也可以人为地为其赋值来设置自己想要的值。枚举变量可以作为右值赋值给其他变量。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs C#">enum FaceCards:uint<br>&#123;<br>    Jack=11,<br>    Queen,<br>    King,<br>    Ace,<br>    NumberOfFaceCards=4;<br>    SomeOtherValue<br>&#125;<br></code></pre></td></tr></table></figure>
<p>上面这个程序段显示了如何显示和隐式地给枚举赋值，值得注意的是，枚举中的值可以重复。</p>
<h3 id="位标志"><a class="markdownIt-Anchor" href="#位标志"></a> 位标志</h3>
<p>可以为枚举值赋诸如0x01,0x02,0x04,0x08这样的值来使用位标志。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs C#">[Flags]<br>enum CardCheckSettings : uint<br>&#123;<br>    SingleDeck = 0x01;<br>    LargePictures = 0x02;<br>    FancyNumbers = 0x04;<br>    Animation = 0x08;<br>&#125;<br></code></pre></td></tr></table></figure>
<h1 id="八-数组"><a class="markdownIt-Anchor" href="#八-数组"></a> 八、数组</h1>
<p>数组是对象，其表达方式和C语言有所不同</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs C#">int[,,] MyArray = new int[3,2,4]&#123;...&#125;;<br>//矩形数组<br></code></pre></td></tr></table></figure>
<h2 id="交错数组"><a class="markdownIt-Anchor" href="#交错数组"></a> 交错数组</h2>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs C#">int[][] jagArr = new int[3][];<br></code></pre></td></tr></table></figure>
<p>交错数组的声明方式与矩形数组有所不同，可以把它看成是数组的数组，声明之后在为第一个维度的数组赋值。</p>
<p>交错数组可以和<code>foreach</code>语句配合使用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs C#">foreach(int[] array in arr1)<br>&#123;<br>    foreach(int item in array)<br>    &#123;<br>        ...<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>
<h2 id="数组的成员"><a class="markdownIt-Anchor" href="#数组的成员"></a> 数组的成员</h2>
<table>
<thead>
<tr>
<th>成员</th>
<th>类型</th>
<th>生存期</th>
<th>意义</th>
</tr>
</thead>
<tbody>
<tr>
<td>Rank</td>
<td>属性</td>
<td>实例</td>
<td>数组的维度数</td>
</tr>
<tr>
<td>Length</td>
<td>属性</td>
<td>实例</td>
<td>所有维度的元素总数</td>
</tr>
<tr>
<td>GetLength</td>
<td>方法</td>
<td>实例</td>
<td>返回指定维度的长度</td>
</tr>
<tr>
<td>Clear</td>
<td>方法</td>
<td>静态</td>
<td>将某一范围内的元素设置为0或者null</td>
</tr>
<tr>
<td>Sort</td>
<td>方法</td>
<td>静态</td>
<td>对一维数组进行排序</td>
</tr>
<tr>
<td>BinarySearch</td>
<td>方法</td>
<td>静态</td>
<td>二分搜索</td>
</tr>
<tr>
<td>Clone</td>
<td>方法</td>
<td>实例</td>
<td>浅复制</td>
</tr>
<tr>
<td>IndexOf</td>
<td>方法</td>
<td>静态</td>
<td>返回一维数组中遇到的第一个值</td>
</tr>
<tr>
<td>Reverse</td>
<td>方法</td>
<td>静态</td>
<td>反转一维数组中某一范围内的元素</td>
</tr>
</tbody>
</table>
]]></content>
      <tags>
        <tag>编程语言</tag>
        <tag>游戏开发</tag>
      </tags>
  </entry>
  <entry>
    <title>TCP协议通信原理</title>
    <url>/2023/01/15/TCP%E5%8D%8F%E8%AE%AE%E9%80%9A%E4%BF%A1%E5%8E%9F%E7%90%86/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>HTML解析大法</title>
    <url>/2022/01/17/HTML%E8%A7%A3%E6%9E%90%E5%A4%A7%E6%B3%95/</url>
    <content><![CDATA[<h1 id="html解析大法"><a class="markdownIt-Anchor" href="#html解析大法"></a> HTML解析大法：</h1>
<h2 id="一正则表达式"><a class="markdownIt-Anchor" href="#一正则表达式"></a> 一.正则表达式</h2>
<h3 id="1模块主要函数"><a class="markdownIt-Anchor" href="#1模块主要函数"></a> 1.模块主要函数</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> re<br><span class="hljs-comment">#创建正则表达式对象</span><br>re.<span class="hljs-built_in">compile</span>(pattern)<br><span class="hljs-comment">#在字符串中寻找模式，返回match对象或None</span><br>re.search(pattern,string)<br><span class="hljs-comment">#从字符串开头匹配，返回match或None</span><br>re.match(pattern,string)<br><span class="hljs-comment">#返回列表</span><br>re.findall(pattern,string)<br></code></pre></td></tr></table></figure>
<h3 id="2使用正则表达式对象"><a class="markdownIt-Anchor" href="#2使用正则表达式对象"></a> 2.使用正则表达式对象</h3>
<p>使用<code>re.compile</code>将正则表达式编译成正则表达式对象，即可使用对象的方法（与上文search、match、findall用法大同小异）</p>
<h3 id="3子模式与match对象"><a class="markdownIt-Anchor" href="#3子模式与match对象"></a> 3.子模式与Match对象</h3>
<p>Match对象主要方法有<strong>group()</strong>（返回模式子内容），<strong>groups()</strong>（返回模式字内容元组），<strong>groupdict()</strong>（返回字典）</p>
<p><strong>特别地，使用(?P&lt;name&gt;)可以为子模式命名</strong></p>
<h2 id="二beautifulsoup"><a class="markdownIt-Anchor" href="#二beautifulsoup"></a> 二.BeautifulSoup</h2>
<h3 id="1对象种类"><a class="markdownIt-Anchor" href="#1对象种类"></a> 1.对象种类</h3>
<h4 id="tag"><a class="markdownIt-Anchor" href="#tag"></a> Tag</h4>
<p>即HTML中尖括号扩起来的部分。其有两个重要的属性：<strong>name</strong>和<strong>attributes</strong><br>
<strong>name</strong>属性：<br>
每个Tag的名字，包括<strong>title、a、h1</strong>等等。<strong>name</strong>属性可以被修改。<br>
<strong>attributes</strong>属性：<br>
每个Tag中包含等号，等号两边的内容（像字典一样）就是是attribute，可以使用类似python操作字典的方法操作属性，建议使用get。</p>
<h4 id="2navigablestring"><a class="markdownIt-Anchor" href="#2navigablestring"></a> ②NavigableString</h4>
<p>对Tag对象使用.<strong>string</strong>获得其中文字<br>
####③BeautifulSoup<br>
与Tag对象类似，只不过可以把<strong>BeautifulSoup</strong>对象看成整体的Tag</p>
<h4 id="4comment"><a class="markdownIt-Anchor" href="#4comment"></a> ④comment</h4>
<p>即HTML中的注释部分。在使用.<strong>string</strong>时会同时提取注释，所以使用时可以先判断类型：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">if</span> <span class="hljs-built_in">type</span>(soup.a.string) == bs4.element.comment:<br>    <span class="hljs-built_in">print</span>(soupa.a.string)<br></code></pre></td></tr></table></figure>
<h3 id="2beautifulsoup的树结构"><a class="markdownIt-Anchor" href="#2beautifulsoup的树结构"></a> 2.BeautifulSoup的树结构</h3>
<h4 id="子节点"><a class="markdownIt-Anchor" href="#子节点"></a> 子节点</h4>
<p>.<strong>content</strong>以及.<strong>children</strong>都可返回直接子节点，不同的是前者返回的是列表。<br>
.<strong>descendants</strong>可以返回所有的子孙节点（返回的是可迭代对象）。</p>
<h4 id="父节点"><a class="markdownIt-Anchor" href="#父节点"></a> 父节点</h4>
<p>.<strong>parents</strong>返回父节点的可迭代对象。</p>
<h4 id="兄弟节点"><a class="markdownIt-Anchor" href="#兄弟节点"></a> 兄弟节点</h4>
<p>.<strong>next_sibling</strong>和.<strong>previous_sibing</strong>返回前一个和后一个兄弟节点。</p>
<h3 id="find_all方法"><a class="markdownIt-Anchor" href="#find_all方法"></a> find_all方法</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><code class="hljs python">find_all(name, attrs, recursive, text, **kwarg)<br></code></pre></td></tr></table></figure>
<h4 id="name参数"><a class="markdownIt-Anchor" href="#name参数"></a> name参数：</h4>
<p>寻找名字为name的标记</p>
<h4 id="kwargs"><a class="markdownIt-Anchor" href="#kwargs"></a> kwargs</h4>
<p>查找参数符合条件的标记<br>
例如：<code>find_all('a',class_='post-title')</code>寻找参数class为post-title的标记</p>
<h4 id="text"><a class="markdownIt-Anchor" href="#text"></a> text</h4>
<p>搜索文档中的字符串内容。</p>
<h4 id="limit"><a class="markdownIt-Anchor" href="#limit"></a> limit</h4>
<p>限制搜索结果的个数。</p>
<h4 id="recursive"><a class="markdownIt-Anchor" href="#recursive"></a> recursive</h4>
<p>默认为true，若为false，则只寻找当前节点的直接子节点。</p>
<h2 id="三lxml的xpath解析"><a class="markdownIt-Anchor" href="#三lxml的xpath解析"></a> 三.lxml的xpath解析</h2>
<p>lxml库的使用方法</p>
<figure class="highlight python"><table><tr><td class="code"><pre><code class="hljs python">rest = etree.HTML(html)<br></code></pre></td></tr></table></figure>
<h3 id="xpath节点"><a class="markdownIt-Anchor" href="#xpath节点"></a> XPath节点</h3>
<p>XPath的节点关系类似BeautifulSoup，都是树的结构，此处不再赘述。</p>
<h3 id="xpath语法"><a class="markdownIt-Anchor" href="#xpath语法"></a> XPath语法</h3>
<table>
<thead>
<tr>
<th>表达式</th>
<th style="text-align:center">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>nodename</td>
<td style="text-align:center">选取此节点的所有子节点</td>
</tr>
<tr>
<td>/</td>
<td style="text-align:center">从根节点选取</td>
</tr>
<tr>
<td>//</td>
<td style="text-align:center">选择任意位置的某个节点</td>
</tr>
<tr>
<td>.</td>
<td style="text-align:center">选取当前节点</td>
</tr>
<tr>
<td>…</td>
<td style="text-align:center">选取当前节点的父节点</td>
</tr>
<tr>
<td>@</td>
<td style="text-align:center">选取</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>谓语</th>
<th style="text-align:center">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>/classroom/student[1]</td>
<td style="text-align:center">选取classroom子元素的第一个student元素</td>
</tr>
<tr>
<td>/classroom/student[last()]</td>
<td style="text-align:center">选取classroom子元素中的最后一个student元素</td>
</tr>
<tr>
<td>/classroom/student[position()&lt;6]</td>
<td style="text-align:center">选取classroom子元素的前五个元素</td>
</tr>
<tr>
<td>//name[@lang]</td>
<td style="text-align:center">选取name元素，其必须有lang属性</td>
</tr>
<tr>
<td>//name[@lang=‘en’]</td>
<td style="text-align:center">选取name元素，其lang属性的值必须为en</td>
</tr>
<tr>
<td>//student[age&gt;20]</td>
<td style="text-align:center">选取所有student，其age属性必须大于20</td>
</tr>
</tbody>
</table>
<p>除此之外Xpath还可以在表达式中使用/text()来提取其中的字符（类似bs的.string）<br>
Selector对象还有extract()方法，获取其中的文字。</p>
<p>###偷懒小技巧<br>
在浏览器的审查元素中可以右键对元素的XPath进行复制（仅适用于提取单个元素的情况）</p>
]]></content>
      <categories>
        <category>前端</category>
        <category>爬虫</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title>C语言上机事半功倍的小技巧</title>
    <url>/2022/03/10/C%E8%AF%AD%E8%A8%80%E4%B8%8A%E6%9C%BA%E4%BA%8B%E5%8D%8A%E5%8A%9F%E5%80%8D%E7%9A%84%E5%B0%8F%E6%8A%80%E5%B7%A7/</url>
    <content><![CDATA[<h1 id="零-前言"><a class="markdownIt-Anchor" href="#零-前言"></a> 零、前言</h1>
<p>本篇博客旨在帮助各位用最少代码、最快的时间通过C语言上机测试，主要介绍一些C++内置函数。这些函数主要是笔者平时写题时积累的一些实用函数，包含了较多的个人主观因素，希望读者能各取所需，内容可能不够全面也不够准确，但应付考试是够的。<strong>如果考试时实在无法运用本文的小技巧，请尊重自身平时的代码习惯。</strong></p>
<blockquote>
<p>UPD:<br>
2022-03-10 13:44: 增加了algorithm的其他函数和命名空间std中的函数。</p>
</blockquote>
<h1 id="一-实用的内置函数"><a class="markdownIt-Anchor" href="#一-实用的内置函数"></a> 一、实用的内置函数</h1>
<h2 id="1-排序函数"><a class="markdownIt-Anchor" href="#1-排序函数"></a> 1、排序函数</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><code class="hljs C++"><span class="hljs-comment">//头文件</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;algorithm&gt;</span></span><br><span class="hljs-comment">//快速排序（不稳定）</span><br><span class="hljs-built_in">sort</span>(a+<span class="hljs-number">1</span>,a+<span class="hljs-number">1</span>+n,cmp);<br><span class="hljs-built_in">sort</span>(a+<span class="hljs-number">1</span>,a+<span class="hljs-number">1</span>+);<br><span class="hljs-comment">//稳定排序</span><br><span class="hljs-built_in">stable_sort</span>(a+<span class="hljs-number">1</span>,a+<span class="hljs-number">1</span>+n,cmp);<br><span class="hljs-built_in">stable_sort</span>(a+<span class="hljs-number">1</span>,a+<span class="hljs-number">1</span>+);<br></code></pre></td></tr></table></figure>
<p>sort函数有三个参数，前两个参数是指针，代表需要排序的区间（左闭右开），第三个参数是<em>函数指针</em>，<strong>可填可不填</strong>，不填就默认递增排序。sort函数无返回值，是对于数组做原地排序。<br>
例如，上述代码就是对a数组的第1个到第n个元素排序（笔者习惯数组下标从1开始）。如果习惯的下标是从0开始，那就是</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><code class="hljs C++"><span class="hljs-built_in">sort</span>(a,a+n);<br></code></pre></td></tr></table></figure>
<p>更普遍的，sort(a+p,a+q)就是将a[p]~a[q-1]排序。</p>
<h3 id="递减的排序怎么办"><a class="markdownIt-Anchor" href="#递减的排序怎么办"></a> 递减的排序怎么办？</h3>
<p>解决办法有两个：<br>
1、将待排序数组全部取相反数，按默认的递增排序后再取一次相反数即可。<br>
<font color="red">2、编写cmp函数</font><br>
这里可能比较复杂，看不懂就可以不用看了。<br>
首先，声明一个cmp函数（名字未必要是cmp，符合C语言规范即可）</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><code class="hljs C++"><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">cmp</span><span class="hljs-params">(<span class="hljs-keyword">int</span> X,<span class="hljs-keyword">int</span> Y)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">return</span> X&gt;Y;<br>&#125;<br></code></pre></td></tr></table></figure>
<p>然后将cmp函数指针作为sort的第三个参数即可。</p>
<blockquote>
<p>函数指针是指针的一种，只写函数名，就是该函数的函数指针。<br>
bool是C++的数据类型，只有1和0（true和false）两种取值。</p>
</blockquote>
<figure class="highlight c++"><table><tr><td class="code"><pre><code class="hljs C++"><span class="hljs-built_in">sort</span>(a+<span class="hljs-number">1</span>,a+<span class="hljs-number">1</span>+n,cmp);<br></code></pre></td></tr></table></figure>
<p>还可以对自定义的结构体设定排序关键字:</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><code class="hljs C++"><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">cmp</span><span class="hljs-params">(Student X, Student Y)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">return</span> X.grade &gt; Y.grade;<br>&#125;<br>[...]<br><span class="hljs-built_in">sort</span>(students+<span class="hljs-number">1</span>, students+<span class="hljs-number">1</span>+n, cmp);<br></code></pre></td></tr></table></figure>
<p>对学生按照成绩从高到低排序。</p>
<blockquote>
<p>稳定排序和不稳定排序<br>
稳定排序指的是：当数据中存在两个相同的值时，排序后不会改变相对位置。例如A和B成绩都是90分，A原先在B前面，排序后不会出现A跑到B后面的情况，这就是稳定排序。<br>
考试中两种都可以用，问题不大。</p>
</blockquote>
<h2 id="2-algorithm头文件中的其他函数"><a class="markdownIt-Anchor" href="#2-algorithm头文件中的其他函数"></a> 2、algorithm头文件中的其他函数</h2>
<h3 id="11-倒序函数"><a class="markdownIt-Anchor" href="#11-倒序函数"></a> 1.1、倒序函数</h3>
<figure class="highlight c++"><table><tr><td class="code"><pre><code class="hljs C++"><span class="hljs-comment">//头文件</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;algorithm&gt;</span></span><br><span class="hljs-built_in">reverse</span>(a+<span class="hljs-number">1</span>,a+<span class="hljs-number">1</span>+n);<span class="hljs-comment">//将目标区间内的值倒置</span><br><span class="hljs-comment">/*</span><br><span class="hljs-comment">例如： 数组&#123;1,1,4,5,1,4&#125;被倒置后会变成&#123;4,1,5,4,1,1&#125;</span><br><span class="hljs-comment">*/</span><br></code></pre></td></tr></table></figure>
<p>使用方法和sort十分类似，区间也是左闭右开。<br>
<font color="green">实际上，C++和许多语言的内置函数默认都是左闭右开的</font></p>
<h3 id="12-取最大值-最小值的函数"><a class="markdownIt-Anchor" href="#12-取最大值-最小值的函数"></a> 1.2、取最大值、最小值的函数</h3>
<figure class="highlight c++"><table><tr><td class="code"><pre><code class="hljs C++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;algorithm&gt;</span></span><br><span class="hljs-built_in">max_element</span>(a+<span class="hljs-number">1</span>,a+<span class="hljs-number">1</span>+n);<span class="hljs-comment">//返回给定区间内的最大值</span><br><span class="hljs-built_in">min_element</span>(a+<span class="hljs-number">1</span>,a+<span class="hljs-number">1</span>+n);<span class="hljs-comment">//返回给定区间内的最小值</span><br></code></pre></td></tr></table></figure>
<h2 id="3-命名空间std中的函数"><a class="markdownIt-Anchor" href="#3-命名空间std中的函数"></a> 3、命名空间std中的函数</h2>
<p>要使用命名空间std中的函数，你需要像这样做：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><code class="hljs C++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;...&gt;</span></span><br>[...]<br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std; <span class="hljs-comment">//在引用完头文件后加上这句话</span><br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    [...]<br>&#125;<br></code></pre></td></tr></table></figure>
<p>主要有以下三个函数</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><code class="hljs C++"><span class="hljs-built_in">max</span>(a,b); <span class="hljs-comment">//返回a和b中的较大者</span><br><span class="hljs-built_in">min</span>(a,b); <span class="hljs-comment">//返回a和b中的较小者</span><br><span class="hljs-built_in">swap</span>(a,b); <span class="hljs-comment">//将a和b的值交换</span><br></code></pre></td></tr></table></figure>
<blockquote>
<p>注意，以上所有的函数都是C++特有的，使用时请保证文件扩展名为.cpp<br>
且上面的所有函数都是模板函数，这意味着可以任何数据类型都可以使用（前提是为该数据类型定义了大于、小于预算符），例如，排序函数可以对int数组排序，也可以对double、float甚至字符排序。</p>
</blockquote>
<h2 id="4-字符判断的函数"><a class="markdownIt-Anchor" href="#4-字符判断的函数"></a> 4、字符判断的函数</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><code class="hljs C++"><span class="hljs-comment">//头文件</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;cctype&gt;</span></span><br><span class="hljs-comment">//上面的是C++的头文件，C语言头文件为#include&lt;ctype.h&gt;</span><br><span class="hljs-comment">//其实只要文件名结尾是.cpp，就没什么区别</span><br><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">isdigit</span><span class="hljs-params">(<span class="hljs-keyword">char</span> c)</span></span>;<span class="hljs-comment">//判断字符c是不是数字（&#x27;0&#x27;~&#x27;9&#x27;)</span><br><br><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">isalpha</span><span class="hljs-params">(<span class="hljs-keyword">char</span> c)</span></span>;<span class="hljs-comment">//判断字符c是不是英文字母</span><br><br><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">isupper</span><span class="hljs-params">(<span class="hljs-keyword">char</span> c)</span></span>;<span class="hljs-comment">//判断字符c是不是大写字母</span><br><br><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">islower</span><span class="hljs-params">(<span class="hljs-keyword">char</span> c)</span></span>;<span class="hljs-comment">//判断字符c是不是小写字母</span><br><br><span class="hljs-function"><span class="hljs-keyword">char</span> <span class="hljs-title">toupper</span><span class="hljs-params">(<span class="hljs-keyword">char</span> c)</span></span>;<span class="hljs-comment">//返回将字符c转为大写后的字符</span><br><br><span class="hljs-function"><span class="hljs-keyword">char</span> <span class="hljs-title">tolower</span><span class="hljs-params">(<span class="hljs-keyword">char</span> c)</span></span>;<span class="hljs-comment">//返回将字符c转为小写后的字符</span><br></code></pre></td></tr></table></figure>
<blockquote>
<p>以上bool的返回值，在C语言中是int</p>
</blockquote>
<h2 id="5-字符串函数"><a class="markdownIt-Anchor" href="#5-字符串函数"></a> 5、字符串函数</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><code class="hljs C++"><span class="hljs-comment">//头文件</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;cstring&gt;</span></span><br><span class="hljs-comment">//C语言中是string.h</span><br><br><span class="hljs-comment">//非常常用的一个函数（个人觉得）</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> * <span class="hljs-title">memset</span> <span class="hljs-params">( <span class="hljs-keyword">void</span> * ptr, <span class="hljs-keyword">int</span> value, <span class="hljs-keyword">size_t</span> num)</span></span>;<span class="hljs-comment">//以字节方式填充一个数组</span><br><br><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">strcmp</span><span class="hljs-params">(<span class="hljs-keyword">char</span>* str1, <span class="hljs-keyword">char</span>* str2)</span></span>;<span class="hljs-comment">//以字典序比较两个函数</span><br><br><span class="hljs-function"><span class="hljs-keyword">size_t</span> <span class="hljs-title">strlen</span> <span class="hljs-params">(<span class="hljs-keyword">char</span> * str )</span></span>;<br></code></pre></td></tr></table></figure>
<p>其实字符串内置的函数很多，但是太难记了，个人人为实用的就以上几个。<br>
接下来重点说一下memset这个函数。<br>
memset第一个参数是一个指针，可以是字符串的头指针也可以是任何数组的指针；第二个参数是想要设置每个字节的值；第三个参数是想要填充的字节个数,第三个参数一般设置为sizeof(ptr)。<br>
举个栗子：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><code class="hljs C++"><span class="hljs-keyword">char</span> str[<span class="hljs-number">101</span>];<br><span class="hljs-built_in">memset</span>(str,<span class="hljs-number">0</span>,<span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(str));<span class="hljs-comment">//将str的值全部设置为&#x27;/0&#x27;</span><br><span class="hljs-built_in">memset</span>(str,<span class="hljs-string">&#x27;a&#x27;</span>,<span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(str));<span class="hljs-comment">//将str的值全部设置为&#x27;/a&#x27;</span><br><br><span class="hljs-keyword">int</span> num[<span class="hljs-number">101</span>];<br><span class="hljs-built_in">memset</span>(num,<span class="hljs-number">0</span>,<span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(num));<span class="hljs-comment">//将num的值全部设置为0</span><br><span class="hljs-comment">//以下要注意！！！！</span><br><span class="hljs-built_in">memset</span>(num,<span class="hljs-number">5</span>,<span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(num));<span class="hljs-comment">//并不是将num全部设置为5，因为int在c语言中占4个字节</span><br><span class="hljs-comment">//但是可以这样：</span><br><span class="hljs-built_in">memset</span>(num,<span class="hljs-number">0x3f</span>,<span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(num));<span class="hljs-comment">//将num的值全部设置为一个非常大的数</span><br></code></pre></td></tr></table></figure>
<p><font color="red">总之，memset在设置字符时，可以直接赋值。而对于int或者其他类型的，并不是特别适用。但是如果想将int数组初始化为0或者无穷大，可以考虑使用memset。</font></p>
<h1 id="二-语法小技巧"><a class="markdownIt-Anchor" href="#二-语法小技巧"></a> 二、语法小技巧</h1>
<h2 id="1-for循环"><a class="markdownIt-Anchor" href="#1-for循环"></a> 1、for循环</h2>
<p>for循环其实可以这么写：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><code class="hljs C++"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br>&#123;<br>    [...]<br>&#125;<br></code></pre></td></tr></table></figure>
<p>还可以这么写(慎用):</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><code class="hljs C++"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> _for(i,a,b) for( int i=(a); i&lt;(b); ++i)</span><br><br>_for(i,<span class="hljs-number">1</span>,n);<br></code></pre></td></tr></table></figure>
<h2 id="2-判断语句避免翻车的方法"><a class="markdownIt-Anchor" href="#2-判断语句避免翻车的方法"></a> 2、判断语句避免翻车的方法</h2>
<p>有人if判断语句会这么写</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><code class="hljs C++"><span class="hljs-keyword">if</span>(a==<span class="hljs-number">1</span>) <span class="hljs-comment">//很容易写成a=1，且不易察觉</span><br>&#123;<br>    <br>&#125;<br></code></pre></td></tr></table></figure>
<p>但是如果换一种写法</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><code class="hljs C++"><span class="hljs-keyword">if</span>(<span class="hljs-number">1</span>==a)<br>&#123;<br><br>&#125;<br></code></pre></td></tr></table></figure>
<p>这样如果不小心漏了一个等号，编译器就会报错，提醒我们。</p>
<h2 id="3-利用好全局变量"><a class="markdownIt-Anchor" href="#3-利用好全局变量"></a> 3、利用好全局变量</h2>
<p>将全局变量定义在main函数外，其初始值会全部被设置为0，利用这一特点可以省去初始化的工夫。此外，数组定义在main函数外，其空间可以更大（int类型最大好像是10000*10000来着）</p>
<h1 id="三-没了"><a class="markdownIt-Anchor" href="#三-没了"></a> 三、没了</h1>
<p>可能有人3.10下午就要上机了，先写这么多，想起来再补吧。<br>
考试是可以应付的，但是希望读者能扬弃本文内容，将来形成良好的代码习惯。<br>
<font color="orange" size="7">祝考试顺利</font></p>
]]></content>
      <categories>
        <category>课内</category>
        <category>数据结构</category>
      </categories>
      <tags>
        <tag>C语言</tag>
      </tags>
  </entry>
  <entry>
    <title>OS实验记录</title>
    <url>/2022/05/23/OS%E5%AE%9E%E9%AA%8C%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<h1 id="操作系统实验报告"><a class="markdownIt-Anchor" href="#操作系统实验报告"></a> 操作系统实验报告</h1>
<p>姓名：<u>周洪锋</u> 	学号：<u>20009200766</u>	上课班级：<u>周二、周四56节</u></p>
<h2 id="实验一进程的建立"><a class="markdownIt-Anchor" href="#实验一进程的建立"></a> 实验一：进程的建立</h2>
<h3 id="实验目的"><a class="markdownIt-Anchor" href="#实验目的"></a> 实验目的</h3>
<ul>
<li>创建进程及子进程</li>
<li>在父子进程间实现通信</li>
</ul>
<h3 id="实验内容"><a class="markdownIt-Anchor" href="#实验内容"></a> 实验内容</h3>
<ul>
<li>创建进程并显示标识等进程控制块的属性信息；</li>
<li>显示父子进程的通信信息和相应的应答信息（进程间通信机制任选）</li>
</ul>
<h3 id="实验要求"><a class="markdownIt-Anchor" href="#实验要求"></a> 实验要求</h3>
<ul>
<li>显示创建的进程和控制参数；</li>
<li>显示进程间关系参数。</li>
</ul>
<h3 id="实验设计与实现"><a class="markdownIt-Anchor" href="#实验设计与实现"></a> 实验设计与实现</h3>
<p>在Linux操作系统中，可以使用fork()函数来复制一个当前进程，并作为当前进程的子进程。fork()函数在头文件&lt;unistd.h&gt;中，没有参数，返回值为pid_t类型。在父进程中，该函数返回值是子进程的pid，而在子进程中，该函数返回值始终为0，可以通过返回值的特点来区别父子进程。进程创建失败时，返回值为负数。</p>
<p>同时需要注意的是，在父进程结束时，子进程会被迫退出，所以需要在父进程的代码中调用wait()函数（在头文件&lt;sys/wait.h&gt;中），其原型如下</p>
<figure class="highlight c"><table><tr><td class="code"><pre><code class="hljs C"><span class="hljs-function"><span class="hljs-keyword">extern</span> <span class="hljs-keyword">__pid_t</span> <span class="hljs-title">wait</span> <span class="hljs-params">(<span class="hljs-keyword">int</span> *__stat_loc)</span></span>;<br></code></pre></td></tr></table></figure>
<p>该函数会等待，知道子进程运行完毕，<code>__stat__loc</code>参数用于接收子进程退出的信息，这里我们不关心这个值，可以直接填NULL。</p>
<p>fork出的子进程会复制父进程的资源（实际上用的是一种类似“懒标记”法的方法，子进程会继承父进程的资源，但是当子进程修改资源的值时，会复制一份资源，不会对父进程修改），并继续执行剩余代码。</p>
<p>代码中用到的剩余两个函数</p>
<figure class="highlight c"><table><tr><td class="code"><pre><code class="hljs C"><span class="hljs-function"><span class="hljs-keyword">pid_t</span> <span class="hljs-title">getpid</span><span class="hljs-params">()</span></span><br><span class="hljs-function"><span class="hljs-keyword">pid_t</span> <span class="hljs-title">getppid</span><span class="hljs-params">()</span></span><br></code></pre></td></tr></table></figure>
<p>分别用于获取自己的自己的父进程的pid。</p>
<h3 id="实验结果分析"><a class="markdownIt-Anchor" href="#实验结果分析"></a> 实验结果分析</h3>
<figure class="highlight c"><table><tr><td class="code"><pre><code class="hljs C"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;unistd.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;sys/wait.h&gt;</span></span><br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> n=<span class="hljs-number">100</span>;<br>    <span class="hljs-keyword">pid_t</span> pid=fork();<br>    <span class="hljs-keyword">if</span>(pid&lt;<span class="hljs-number">0</span>) <span class="hljs-comment">//fail</span><br>    &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Fail to create a new process!\n&quot;</span>);<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>    &#125;<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(pid==<span class="hljs-number">0</span>) <span class="hljs-comment">//child process</span><br>    &#123;<br>        n++;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;This is the child process, pid=%hd, father process&#x27; pid=%hd\n&quot;</span>,getpid(),getppid());<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;n=%d\n&quot;</span>,n);<br>        <span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span> <span class="hljs-comment">//father process</span><br>    &#123;<br>        wait(<span class="hljs-literal">NULL</span>);<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;This is the father process, the pid=%hd,child&#x27;s pid=%hd\n&quot;</span>,getpid(),pid);<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;n=%d\n&quot;</span>,n);<br>    &#125;<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure>
<p>代码中，使用if语句来区别父子进程。</p>
<p>运行结果如下<img src="/2022/05/23/OS%E5%AE%9E%E9%AA%8C%E8%AE%B0%E5%BD%95/os_exp/p1.png" alt="p1"></p>
<p>可以看到，父子进程可以互相显示进程控制块中的信息，且子进程中修改值并不会影响父进程。</p>
<hr>
<h2 id="实验二进程间的同步"><a class="markdownIt-Anchor" href="#实验二进程间的同步"></a> 实验二：进程间的同步</h2>
<h3 id="实验目的-2"><a class="markdownIt-Anchor" href="#实验目的-2"></a> 实验目的：</h3>
<ul>
<li>理解进程同步和互斥模型及其应用</li>
</ul>
<h3 id="实验内容-2"><a class="markdownIt-Anchor" href="#实验内容-2"></a> 实验内容</h3>
<ul>
<li>利用通信API实现进程之间的同步；</li>
<li>建立司机和售票员进程，并实现他们间的同步运行。</li>
</ul>
<h3 id="实验要求-2"><a class="markdownIt-Anchor" href="#实验要求-2"></a> 实验要求</h3>
<p>显示司机和售票员进程的同步运行轨迹</p>
<h3 id="实验设计与实现-2"><a class="markdownIt-Anchor" href="#实验设计与实现-2"></a> 实验设计与实现</h3>
<h4 id="创建信号量"><a class="markdownIt-Anchor" href="#创建信号量"></a> 创建信号量</h4>
<p>首先使用ftok函数来创建一个关键字，该函数原型如下</p>
<figure class="highlight c"><table><tr><td class="code"><pre><code class="hljs C"><span class="hljs-function"><span class="hljs-keyword">key_t</span> <span class="hljs-title">ftok</span><span class="hljs-params">( <span class="hljs-keyword">char</span> * fname, <span class="hljs-keyword">int</span> id )</span></span>;<br></code></pre></td></tr></table></figure>
<p>ftok函数是根据pathname和id来创建一个关键字(类型为 key_t)，此关键字在创建信号量，创建消息队列的时候都需要使用。其中pathname必须是一个存在的可访问的路径或文件，id必须不得为0。失败返回值为-1。</p>
<p>利用创建的关键字，就可以使用semget函数来创建信号量。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><code class="hljs C"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">semget</span> <span class="hljs-params">(<span class="hljs-keyword">key_t</span> __key, <span class="hljs-keyword">int</span> __nsems, <span class="hljs-keyword">int</span> __semflg)</span></span>;<br></code></pre></td></tr></table></figure>
<p>参数中，__key是上述生成的关键字，nsems是生成的信号量数量（可以产生类似数组的效果），_semflg ：信号量的创建方式或权限。有IPC_CREAT，IPC_EXCL。</p>
<ul>
<li>
<p>IPC_CREAT如果信号量不存在，则创建一个信号量，否则获取。</p>
</li>
<li>
<p>IPC_EXCL只有信号量不存在的时候，新的信号量才建立，否则就产生错误。</p>
</li>
</ul>
<p>该函数返回一个int类型的值，这个值就可以看成是信号量的标识符。</p>
<h4 id="初始化信号量"><a class="markdownIt-Anchor" href="#初始化信号量"></a> 初始化信号量</h4>
<p>信号量创建完成后，需要对其值进行初始化。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><code class="hljs C"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">semctl</span> <span class="hljs-params">(<span class="hljs-keyword">int</span> __semid, <span class="hljs-keyword">int</span> __semnum, <span class="hljs-keyword">int</span> __cmd, ...)</span> </span>;<br></code></pre></td></tr></table></figure>
<p>第一个参数传入信号量的标识符，第二个参数是这个信号量集中的编号（如果在semget时的__nsems大于1，那这个参数就相当于信号量数组的索引），第三个参数是需要做的操作，这里我们使用SETVAL，即设置信号量集中的一个单独信号量的值。</p>
<p>最后还有一个可变参数，在这个实验中我们只需要初始化一个值，所以只要传入一个semun类型：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><code class="hljs C"><span class="hljs-class"><span class="hljs-keyword">union</span> <span class="hljs-title">semun</span> &#123;</span><br>   <span class="hljs-keyword">int</span>   val;<br>   <span class="hljs-class"><span class="hljs-keyword">struct</span>   <span class="hljs-title">semid_ds</span>  *<span class="hljs-title">buf</span>;</span><br>   <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">short</span>   *arrary;<br><br>&#125;;<br></code></pre></td></tr></table></figure>
<p>声明一个semun，改变其中的val然后传入semctl函数即可。(详见完整代码)</p>
<h4 id="定义p操作和v操作"><a class="markdownIt-Anchor" href="#定义p操作和v操作"></a> 定义P操作和V操作</h4>
<figure class="highlight c"><table><tr><td class="code"><pre><code class="hljs C"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">P</span><span class="hljs-params">(<span class="hljs-keyword">int</span> sem_id)</span></span><br><span class="hljs-function"></span>&#123;<br>    sembuf op = &#123;<span class="hljs-number">0</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">0</span>&#125;;<br>    semop(sem_id,&amp;op,<span class="hljs-number">1</span>);<br>&#125;<br></code></pre></td></tr></table></figure>
<p>semop用于操作信号量，可以使用资源也可以释放资源，第一个参数为信号量标识符，第二参数是一个sembuf结构体的指针，第三个参数用于指定操作的结构数量。</p>
<p>其中sembuf结构体定义如下</p>
<figure class="highlight c"><table><tr><td class="code"><pre><code class="hljs C"> <span class="hljs-class"><span class="hljs-keyword">struct</span>   <span class="hljs-title">sembuf</span>&#123;</span><br><br>     <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">short</span>  sem_num;<span class="hljs-comment">//第几个信号量，第一个信号量为0；</span><br>     <span class="hljs-keyword">short</span>  sem_op;<span class="hljs-comment">//对该信号量的操作。</span><br>     <span class="hljs-keyword">short</span>  semflg;<span class="hljs-comment">//</span><br>&#125;;<br></code></pre></td></tr></table></figure>
<p>在P操作中，需要占用资源，所以sem_op设置为-1，sem_num为0，表示我们希望修改这个信号集中的第一个信号量。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><code class="hljs C"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">V</span><span class="hljs-params">(<span class="hljs-keyword">int</span> sem_id)</span></span><br><span class="hljs-function"></span>&#123;<br>    sembuf op = &#123;<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>&#125;;<br>    semop(sem_id,&amp;op,<span class="hljs-number">1</span>);<br>&#125;<br></code></pre></td></tr></table></figure>
<p>V操作同理，将sem_op设置为1即可。</p>
<h3 id="实验结果分析-2"><a class="markdownIt-Anchor" href="#实验结果分析-2"></a> 实验结果分析</h3>
<figure class="highlight c"><table><tr><td class="code"><pre><code class="hljs C"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;sys/sem.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;unistd.h&gt;</span></span><br><span class="hljs-class"><span class="hljs-keyword">union</span> <span class="hljs-title">semun</span> &#123;</span><br>    <span class="hljs-keyword">int</span>              val;    <span class="hljs-comment">/* Value for SETVAL */</span><br>    <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">semid_ds</span> *<span class="hljs-title">buf</span>;</span>    <span class="hljs-comment">/* Buffer for IPC_STAT, IPC_SET */</span><br>    <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">short</span>  *<span class="hljs-built_in">array</span>;  <span class="hljs-comment">/* Array for GETALL, SETALL */</span><br>    <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">seminfo</span>  *__<span class="hljs-title">buf</span>;</span>  <span class="hljs-comment">/* Buffer for IPC_INFO</span><br><span class="hljs-comment">                                           (Linux-specific) */</span><br>&#125;;<br><span class="hljs-keyword">int</span> sem_id1=<span class="hljs-number">0</span>,sem_id2=<span class="hljs-number">0</span>;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">P</span><span class="hljs-params">(<span class="hljs-keyword">int</span> sem_id)</span></span>;<br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">V</span><span class="hljs-params">(<span class="hljs-keyword">int</span> sem_id)</span></span>;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> key1= ftok(<span class="hljs-string">&quot;.&quot;</span>,<span class="hljs-number">36</span>),key2=ftok(<span class="hljs-string">&quot;.&quot;</span>,<span class="hljs-number">98</span>);<br>    <span class="hljs-keyword">if</span>(key1==<span class="hljs-number">-1</span>||key2==<span class="hljs-number">-1</span>)<br>    &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;keyFail!\n&quot;</span>);<br>        <span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);<br>    &#125;<br>    sem_id1=semget(key1,<span class="hljs-number">1</span>,IPC_CREAT|<span class="hljs-number">0666</span>);<br>    sem_id2=semget(key2,<span class="hljs-number">1</span>,IPC_CREAT|<span class="hljs-number">0666</span>);<br>    semun u1,u2;<br>    u1.val=<span class="hljs-number">0</span>;u2.val=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">if</span>(sem_id1==<span class="hljs-number">-1</span>||sem_id2==<span class="hljs-number">-1</span>)<br>    &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;semFail!\n&quot;</span>);<br>        <span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);<br>    &#125;<br><br>    <span class="hljs-keyword">int</span> flag1=semctl(sem_id1,<span class="hljs-number">0</span>,SETVAL,u1);<br>    <span class="hljs-keyword">int</span> flag2=semctl(sem_id2,<span class="hljs-number">0</span>,SETVAL,u2);<br>    <span class="hljs-keyword">if</span>(flag1==<span class="hljs-number">-1</span>||flag2==<span class="hljs-number">-1</span>)<br>    &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;fail to set!\n&quot;</span>);<br>        <span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);<br>    &#125;<br><br>    <span class="hljs-keyword">pid_t</span> pid=fork();<br>    <span class="hljs-keyword">if</span>(pid&lt;<span class="hljs-number">0</span>)<br>    &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Fail to create a new process!\n&quot;</span>);<br><br>        <span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(pid==<span class="hljs-number">0</span>) <span class="hljs-comment">//child process</span><br>    &#123;<br>        <span class="hljs-keyword">while</span>(<span class="hljs-literal">true</span>)<br>        &#123;<br><br>            P(sem_id2);<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;The seller start to sell to ticker~\n&quot;</span>);<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;press &#x27;#stop&#x27; to stop selling:&quot;</span>);<br><span class="hljs-comment">//            getchar();</span><br>            <span class="hljs-built_in">std</span>::<span class="hljs-built_in">string</span> s;<br>            <span class="hljs-built_in">std</span>::<span class="hljs-built_in">cin</span>&gt;&gt;s;<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;The seller stops selling!\n&quot;</span>);<br>            V(sem_id1);<br><br>        &#125;<br><br>    &#125;<br>    <span class="hljs-keyword">else</span> <span class="hljs-comment">//father process</span><br>    &#123;<br>        <span class="hljs-keyword">while</span>(<span class="hljs-literal">true</span>)<br>        &#123;	<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;press &#x27;#stop&#x27; to stop the car:&quot;</span>);<br>            <span class="hljs-built_in">std</span>::<span class="hljs-built_in">string</span> s;<br>            <span class="hljs-built_in">std</span>::<span class="hljs-built_in">cin</span>&gt;&gt;s;<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;The driver stops the car\n&quot;</span>);<br>            V(sem_id2);<br>            P(sem_id1);<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;The driver ignited the car~\n&quot;</span>);<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">P</span><span class="hljs-params">(<span class="hljs-keyword">int</span> sem_id)</span></span><br><span class="hljs-function"></span>&#123;<br>    sembuf op = &#123;<span class="hljs-number">0</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">0</span>&#125;;<br>    semop(sem_id,&amp;op,<span class="hljs-number">1</span>);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">V</span><span class="hljs-params">(<span class="hljs-keyword">int</span> sem_id)</span></span><br><span class="hljs-function"></span>&#123;<br>    sembuf op = &#123;<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>&#125;;<br>    semop(sem_id,&amp;op,<span class="hljs-number">1</span>);<br>&#125;<br></code></pre></td></tr></table></figure>
<p>开始时，默认汽车在行驶，当控制台输入字符串时，汽车停止，售票员开始售票；再次输入字符串，售票员停止售票，汽车启动。</p>
<p><img src="https://img-blog.csdnimg.cn/20210409234555517.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2EwNDE3MTI4Mw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h4 id="运行结果"><a class="markdownIt-Anchor" href="#运行结果"></a> 运行结果</h4>
<p><img src="/2022/05/23/OS%E5%AE%9E%E9%AA%8C%E8%AE%B0%E5%BD%95/os_exp/p2.png" alt="p2"></p>
<hr>
<h2 id="实验三线程进程共享数据"><a class="markdownIt-Anchor" href="#实验三线程进程共享数据"></a> 实验三：线程进程共享数据</h2>
<h3 id="实验目的-3"><a class="markdownIt-Anchor" href="#实验目的-3"></a> 实验目的</h3>
<p>了解线程与进程之间的数据共享关系。创建一个线程，在线程中更改进程中的数据。</p>
<h3 id="实验内容-3"><a class="markdownIt-Anchor" href="#实验内容-3"></a> 实验内容</h3>
<p>在进程中定义全局共享数据，在线程中直接引用该数据进行更改并输出该数据。</p>
<h3 id="实验要求-3"><a class="markdownIt-Anchor" href="#实验要求-3"></a> 实验要求</h3>
<p>显示和输出共享数据。</p>
<h3 id="实验设计与实现-3"><a class="markdownIt-Anchor" href="#实验设计与实现-3"></a> 实验设计与实现</h3>
<h4 id="创建进程"><a class="markdownIt-Anchor" href="#创建进程"></a> 创建进程</h4>
<figure class="highlight c"><table><tr><td class="code"><pre><code class="hljs C"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">pthread_create</span> <span class="hljs-params">(<span class="hljs-keyword">pthread_t</span> *__restrict __newthread,</span></span><br><span class="hljs-params"><span class="hljs-function">			   <span class="hljs-keyword">const</span> <span class="hljs-keyword">pthread_attr_t</span> *__restrict __attr,</span></span><br><span class="hljs-params"><span class="hljs-function">			   <span class="hljs-keyword">void</span> *(*__start_routine) (<span class="hljs-keyword">void</span> *),</span></span><br><span class="hljs-params"><span class="hljs-function">			   <span class="hljs-keyword">void</span> *__restrict __arg)</span></span><br></code></pre></td></tr></table></figure>
<p>这个函数用于创建一个线程，需要指定调用的函数和函数的参数。</p>
<p>参数：</p>
<ul>
<li>第一个参数：新建的线程ID，也就是指向的内存单元(传入的是指针)，</li>
<li>第二个参数：线程属性，默认为NULL</li>
<li>第三个参数：可以理解为希望被执行的函数指针</li>
<li>第四个参数：函数的参数</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><code class="hljs C"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">pthread_join</span> <span class="hljs-params">(<span class="hljs-keyword">pthread_t</span> __th, <span class="hljs-keyword">void</span> **__thread_return)</span></span>;<br></code></pre></td></tr></table></figure>
<p>当进程结束时，子进程也会被迫结束，所以需要调用这个函数，阻塞进程，直到指定的进程结束。</p>
<p>参数：</p>
<ul>
<li>第一个参数：线程的ID</li>
<li>第二个参数：指向字符串的指针，用于接受子进程的运行结果</li>
</ul>
<h3 id="实验结果分析-3"><a class="markdownIt-Anchor" href="#实验结果分析-3"></a> 实验结果分析</h3>
<figure class="highlight c"><table><tr><td class="code"><pre><code class="hljs C"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;pthread.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;errno.h&gt;</span></span><br><br><span class="hljs-function"><span class="hljs-keyword">void</span> *<span class="hljs-title">func</span><span class="hljs-params">(<span class="hljs-keyword">void</span>* x)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">int</span> *p=(<span class="hljs-keyword">int</span>*)x;<br>    *p=<span class="hljs-number">100</span>;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;in thread,n=%d\n&quot;</span>,*p);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">pthread_t</span> tid;<br>    <span class="hljs-keyword">int</span> n=<span class="hljs-number">50</span>;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;in main process, n=%d\n&quot;</span>,n);<br>    <span class="hljs-keyword">int</span> res= pthread_create(&amp;tid,<span class="hljs-literal">NULL</span>,func,(<span class="hljs-keyword">void</span>*)&amp;n);<br>    <span class="hljs-keyword">if</span>(res!=<span class="hljs-number">0</span>)<br>    &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Fail to create thread! \n&quot;</span>);<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>    &#125;<br>    pthread_join(tid,<span class="hljs-literal">NULL</span>);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;after the thread, n=%d\n&quot;</span>,n);<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>
<h4 id="运行结果-2"><a class="markdownIt-Anchor" href="#运行结果-2"></a> 运行结果</h4>
<p><img src="/2022/05/23/OS%E5%AE%9E%E9%AA%8C%E8%AE%B0%E5%BD%95/os_exp/p3.png" alt="p3"></p>
<p>可以看到，子线程修改了主进程中的数据，并将结果输出。</p>
<h2 id="实验四创建进程"><a class="markdownIt-Anchor" href="#实验四创建进程"></a> 实验四：创建进程</h2>
<h3 id="实验目的-4"><a class="markdownIt-Anchor" href="#实验目的-4"></a> 实验目的</h3>
<p>学会通过基本的windows或者Linux进程控制函数，由父进程创建子进程，并实现父子进程协同工作。</p>
<h3 id="实验内容-4"><a class="markdownIt-Anchor" href="#实验内容-4"></a> 实验内容</h3>
<p>创建两个进程，让子进程读取一个文件，父进程等待子进程读取完文件后继续执行，实现进程协同工作。</p>
<p>进程协同工作就是协调好两个进程，使之安排好先后次序，并以此执行，可以用等待函数来实现这一点。当需要等待子进程运行结束时，可在父进程中调用等待函数。</p>
<h3 id="实验要求-4"><a class="markdownIt-Anchor" href="#实验要求-4"></a> 实验要求</h3>
<p>让父子进程按要求的顺序读取文件。</p>
<h3 id="实验设计与实现-4"><a class="markdownIt-Anchor" href="#实验设计与实现-4"></a> 实验设计与实现</h3>
<p>在父进程中调用<code>fork()</code>函数产生一个子进程，在子进程中读取文件，再在父进程中读取文件。为了保证父进程在子进程之后读取文件，所以使用<code>wait()</code>函数在父进程中等待子进程运行完毕后再运行接下来的代码。</p>
<p>在两个进程中，使用fopen等文件指针相关操作来读取文件。</p>
<h3 id="实验结果分析-4"><a class="markdownIt-Anchor" href="#实验结果分析-4"></a> 实验结果分析</h3>
<figure class="highlight c"><table><tr><td class="code"><pre><code class="hljs C"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;unistd.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;sys/sem.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;sys/wait.h&gt;</span></span><br><br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-keyword">pid_t</span> pid;<br>    pid=fork();<br>    FILE *fp=fopen(<span class="hljs-string">&quot;/home/zhouhf/CLionProjects/os_exp4/data.txt&quot;</span>,<span class="hljs-string">&quot;r&quot;</span>);<br>    <span class="hljs-keyword">if</span>(fp==<span class="hljs-literal">NULL</span>)<br>    &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Fail to open file!\n&quot;</span>);<br>        <span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);<br>    &#125;<br>    <span class="hljs-keyword">if</span>(pid==<span class="hljs-number">-1</span>)<br>    &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Fail to create process!\n&quot;</span>);<br>        <span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(pid==<span class="hljs-number">0</span>)<br>    &#123;<br>        <span class="hljs-comment">//child process</span><br>        <span class="hljs-keyword">char</span> str[<span class="hljs-number">101</span>];<br>        fgets(str,<span class="hljs-number">100</span>,fp);<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;This is from child process:\n&quot;</span>);<br>        <span class="hljs-built_in">puts</span>(str);<br>    &#125;<br>    <span class="hljs-keyword">else</span> <span class="hljs-comment">// father process</span><br>    &#123;<br>        <span class="hljs-keyword">int</span> status;<br>        wait(&amp;status); <span class="hljs-comment">//wait until child process ends</span><br>        <span class="hljs-keyword">char</span> str[<span class="hljs-number">101</span>];<br>        fgets(str,<span class="hljs-number">100</span>,fp);<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;This is from father process:\n&quot;</span>);<br>        <span class="hljs-built_in">puts</span>(str);<br>    &#125;<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure>
<p>其中，文件data.txt的内容为如下</p>
<blockquote>
<p>Hello, have a nice day!</p>
</blockquote>
<p>运行结果：</p>
<p><img src="/2022/05/23/OS%E5%AE%9E%E9%AA%8C%E8%AE%B0%E5%BD%95/os_exp/p4.png" alt="p4"></p>
<h2 id="实验五匿名管道通信"><a class="markdownIt-Anchor" href="#实验五匿名管道通信"></a> 实验五：匿名管道通信</h2>
<h3 id="实验目的-5"><a class="markdownIt-Anchor" href="#实验目的-5"></a> 实验目的</h3>
<p>学习使用匿名管道在两个进程间建立通信。</p>
<h3 id="实验内容-5"><a class="markdownIt-Anchor" href="#实验内容-5"></a> 实验内容</h3>
<p>分别建立名为Parent的单文档应用程序和Child的单文档应用程序作为父子进程，由父进程创建一个匿名管道，实现父子进程向匿名管道写入和读取数据。</p>
<h3 id="实验要求-5"><a class="markdownIt-Anchor" href="#实验要求-5"></a> 实验要求</h3>
<p>父进程要能够从子进程创建的匿名管道中读取数据，实现进程间通信。</p>
<h3 id="实验设计与实现-5"><a class="markdownIt-Anchor" href="#实验设计与实现-5"></a> 实验设计与实现</h3>
<h4 id="创建管道"><a class="markdownIt-Anchor" href="#创建管道"></a> 创建管道</h4>
<p>函数：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><code class="hljs C"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">pipe</span> <span class="hljs-params">(<span class="hljs-keyword">int</span> __pipedes[<span class="hljs-number">2</span>])</span></span>;<br></code></pre></td></tr></table></figure>
<p>pipe函数需要一个长度为2的数组指针作为参数，创建管道完成后，会修改数组指针的值作为标识符（_pipedes[0]是读取的管道，_pipedes[1]写入的管道），当创建失败时，该函数会返回-1值。</p>
<h4 id="子进程"><a class="markdownIt-Anchor" href="#子进程"></a> 子进程</h4>
<p>子进程只需要写入数据，所以可以在子进程中使用<code>close(int)</code>函数将读取的管道关闭。</p>
<p>接下来，使用<code>write</code>函数</p>
<figure class="highlight c"><table><tr><td class="code"><pre><code class="hljs C"><span class="hljs-function"><span class="hljs-keyword">ssize_t</span> <span class="hljs-title">write</span> <span class="hljs-params">(<span class="hljs-keyword">int</span> __fd, <span class="hljs-keyword">const</span> <span class="hljs-keyword">void</span> *__buf, <span class="hljs-keyword">size_t</span> __n)</span></span><br></code></pre></td></tr></table></figure>
<p>三个参数分别是：</p>
<ul>
<li>管道标识符</li>
<li>缓冲区的头指针</li>
<li>缓冲区的大小</li>
</ul>
<p>该函数会返回成功写入的字节数（由于各种可能导致写入失败的因素，该值可能会比预期的小）</p>
<h4 id="父进程"><a class="markdownIt-Anchor" href="#父进程"></a> 父进程</h4>
<p>同理，在父进程中，只需要读取数据，所以使用<code>close</code>函数关闭写入管道，然后使用<code>read</code>函数从管道读取内容。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><code class="hljs c"><span class="hljs-function"><span class="hljs-keyword">ssize_t</span> <span class="hljs-title">read</span> <span class="hljs-params">(<span class="hljs-keyword">int</span> __fd, <span class="hljs-keyword">void</span> *__buf, <span class="hljs-keyword">size_t</span> __nbytes)</span></span><br></code></pre></td></tr></table></figure>
<p>该函数与write函数类似，但需要注意的是第一个参数要传递读取管道的标识符，buf指针是期望读入的缓冲区。</p>
<h3 id="实验结果分析-5"><a class="markdownIt-Anchor" href="#实验结果分析-5"></a> 实验结果分析</h3>
<figure class="highlight c"><table><tr><td class="code"><pre><code class="hljs C"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;unistd.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;sys/wait.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cstring&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&quot;cstdlib&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&quot;time.h&quot;</span></span><br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> _pipe[<span class="hljs-number">2</span>];<br>    <span class="hljs-keyword">char</span> msg[]=<span class="hljs-string">&quot;Have a nice day!\n&quot;</span>;<br>    <span class="hljs-keyword">char</span> buf[<span class="hljs-number">101</span>];<br>    <span class="hljs-keyword">int</span> res=pipe(_pipe);<br>    <span class="hljs-keyword">if</span>(res==<span class="hljs-number">-1</span>)<br>    &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Fail to build pipe!\n&quot;</span>);<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>    &#125;<br>    <span class="hljs-keyword">pid_t</span> pid=fork();<br><br>    <span class="hljs-keyword">if</span>(pid==<span class="hljs-number">-1</span>)<br>    &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Fail to fork process!\n&quot;</span>);<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>    &#125;<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(pid==<span class="hljs-number">0</span>) <span class="hljs-comment">//child process</span><br>    &#123;<br>        close(_pipe[<span class="hljs-number">0</span>]);<br>        write(_pipe[<span class="hljs-number">1</span>],msg,<span class="hljs-keyword">sizeof</span>(msg));<br>        <span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span> <span class="hljs-comment">//father process</span><br>    &#123;<br>        <span class="hljs-keyword">int</span> status;<br>        wait(&amp;status);<br>        close(_pipe[<span class="hljs-number">1</span>]);<br>        read(_pipe[<span class="hljs-number">0</span>],buf,<span class="hljs-keyword">sizeof</span>(buf));<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;msg from child process :%s&quot;</span>,buf);<br>    &#125;<br><br><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure>
<p>运行结果：</p>
<p><img src="/2022/05/23/OS%E5%AE%9E%E9%AA%8C%E8%AE%B0%E5%BD%95/os_exp/p5.png" alt="p5"></p>
]]></content>
      <categories>
        <category>课内</category>
        <category>操作系统</category>
      </categories>
      <tags>
        <tag>实验</tag>
        <tag>操作系统</tag>
      </tags>
  </entry>
  <entry>
    <title>scrapy爬虫框架学习笔记</title>
    <url>/2022/01/23/scrapy%E7%88%AC%E8%99%AB%E6%A1%86%E6%9E%B6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="scrapy入门"><a class="markdownIt-Anchor" href="#scrapy入门"></a> Scrapy入门</h1>
<h2 id="一基础指令"><a class="markdownIt-Anchor" href="#一基础指令"></a> 一.基础指令</h2>
<p><strong>使用命令提示符，cd到想要操作的目录</strong></p>
<h3 id="scrapy-startproject-name"><a class="markdownIt-Anchor" href="#scrapy-startproject-name"></a> scrapy startproject name</h3>
<p>在该目录下创建项目</p>
<h3 id="scrapy-genspider-name-domain"><a class="markdownIt-Anchor" href="#scrapy-genspider-name-domain"></a> scrapy genspider name domain</h3>
<p><strong>使用前需要先cd到下一级目录</strong></p>
<blockquote>
<p>domain参数不需要带http或者https的头，也不需要引号</p>
</blockquote>
<h3 id="scrapy-crawl-name"><a class="markdownIt-Anchor" href="#scrapy-crawl-name"></a> scrapy crawl name</h3>
<p>启动名字为name的爬虫</p>
<hr>
<h2 id="二开始"><a class="markdownIt-Anchor" href="#二开始"></a> 二.开始</h2>
<h3 id="在namepy中进行编辑"><a class="markdownIt-Anchor" href="#在namepy中进行编辑"></a> 在name.py中进行编辑</h3>
<p>爬虫开启后会把html传到name.py中的parse方法，可以在parse中进行网页解析。<br>
解析可以使用scrapy自带的方法，也可以脱离框架使用BeautifulSoup、XPath、CSS等。</p>
<h3 id="日志信息的屏蔽"><a class="markdownIt-Anchor" href="#日志信息的屏蔽"></a> 日志信息的屏蔽</h3>
<p>如果没有对日志信息屏蔽，会产生大量信息，影响调试。可以在settings.py中加入以下代码，将等级warning以下的日志信息全部屏蔽</p>
<figure class="highlight python"><table><tr><td class="code"><pre><code class="hljs python">LOG_LEVEL = <span class="hljs-string">&quot;WARNING&quot;</span><br></code></pre></td></tr></table></figure>
<hr>
<h2 id="三将数据传输到pipe中"><a class="markdownIt-Anchor" href="#三将数据传输到pipe中"></a> 三.将数据传输到pipe中</h2>
<p><strong>使用yield关键字</strong><br>
yield可以将数据逐个转入，可以使用的数据类型是Request,BaseItem,dict或者None。（不可以直接返回列表！！）</p>
<h3 id="在此之前"><a class="markdownIt-Anchor" href="#在此之前"></a> 在此之前</h3>
<p>使用pipe需要先在设置中开启pipeline，在setting.py中取消列代码的注释：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><code class="hljs python">ITEM_PIPELINES = &#123;<br>   <span class="hljs-string">&#x27;firstscrapy.pipelines.FirstscrapyPipeline&#x27;</span>: <span class="hljs-number">300</span>,<br>&#125;<br></code></pre></td></tr></table></figure>
<p>字典中的键表示pipeline的名字，值表示这个pipeline的权重，数据会先结果权重小的pipeline再经过权重大的。</p>
<h3 id="为什么要有多个pipeline"><a class="markdownIt-Anchor" href="#为什么要有多个pipeline"></a> 为什么要有多个pipeline</h3>
<ul>
<li>一个项目可能有多个爬虫，爬取不同的网站产生不同的数据，所以需要多个pipeline对数据进行处理。</li>
<li>当然也可以使用一个pipeline，通过对item加一个<strong>come_from</strong>的键来判断该是数据的来源</li>
</ul>
<h3 id="pipelineprocess_item方法的第三个参数spider"><a class="markdownIt-Anchor" href="#pipelineprocess_item方法的第三个参数spider"></a> pipeline.process_item方法的第三个参数spider</h3>
<p>spider参数即为创建的爬虫中的类，其有name属性（<a href="http://xn--myspider-8q7m267h5d8cri7b52f.py">详见创建的myspider.py</a>），可以通过name来判断数据的来源，从而对不同数据进行处理。</p>
<hr>
<h2 id="四logging的使用"><a class="markdownIt-Anchor" href="#四logging的使用"></a> 四.logging的使用</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> logging<br>logging.warning(item)<br></code></pre></td></tr></table></figure>
<p>将item以warning的方式打印出来。与print不同的地方是，logging可以以更高的等级打印，而且可以将打印的内容保存到本地，方便后续的调试，为开发提供了方便。<br>
这里使用warning是因为之前在settings.py中设置了打印的等级为warning，只有warning级别的日志才能被打印在命令提示符里。</p>
<h3 id="指明输出日志的来源"><a class="markdownIt-Anchor" href="#指明输出日志的来源"></a> 指明输出日志的来源</h3>
<hr>
<hr>
<h1 id="组装request对象"><a class="markdownIt-Anchor" href="#组装request对象"></a> 组装Request对象</h1>
<p><strong>语法</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">yield</span> scrapy.Rquest(next_page_url, call_back=self.parse)<br></code></pre></td></tr></table></figure>
<p><strong>在settings中设置User-Agent：</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><code class="hljs python">USER-AGENT = <span class="hljs-string">&#x27;Mozilla/5.0&#x27;</span><br></code></pre></td></tr></table></figure>
<h2 id="完整的scrapyrequest对象"><a class="markdownIt-Anchor" href="#完整的scrapyrequest对象"></a> 完整的scrapy.Request()对象</h2>
<p>scrapy.Request(url[,callback,method=‘GET’,headers,body,cookies,meta,dont_filter=False])</p>
<ul>
<li>注意事项
<ul>
<li>callback：制定传入的url参数交给哪个解析函数去处理</li>
<li>meta：实现在不同解析函数中传递数据，meta默认会携带部分信息，如下载延迟，请求深度等等。<strong>meta以字典形式定义</strong>，存取数据均与字典操作相同。</li>
<li>dont_filter：让scrapy不再对url去重，即一个url地址可能访问多次。</li>
<li>cookies只能储存在函数的参数中，将cookies用字符串形式放在headers中传入将不起作用。</li>
</ul>
</li>
</ul>
<hr>
<hr>
<p>直接使用上面的语句，输出的日志前面总是带有一个[root]标识，这表示了日志的来源，实际上，我们希望每一句日志都能体现出其来源，所以要使用下面的语句。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><code class="hljs python">logger = logging.getlogger(__name__)<br></code></pre></td></tr></table></figure>
<p>该函数实例化一个logging，就可以使用下面的语句输出</p>
<figure class="highlight python"><table><tr><td class="code"><pre><code class="hljs python">logger.warning(item)<br></code></pre></td></tr></table></figure>
<p>就可以在输出的日志前面加上[项目.spiders.爬虫名]的提示信息</p>
<h3 id="日志的保存"><a class="markdownIt-Anchor" href="#日志的保存"></a> 日志的保存</h3>
<p>在settings.py中设置</p>
<figure class="highlight python"><table><tr><td class="code"><pre><code class="hljs python">LOG_FILE = <span class="hljs-string">&quot;./log.log&quot;</span><br></code></pre></td></tr></table></figure>
<p>第一个.号表示当前目录，储存后的文件为log.log。<br>
修改设置后日志不会在命令提示符中输出。</p>
<hr>
<hr>
<h1 id="选择器html解析器"><a class="markdownIt-Anchor" href="#选择器html解析器"></a> 选择器（html解析器）</h1>
<blockquote>
<p>scrapy拥有自己的一套数据提取机制，成为选择器（selector），因为它们通过特定的xpath或者css表达式来选择HTML文件中的某个部分。scrapy选择器构建于lxml库之上，这意味着它们在速度和解析准确性上非常相似，用法也和之前讲的lxml解析基本相似。当然也可以脱离这些体系，使用bs4库进行解析。</p>
</blockquote>
<hr>
<h2 id="selector的用法"><a class="markdownIt-Anchor" href="#selector的用法"></a> selector的用法</h2>
<h3 id="1xpath"><a class="markdownIt-Anchor" href="#1xpath"></a> 1.xpath()：</h3>
<p>传入Xpath表达式，返回该表达式所对应的所有节点的selector list<strong>列表</strong></p>
<h3 id="2css"><a class="markdownIt-Anchor" href="#2css"></a> 2.css()</h3>
<p>传入css表达式，返回该表达式所对应的所有节点的selector list<strong>列表</strong></p>
<h3 id="3extract"><a class="markdownIt-Anchor" href="#3extract"></a> 3.extract()</h3>
<p>序列化该节点为Unicode字符串并返回list<strong>列表</strong></p>
<h3 id="re"><a class="markdownIt-Anchor" href="#re"></a> re()</h3>
<p>根据传入的正则表达式对数据进行提取，返回Unicode字符串列表，regex可以是一个已经编译的正则表达式，也可以是一个即将被编译的正则表达式字符串</p>
<hr>
<h2 id="更好地配对"><a class="markdownIt-Anchor" href="#更好地配对"></a> 更好地配对</h2>
<p>方法的调用很简单，更多的时间是花在Xpath和css表达式的构造。scrapy提供了一种简便的方法来查看表达式是否正确、是否真的起作用。<br>
另起一个命令行窗口，在其中输入</p>
<figure class="highlight mipsasm"><table><tr><td class="code"><pre><code class="hljs mipsasm"><span class="hljs-keyword">scrapy </span><span class="hljs-keyword">shell </span><span class="hljs-string">&quot;/爬取网站的网址&quot;</span><br></code></pre></td></tr></table></figure>
<h2 id="记得要加双引号然后输入responsexpath或者responsecss就可以抽取出当前网站的标签返回的是unicode格式"><a class="markdownIt-Anchor" href="#记得要加双引号然后输入responsexpath或者responsecss就可以抽取出当前网站的标签返回的是unicode格式"></a> <strong>记得要加双引号</strong><br>
然后输入response.xpath(“…”)或者response.css(“…”)就可以抽取出当前网站的标签（返回的是Unicode格式）。</h2>
<hr>
<h1 id="通过post请求登录"><a class="markdownIt-Anchor" href="#通过post请求登录"></a> 通过POST请求登录</h1>
<h2 id="一-通过formrequest类来发送请求类似request"><a class="markdownIt-Anchor" href="#一-通过formrequest类来发送请求类似request"></a> 一、通过FormRequest类来发送请求（类似Request）</h2>
<p>首先查看network中发送请求的请求头，获取请求头中的类似用户名、密码的键值对<br>
特别要注意cookie、token等值，要在源代码中找到对应的值，在python的字典中填入。</p>
<h2 id="二-更方便的方法"><a class="markdownIt-Anchor" href="#二-更方便的方法"></a> 二、更方便的方法</h2>
<p>FormRequest类有一个from_request的方法，可以自动寻找网页中的表单。</p>
<h3 id="参数"><a class="markdownIt-Anchor" href="#参数"></a> 参数：</h3>
<ul>
<li>response</li>
<li>formdata 字典</li>
<li>callback</li>
</ul>
<h2 id="如果response中有两个表单怎么办"><a class="markdownIt-Anchor" href="#如果response中有两个表单怎么办"></a> #如果response中有两个表单怎么办？</h2>
<p>可以查看该方法的源代码，通过给其传入xpath、css等参数来定位表单。</p>
<h2 id="三-直接通过request类来发送请求不过要将其中的method参数改为post"><a class="markdownIt-Anchor" href="#三-直接通过request类来发送请求不过要将其中的method参数改为post"></a> 三、直接通过Request类来发送请求，不过要将其中的method参数改为POST</h2>
<hr>
<hr>
<h1 id="中间件"><a class="markdownIt-Anchor" href="#中间件"></a> 中间件</h1>
<h2 id="下载中间件"><a class="markdownIt-Anchor" href="#下载中间件"></a> 下载中间件</h2>
<h3 id="使用方法和pipeline类似在文件中定义一个类然后在setting中开启"><a class="markdownIt-Anchor" href="#使用方法和pipeline类似在文件中定义一个类然后在setting中开启"></a> 使用方法和pipeline类似，在文件中定义一个类，然后在setting中开启</h3>
<h3 id="默认方法"><a class="markdownIt-Anchor" href="#默认方法"></a> 默认方法</h3>
<p><strong>process_request(self,request,spider)</strong><br>
当每个request通过下载中间件时，该方法被调用，可以用来修改请求头等信息（请求时调用）。该方法只能返回None。<br>
返回值：</p>
<ul>
<li>若返回None，Scrapy将继续处理该Request，执行其他的中间件的相应方法，直到合适的下载器处理函数被调用，该Request被执行</li>
<li>若返回Response对象，Scrapy不会调用其他的方法，而直接返回该response。</li>
<li>若返回Request对象，Scrapy将停止调用其他中间件的process_request，并重新调度返回的Request。</li>
</ul>
<p><strong>process_response(self,request,response,spider)</strong><br>
当下载器完成http请求，传递响应给引擎时调用（获得请求时调用）。该方法必须return request或者response。<br>
返回值：</p>
<ul>
<li>当返回Response对象时，会将该response交给其他中间件的proce_response处理</li>
<li>当返回Request对象是，则中间件链停止，返回的Request会被重新调度并下载。</li>
</ul>
<h3 id="process_request还可以用于添加代理"><a class="markdownIt-Anchor" href="#process_request还可以用于添加代理"></a> process_request还可以用于添加代理</h3>
<p>用法：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><code class="hljs python">request.meta[<span class="hljs-string">&quot;proxy&quot;</span>] = <span class="hljs-string">&quot;http://124.115.126.76:808&quot;</span><br><span class="hljs-comment">#代理的形式为：协议+ip地址+端口</span><br></code></pre></td></tr></table></figure>
<hr>
<hr>
<h1 id="定义item"><a class="markdownIt-Anchor" href="#定义item"></a> 定义Item</h1>
<h2 id="在文件itemspy中编辑"><a class="markdownIt-Anchor" href="#在文件itemspy中编辑"></a> 在文件items.py中编辑</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><code class="hljs python"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">FirstscrapyItem</span>(<span class="hljs-params">scrapy.Item</span>):</span><br>    <span class="hljs-comment"># define the fields for your item here like:</span><br>    <span class="hljs-comment"># name = scrapy.Field()</span><br>    <span class="hljs-keyword">pass</span><br></code></pre></td></tr></table></figure>
<p>该类继承自scrapy.Item类，实际上，该类的操作方法和字典一样，不同之处在于，该类使用时需要在items.py中使用<code>scrapy.Field()</code>“声明”一个键值对，再在解析函数中实例化对象来使用。<br>
<strong>这么做的好处</strong></p>
<ul>
<li>目前已知的好处就是防止手抖将键的名字写错，因为当解析函数中键的名字写错时函数会引发异常。</li>
<li>把数据交给pipeline时，可以用<code>isinstance()</code>来判断数据属于哪个Item，以便进行不同的处理</li>
</ul>
<h2 id="在mongdodb中使用item时的注意事项"><a class="markdownIt-Anchor" href="#在mongdodb中使用item时的注意事项"></a> 在mongdoDB中使用Item时的注意事项</h2>
<p>由于mongdoDB只支持字典操作，所以要使用dict()函数将Item对象转化为字典类型再储存入数据库中</p>
<hr>
<hr>
<h1 id="scrapy中的crawlspider类"><a class="markdownIt-Anchor" href="#scrapy中的crawlspider类"></a> Scrapy中的CrawlSpider类</h1>
<h2 id="创建crawlspider爬虫"><a class="markdownIt-Anchor" href="#创建crawlspider爬虫"></a> 创建CrawlSpider爬虫</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><code class="hljs python">scrapy genspider -t crawl name domain<br></code></pre></td></tr></table></figure>
<p>创建后会发现新建爬虫的父类变成了CrawlSpider，并且出现了一个rules的元组，即为规则。<br>
rules元组冲包含了Rule类，包含以下参数</p>
<ul>
<li>LinkExtractor，即为链接提取器
<ul>
<li>allow 一个正则表达式</li>
</ul>
</li>
<li>callback 提取出的url地址会交给callback处理</li>
<li>follow 当前url地址的响应是否重新经过rules来提取（开启后相当于一个递归，通常在翻页时使用）</li>
</ul>
<p><strong>当然，也可以不使用rules规则，而在parse_item中yield出一个Request类，并定义一个解析方法来对网页进行解析。</strong></p>
<h2 id="优缺点"><a class="markdownIt-Anchor" href="#优缺点"></a> 优缺点：</h2>
<p>该类为程序员提供了一个创建爬虫的更简便的方式，可以用更少的代码量完成同样的操作，但缺点是无法在解析方法之间传递数据（没有meta参数用于传递）</p>
<p>LinkExtractor参数补充：</p>
<ul>
<li>allow 满足正则表达式的url会被提取</li>
<li>deny 满足正则表达式的url都不会被提取（优先级高于allow）</li>
<li>allow_domains 会被提取的链接的domain</li>
<li>deny_domains 不会被提取的链接的domain</li>
<li>restrict_xpaths 使用xpath表达式，和allow共同作用过滤链接，该xpath满足的url地址都会被提取</li>
</ul>
<p>spider.Rule常见参数</p>
<ul>
<li>Link_extractor：</li>
<li>callback：</li>
<li>follow:</li>
<li>process_link:为一个函数对象，当从Link_extractor中过滤出一个url时会调用这个函数来处理url（一般用于过滤url）</li>
<li>process_request:一个函数对象，当提取到一个request时会调用该函数（一般用于过滤request）</li>
</ul>
<hr>
<hr>
]]></content>
      <categories>
        <category>前端</category>
        <category>爬虫</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title>《离散数学（二）》学习笔记</title>
    <url>/2022/10/17/%E3%80%8A%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6%EF%BC%88%E4%BA%8C%EF%BC%89%E3%80%8B%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<p>过了快一年半，又再次接触到了《离散数学》这门课。与之前学习《线性代数》、《概率论》时那种“过了就行”的心态相比，现在我对数学慢慢开始有了敬畏的心理，可能是最近搞深度学习被各种数学公式折磨够了吧。而且，从主观感受上来说，《离散数学》这门课是最“返璞归真”的数学课，它用数学符号把世界上各种事物抽象成数学符号，用一种“理想的形式”来研究世界。我记得《离散数学（一）》的老师说过，世界是连续的，但是计算机底层只有高低电平，没法表示连续的数据，所以《离散数学》对计算机专业的学生来说是非常重要的一门数学课。</p>
<h1 id="代数"><a class="markdownIt-Anchor" href="#代数"></a> 代数</h1>
<h2 id="61代数结构"><a class="markdownIt-Anchor" href="#61代数结构"></a> 6.1代数结构</h2>
<p>代数由三部分组成：</p>
<ul>
<li>一个集合，称为代数的<strong>载体</strong>，这个集合通常非空。</li>
<li>定义在载体上的<strong>运算</strong>。根据上课的内容，运算要有<strong>封闭性</strong>，即运算后的结果还要在载体上。</li>
</ul>
<p>运算是指从<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>S</mi><mi>m</mi></msup></mrow><annotation encoding="application/x-tex">S^m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span></span></span></span></span></span></span> 到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span>的一个映射。</p>
<ul>
<li>载体的特异元素，如零元，幺元，叫做<strong>代数常数</strong>。若不关心特异元素则可以没有代数常数。</li>
</ul>
<h3 id="代数运算的几个性质"><a class="markdownIt-Anchor" href="#代数运算的几个性质"></a> 代数运算的几个性质</h3>
<ul>
<li>交换律</li>
<li>结合律</li>
<li>分配律（下式表示*对+左可分配）</li>
</ul>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>a</mi><mo>∗</mo><mo stretchy="false">(</mo><mi>b</mi><mo>+</mo><mi>c</mi><mo stretchy="false">)</mo><mo>=</mo><mi>a</mi><mo>∗</mo><mi>b</mi><mo>+</mo><mi>a</mi><mo>∗</mo><mi>c</mi></mrow><annotation encoding="application/x-tex">a*(b+c)=a*b+a*c
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">c</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">c</span></span></span></span></span></p>
<ul>
<li>吸收率(下式表示*对+左可吸收)</li>
</ul>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>x</mi><mo>∗</mo><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mi>x</mi></mrow><annotation encoding="application/x-tex">x*(x+y)=x
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span></span></span></span></span></p>
<ul>
<li>消去律（下式表示左可消去）</li>
</ul>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>a</mi><mo>∗</mo><mi>x</mi><mo>=</mo><mi>a</mi><mo>∗</mo><mi>y</mi><mo>⇒</mo><mi>x</mi><mo>=</mo><mi>y</mi></mrow><annotation encoding="application/x-tex">  a*x=a*y \Rarr x=y
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⇒</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span></span></p>
<h3 id="代数常数"><a class="markdownIt-Anchor" href="#代数常数"></a> 代数常数</h3>
<p>一般就是零元和幺元。</p>
<p>零元和任何元素运算都是零元，幺元和任何元素运算都是该元素，可以类比整数集合上乘法的0和1。</p>
<p>书上还介绍了一个定理</p>
<blockquote>
<p>推论6.1-2：一个二元运算的幺元（零元）是唯一的。</p>
</blockquote>
<p>即左幺元和右幺元相等，证明直接用左右幺元相乘即可。</p>
<h3 id="逆元"><a class="markdownIt-Anchor" href="#逆元"></a> 逆元</h3>
<blockquote>
<p>定义6.1-3 若x*y=e，e为幺元，则称x是y的左逆元，y是x的右逆元。</p>
</blockquote>
<blockquote>
<p>定理6.1-3 对于<strong>可结合</strong>运算，如果一个元素有左逆元和右逆元，则左右逆元相等。</p>
</blockquote>
<p>简单利用结合律即可证明。</p>
<h2 id="62-子代数-63-同态"><a class="markdownIt-Anchor" href="#62-子代数-63-同态"></a> 6.2 子代数 &amp; 6.3 同态</h2>
<h3 id="子代数"><a class="markdownIt-Anchor" href="#子代数"></a> 子代数</h3>
<blockquote>
<p>定义6.2-2 设<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>=</mo><mo>&lt;</mo><mi>S</mi><mo separator="true">,</mo><mo>∘</mo><mo separator="true">,</mo><mi mathvariant="normal">△</mi><mo separator="true">,</mo><mi>k</mi><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">A=&lt;S,\circ,\triangle,k&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">∘</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">△</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span>是一代数，如果</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>S</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>⊂</mo><mi>S</mi></mrow><annotation encoding="application/x-tex">S&#x27; \sub S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.790992em;vertical-align:-0.0391em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⊂</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span></li>
<li>S’对S上的运算<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∘</mo></mrow><annotation encoding="application/x-tex">\circ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord">∘</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">△</mi></mrow><annotation encoding="application/x-tex">\triangle</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">△</span></span></span></span>封闭</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo>∈</mo><mi>S</mi></mrow><annotation encoding="application/x-tex">k\in S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span></li>
</ul>
<p>那么<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>A</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>=</mo><mo>&lt;</mo><mi>S</mi><mo separator="true">,</mo><mo>∘</mo><mo separator="true">,</mo><mi mathvariant="normal">△</mi><mo separator="true">,</mo><mi>k</mi><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">A&#x27;=&lt;S,\circ,\triangle,k&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">∘</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">△</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span>是A的<strong>子代数</strong>。</p>
</blockquote>
<p>子代数中较难满足的一个条件就是封闭性，这个定义告诉我们一个代数系统可以由若干个（或者只有一个）子代数组成。</p>
<h3 id="同构"><a class="markdownIt-Anchor" href="#同构"></a> 同构</h3>
<blockquote>
<p>定义6.3-1 代数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>=</mo><mo>&lt;</mo><mi>S</mi><mo separator="true">,</mo><mo>∗</mo><mo separator="true">,</mo><mi mathvariant="normal">△</mi><mo separator="true">,</mo><mi>k</mi><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">A=&lt;S,*,\triangle,k&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">∗</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">△</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>A</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>=</mo><mo>&lt;</mo><msup><mi>S</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo separator="true">,</mo><msup><mo>∗</mo><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo separator="true">,</mo><msup><mi mathvariant="normal">△</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo separator="true">,</mo><msup><mi>k</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">A&#x27;=&lt;S&#x27;,*&#x27;,\triangle&#x27;,k&#x27;&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.946332em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mbin">∗</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord">△</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span>是<strong>同构</strong>的，当且仅当</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mo>:</mo><mi>S</mi><mo>→</mo><msup><mi>S</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">h: S\rarr S&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mo stretchy="false">(</mo><mi>a</mi><mo>∗</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><mi>h</mi><mo stretchy="false">(</mo><mi>a</mi><mo stretchy="false">)</mo><msup><mo>∗</mo><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mi>h</mi><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">h(a*b)=h(a)*&#x27;h(b)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin"><span class="mbin">∗</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal">b</span><span class="mclose">)</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mo stretchy="false">(</mo><mi mathvariant="normal">△</mi><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi mathvariant="normal">△</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mi>h</mi><mo stretchy="false">(</mo><mi>a</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">h(\triangle a)=\triangle&#x27;h(a)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord">△</span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">△</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mclose">)</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi>k</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">h(k)=k&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></li>
</ul>
<p>其中h是一个双射函数。</p>
</blockquote>
<p>这里a、b是S的任意元素，映射h叫做从A到A’的同构，A‘叫做A在映射h下的同构象。</p>
<p>同构有许多优秀的性质，在一定程度上可以简化研究。如果一个代数系统过于复杂，则我们可以找出与其同构的一个代数（通常比原来的代数系统更简单），从而简化研究。在中学时候我们就学习过把生活中的问题抽象成数学问题，那么同构就是将问题抽象成另一个数学问题，当然前提是我们丢弃了我们不关心的部分，且我们关心的部分性质相似（甚至不变）。</p>
<h3 id="同态"><a class="markdownIt-Anchor" href="#同态"></a> 同态</h3>
<p>正如文所说，我们可以寻找某个代数的同构来简化研究。但是，同构的定义太“强”了，我们很难找到一个满足这样条件的一个双射函数。所以，同态降低了要求，放弃了“h是一个双射函数”的要求</p>
<blockquote>
<p>定义6.3-2 代数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>=</mo><mo>&lt;</mo><mi>S</mi><mo separator="true">,</mo><mo>∗</mo><mo separator="true">,</mo><mi mathvariant="normal">△</mi><mo separator="true">,</mo><mi>k</mi><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">A=&lt;S,*,\triangle,k&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">∗</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">△</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>A</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>=</mo><mo>&lt;</mo><msup><mi>S</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo separator="true">,</mo><msup><mo>∗</mo><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo separator="true">,</mo><msup><mi mathvariant="normal">△</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo separator="true">,</mo><msup><mi>k</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">A&#x27;=&lt;S&#x27;,*&#x27;,\triangle&#x27;,k&#x27;&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.946332em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mbin">∗</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord">△</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span>是<strong>同态</strong>的，当且仅当</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mo>:</mo><mi>S</mi><mo>→</mo><msup><mi>S</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">h: S\rarr S&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mo stretchy="false">(</mo><mi>a</mi><mo>∗</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><mi>h</mi><mo stretchy="false">(</mo><mi>a</mi><mo stretchy="false">)</mo><msup><mo>∗</mo><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mi>h</mi><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">h(a*b)=h(a)*&#x27;h(b)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin"><span class="mbin">∗</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal">b</span><span class="mclose">)</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mo stretchy="false">(</mo><mi mathvariant="normal">△</mi><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi mathvariant="normal">△</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mi>h</mi><mo stretchy="false">(</mo><mi>a</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">h(\triangle a)=\triangle&#x27;h(a)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord">△</span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">△</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mclose">)</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi>k</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">h(k)= k&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></li>
</ul>
</blockquote>
<p>这里a、b是S的任意元素，映射h叫做从A到A’的同态，A‘叫做A在映射h下的同态象。根据h是单射还是满射，还延伸出了<strong>单一同态</strong>和<strong>满同态</strong>的概念。</p>
<p>关于同态，有几条重要的性质。</p>
<blockquote>
<p>定理6.3-2 设h是从<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>=</mo><mo>&lt;</mo><mi>S</mi><mo separator="true">,</mo><mo>∗</mo><mo separator="true">,</mo><mi mathvariant="normal">△</mi><mo separator="true">,</mo><mi>k</mi><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">A=&lt;S,*,\triangle,k&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">∗</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">△</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span>到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>A</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>=</mo><mo>&lt;</mo><msup><mi>S</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo separator="true">,</mo><msup><mo>∗</mo><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo separator="true">,</mo><msup><mi mathvariant="normal">△</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo separator="true">,</mo><msup><mi>k</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">A&#x27;=&lt;S&#x27;,*&#x27;,\triangle&#x27;,k&#x27;&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.946332em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mbin">∗</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord">△</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span>d的同态，那么A的同态象<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>A</mi><mrow><mo mathvariant="normal">′</mo><mo mathvariant="normal">′</mo></mrow></msup><mo>=</mo><mo>&lt;</mo><mi>h</mi><mo stretchy="false">(</mo><mi>S</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><msup><mo>∗</mo><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo separator="true">,</mo><msup><mi mathvariant="normal">△</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo separator="true">,</mo><msup><mi>k</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">A&#x27;&#x27;=&lt;h(S),*&#x27;,\triangle&#x27;,k&#x27;&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mbin">∗</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord">△</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span>是A’的子代数。</p>
<p>定理6.3-3 设h是从<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>=</mo><mo>&lt;</mo><mi>S</mi><mo separator="true">,</mo><mo>∗</mo><mo separator="true">,</mo><mi mathvariant="normal">△</mi><mo separator="true">,</mo><mi>k</mi><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">A=&lt;S,*,\triangle,k&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">∗</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">△</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span>到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>A</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>=</mo><mo>&lt;</mo><msup><mi>S</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo separator="true">,</mo><msup><mo>∗</mo><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo separator="true">,</mo><msup><mi mathvariant="normal">△</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo separator="true">,</mo><msup><mi>k</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">A&#x27;=&lt;S&#x27;,*&#x27;,\triangle&#x27;,k&#x27;&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.946332em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mbin">∗</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord">△</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span>d的同态，A的在h下的同态象为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>A</mi><mrow><mo mathvariant="normal">′</mo><mo mathvariant="normal">′</mo></mrow></msup><mo>=</mo><mo>&lt;</mo><mi>h</mi><mo stretchy="false">(</mo><mi>S</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><msup><mo>∗</mo><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo separator="true">,</mo><msup><mi mathvariant="normal">△</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo separator="true">,</mo><msup><mi>k</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">A&#x27;&#x27;=&lt;h(S),*&#x27;,\triangle&#x27;,k&#x27;&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mbin">∗</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord">△</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span>，那么：</p>
<ul>
<li>若*是可交换的或可结合的，则在A‘’中，*‘也是可交换的或可结合的。</li>
<li>在A中的幺元e和零元<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>θ</mi></mrow><annotation encoding="application/x-tex">\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span></span></span></span>则A’'中有幺元<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mo stretchy="false">(</mo><mi>e</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">h(e)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal">e</span><span class="mclose">)</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">h(\theta)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span></span></span></span></li>
<li>对于运算*，若一个元素<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span></span></span></span>有逆元<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>x</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">x^{-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span>，那么在代数A’'中，对于运算<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>x</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">x&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>，元素<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">h(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>有逆元<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">h(x^{-1})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li>
<li>可分配的性质保持不变。</li>
</ul>
</blockquote>
<h2 id="64-同余关系"><a class="markdownIt-Anchor" href="#64-同余关系"></a> 6.4 同余关系</h2>
<p>这个关系的名字挺有意思的，应该就是由数论里的同余关系“借”来的，就跟<strong>偏序关系</strong>的符号<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≼</mo></mrow><annotation encoding="application/x-tex">\preccurlyeq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7733399999999999em;vertical-align:-0.13667em;"></span><span class="mrel amsrm">≼</span></span></span></span>长得很像小于等于符号一个道理（甚至可以直接写成小于等于）。</p>
<p>首先回顾一下什么是<strong>关系</strong>，用白话说，关系就是序偶构成的集合<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mo>=</mo><mo stretchy="false">{</mo><mo>&lt;</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo>&gt;</mo><mo separator="true">,</mo><mo>&lt;</mo><mi>c</mi><mo separator="true">,</mo><mi>d</mi><mo>&gt;</mo><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">R=\{&lt;a,b&gt;,&lt;c,d&gt;,\cdots \}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span><span class="base"><span class="strut" style="height:0.7335400000000001em;vertical-align:-0.19444em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">c</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mclose">}</span></span></span></span>，如果一对序偶<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>&lt;</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo>&gt;</mo><mo>∈</mo><mi>R</mi></mrow><annotation encoding="application/x-tex">&lt;a,b&gt;\in R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span>，<strong>我们称a和b有R关系，或者aRb</strong>（这两种表达都挺重要的）。关系可以由两个集合进行笛卡尔积产生。</p>
<p>而<strong>等价</strong>关系，就是有<strong>自反、对称、传递</strong>性质的关系，最常见的等价关系就是相等关系。</p>
<h3 id="等价类"><a class="markdownIt-Anchor" href="#等价类"></a> 等价类</h3>
<p>等价类的定义如下：</p>
<blockquote>
<p>定义3.5-3 设R是集合S上的等价关系，对于每一<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo>∈</mo><mi>A</mi></mrow><annotation encoding="application/x-tex">a\in A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">A</span></span></span></span>，a关于R的<strong>等价类</strong>是集合<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><mi>x</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mi>R</mi><mi>a</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{x|xRa\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal">x</span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal">a</span><span class="mclose">}</span></span></span></span>记为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mi>a</mi><msub><mo stretchy="false">]</mo><mi>R</mi></msub></mrow><annotation encoding="application/x-tex">[a]_R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal">a</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。</p>
</blockquote>
<p>等价类描述了与a有关系的所有元素，<strong>是一个集合</strong>，根据等价关系的性质可知，等价类中任意两个元素都有等价关系。不难证明，R的等价类集合（集合的集合）是A的划分。同理我们可以从一个A的划分得出A上的一个等价类，即A的划分中的每个元素（集合的元素还是集合）对自己作笛卡尔积。</p>
<p>可能有点绕，看下面这个例子：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo stretchy="false">{</mo><mo stretchy="false">[</mo><mi>a</mi><msub><mo stretchy="false">]</mo><mi>R</mi></msub><mi mathvariant="normal">∣</mi><mi>a</mi><mo>∈</mo><mi>R</mi><mo stretchy="false">}</mo><mo>=</mo><mo stretchy="false">{</mo><mo stretchy="false">{</mo><mn>1</mn><mo separator="true">,</mo><mn>4</mn><mo separator="true">,</mo><mn>7</mn><mo stretchy="false">}</mo><mo separator="true">,</mo><mo stretchy="false">{</mo><mn>2</mn><mo separator="true">,</mo><mn>5</mn><mo separator="true">,</mo><mn>8</mn><mo stretchy="false">}</mo><mo separator="true">,</mo><mo stretchy="false">{</mo><mn>3</mn><mo separator="true">,</mo><mn>6</mn><mo stretchy="false">}</mo><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{[a]_R|a\in R\}=\{\{1,4,7\},\{2,5,8\},\{3,6\}\}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mopen">[</span><span class="mord mathnormal">a</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">}</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mopen">{</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">4</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">7</span><span class="mclose">}</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mopen">{</span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">5</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">8</span><span class="mclose">}</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mopen">{</span><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">6</span><span class="mclose">}</span><span class="mclose">}</span></span></span></span></span></p>
<p>是集合S=<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mn>3</mn><mo separator="true">,</mo><mn>4</mn><mo separator="true">,</mo><mn>5</mn><mo separator="true">,</mo><mn>6</mn><mo separator="true">,</mo><mn>7</mn><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{1,2,3,4,5,6,7\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">4</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">5</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">6</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">7</span><span class="mclose">}</span></span></span></span>的一个划分，也是R的等价类集合（我们这里定义R为模3后余数相等），也可以表示为商集的形式<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mi mathvariant="normal">/</mi><mi>R</mi></mrow><annotation encoding="application/x-tex">A/R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">A</span><span class="mord">/</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span></p>
<h3 id="保持"><a class="markdownIt-Anchor" href="#保持"></a> 保持</h3>
<p>若对于S，R是S上的等价关系，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∀</mi><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo separator="true">,</mo><mi>c</mi><mo>∈</mo><mi>S</mi><mo separator="true">,</mo><mtext> </mtext><mi>a</mi><mi>R</mi><mi>b</mi><mo>⇒</mo><mi>a</mi><mo>∗</mo><mi>c</mi><mi>R</mi><mi>b</mi><mo>∗</mo><mi>c</mi></mrow><annotation encoding="application/x-tex">\forall a,b,c\in S,\  aRb \Rarr a*cRb*c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">∀</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⇒</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">c</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">c</span></span></span></span>，则称等价关系R在运算*下能保持。对于单元运算符也同理。</p>
<p>保持的意思就是，如果两个元素存在某种等价关系，则两个元素与另一个元素分别运算后的结果仍是等价的。</p>
<blockquote>
<p>定义6.4-2 设~是代数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>=</mo><mo>&lt;</mo><mi>S</mi><mo separator="true">,</mo><mo>∗</mo><mo separator="true">,</mo><mi mathvariant="normal">△</mi><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">A=&lt;S,*,\triangle&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">∗</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">△</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span>的载体S上的等价关系，对一切元素<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo separator="true">,</mo><mi>c</mi><mo>∈</mo><mi>S</mi></mrow><annotation encoding="application/x-tex">a,b,c\in S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span>,</p>
<ol>
<li>若a~b，则a*c~b*c和c*a~c*b</li>
<li>若a~b，则<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">△</mi><mi>a</mi><mo>∼</mo><mi mathvariant="normal">△</mi><mi>b</mi></mrow><annotation encoding="application/x-tex">\triangle a \sim \triangle b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">△</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">△</span><span class="mord mathnormal">b</span></span></span></span></li>
</ol>
<p>都满足，则~称为代数A上的<strong>同余关系</strong>，~的等价类叫做关系~的同余类。</p>
</blockquote>
<p>这里说&quot;~的等价类&quot;，应该是指<strong>商集</strong>S/R，即一个等价类的集合。</p>
<h3 id="构造同余关系"><a class="markdownIt-Anchor" href="#构造同余关系"></a> 构造同余关系</h3>
<p>同余关系不太好找，但是书中提供了一个方法来简单地构造同余关系。</p>
<blockquote>
<p>aRb当且仅当<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mo stretchy="false">(</mo><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><mi>h</mi><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">h(a)=h(b)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal">b</span><span class="mclose">)</span></span></span></span>，用集合表示为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mo>=</mo><mo stretchy="false">{</mo><mo>&lt;</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo>&gt;</mo><mi mathvariant="normal">∣</mi><mi>h</mi><mo stretchy="false">(</mo><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><mi>h</mi><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">)</mo><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">R=\{&lt;a,b&gt;|h(a)=h(b)\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mclose">}</span></span></span></span>，h是任何一个同态。</p>
</blockquote>
<p>简单地说，就是”代数系统A到A’的任意同态h可以诱导出同余关系“，方法就是将象相等的原象划分为一个等价类。</p>
<h2 id="65-商代数"><a class="markdownIt-Anchor" href="#65-商代数"></a> 6.5 商代数</h2>
<p>在等价关系中，我们将集合关于R的所有等价类再构成一个集合，称为一个划分，或者商集。那么类似的，我们对商代数定义如下。</p>
<blockquote>
<p>定义6.5-1 设~是代数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>=</mo><mo stretchy="false">{</mo><mi>S</mi><mo separator="true">,</mo><mo>∗</mo><mo separator="true">,</mo><mi mathvariant="normal">△</mi><mo separator="true">,</mo><mi>k</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">A=\{S,*,\triangle,k\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">∗</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">△</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">}</span></span></span></span>上的同余关系，A的关于~的<strong>商代数</strong>记为A/~，是代数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>&lt;</mo><mi>S</mi><mi mathvariant="normal">/</mi><mtext> </mtext><mo separator="true">,</mo><msup><mo>∗</mo><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo separator="true">,</mo><msup><mi mathvariant="normal">△</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo separator="true">,</mo><mo stretchy="false">[</mo><mi>k</mi><mo stretchy="false">]</mo><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">&lt;S/~,*&#x27;,\triangle&#x27;,[k]&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord">/</span><span class="mspace nobreak"> </span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mbin">∗</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord">△</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span>这里的*’和$ \triangle '$定义如下：</p>
<p>对于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∀</mi><mo stretchy="false">[</mo><mi>a</mi><mo stretchy="false">]</mo><mo separator="true">,</mo><mo stretchy="false">[</mo><mi>b</mi><mo stretchy="false">]</mo><mo>∈</mo><mi>S</mi><mi mathvariant="normal">/</mi><mo>∼</mo></mrow><annotation encoding="application/x-tex">\forall [a],[b]\in S/\sim</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∀</span><span class="mopen">[</span><span class="mord mathnormal">a</span><span class="mclose">]</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mopen">[</span><span class="mord mathnormal">b</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord">/</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∼</span></span></span></span>，有</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo stretchy="false">[</mo><mi>a</mi><mo stretchy="false">]</mo><msup><mo>∗</mo><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">[</mo><mi>b</mi><mo stretchy="false">]</mo><mo>=</mo><mo stretchy="false">[</mo><mi>a</mi><mo>∗</mo><mi>b</mi><mo stretchy="false">]</mo><mo separator="true">,</mo><msup><mi mathvariant="normal">△</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">[</mo><mi>a</mi><mo stretchy="false">]</mo><mo>=</mo><mo stretchy="false">[</mo><mi mathvariant="normal">△</mi><mi>a</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[a]*&#x27;[b]=[a*b],\triangle&#x27;[a]=[\triangle a]
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.051892em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal">a</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin"><span class="mbin">∗</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal">b</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.051892em;vertical-align:-0.25em;"></span><span class="mord mathnormal">b</span><span class="mclose">]</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord">△</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal">a</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">△</span><span class="mord mathnormal">a</span><span class="mclose">]</span></span></span></span></span></p>
</blockquote>
<p>这么一理解有些抽象，可以这么想，既然符合等价关系的元素关系运算后仍符合等价关系，只是它们换了一个等价类呆着而已，那我们可以不关心具体的运算元素，而是关注运算元素的等价类，我们只关心两个等价类运算后会去往哪个等价类。所以，这里的商代数上的关系都被定义成了等价类（集合）的运算。</p>
]]></content>
      <categories>
        <category>课内</category>
      </categories>
      <tags>
        <tag>课内</tag>
        <tag>离散数学</tag>
      </tags>
  </entry>
  <entry>
    <title>《动手学深度学习》之线性神经网络</title>
    <url>/2022/09/12/%E3%80%8A%E5%8A%A8%E6%89%8B%E5%AD%A6%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B%E4%B9%8B%E7%BA%BF%E6%80%A7%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/</url>
    <content><![CDATA[<h1 id="零-数据对象的操作"><a class="markdownIt-Anchor" href="#零-数据对象的操作"></a> 零、数据对象的操作</h1>
<p>在pytorch中，数据对象基本都可以用<em>张量</em>（实际上就是一个n维矩阵）来表达。</p>
<h3 id="常见函数方法"><a class="markdownIt-Anchor" href="#常见函数方法"></a> 常见函数/方法：</h3>
<p><code>X.shape</code>：返回一个列表，表示张量每个维度的长度</p>
<p><code>X.numel</code>：返回张量中元素个数</p>
<p><code>X.reshape</code>:重新设置张量各个维度大小，可以通过指定某个维度大小为-1来自动计算</p>
<p><code>torch.zeros or torch.ones</code>：创建一个全零张量or创建一个全1张量</p>
<p><code>torch.zeros_like or torch.ones_like</code>：参数是一个张量，创建一个与参数大小同的全0张量或全1张量</p>
<p><code>torch.rand or torch.randn</code>：前者创建一个[0,1]均匀分布的张量，后者创建一个服从标准正态分布的张量</p>
<h3 id="元素逐个操作"><a class="markdownIt-Anchor" href="#元素逐个操作"></a> 元素逐个操作</h3>
<p>Python原生的<strong>加减乘除和求幂、判断语句</strong>运算都是对张量对应元素进行逐个运算。</p>
<p><code>torch.exp</code>：是指数运算的逐个运算</p>
<p><code>X.sum</code>：求和，可以带上参数，对某个维度求和，keepdim=True可以指定保持某个维度不被压缩</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs pyth">X.sum(axis=[0,1])<br>X.sum(axis=0)<br></code></pre></td></tr></table></figure>
<h3 id="索引和切片"><a class="markdownIt-Anchor" href="#索引和切片"></a> 索引和切片</h3>
<h4 id="广播机制"><a class="markdownIt-Anchor" href="#广播机制"></a> 广播机制</h4>
<p>当运算的矩阵维数不足时，pytorch会将矩阵的此维度复制，以满足运算要求。</p>
<p>索引和切片机制大致与python的列表相当，但是pytorch还支持用列表来当索引：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><code class="hljs python">X = torch.arange(<span class="hljs-number">12</span>).reshape(<span class="hljs-number">3</span>,<span class="hljs-number">4</span>)<br>X[[<span class="hljs-number">0</span>,<span class="hljs-number">2</span>],:]<br><span class="hljs-comment">#tensor([[ 0,  1,  2,  3],</span><br><span class="hljs-comment">#        [ 8,  9, 10, 11]])</span><br></code></pre></td></tr></table></figure>
<h3 id="矩阵操作"><a class="markdownIt-Anchor" href="#矩阵操作"></a> 矩阵操作</h3>
<p><code>torch.dot</code>:点乘</p>
<p><code>torch.mv(A, x)</code>：矩阵-向量积</p>
<p><code>torch.mm(A, B)</code>：矩阵-矩阵积</p>
<p><code>torch.norm(u)</code>：求范数</p>
<h1 id="一-微积分"><a class="markdownIt-Anchor" href="#一-微积分"></a> 一、微积分</h1>
<h3 id="梯度"><a class="markdownIt-Anchor" href="#梯度"></a> 梯度</h3>
<p>梯度是对一个多元函数的各个变量求偏导数之后获得的n维向量。</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi mathvariant="normal">∇</mi><mtext mathvariant="bold">x</mtext></msub><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">[</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mrow><mi>f</mi><mo stretchy="false">(</mo><mtext mathvariant="bold">x</mtext><mo stretchy="false">)</mo></mrow></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>x</mi><mn>1</mn></msub></mrow></mfrac><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mrow><mi>f</mi><mo stretchy="false">(</mo><mtext mathvariant="bold">x</mtext><mo stretchy="false">)</mo></mrow></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>x</mi><mi>n</mi></msub></mrow></mfrac><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">\nabla_{\textbf{x}}f(x) = \left[\frac{\partial{f(\textbf{x})}}{\partial{x_1}}, \dots,\frac{\partial{f(\textbf{x})}}{\partial{x_n}}\right]
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">∇</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.161108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord textbf mtight">x</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord text"><span class="mord textbf">x</span></span><span class="mclose">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord text"><span class="mord textbf">x</span></span><span class="mclose">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span></span></span></span></span></p>
<p>求梯度时常使用以下规则</p>
<ul>
<li>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="normal">∇</mi><mtext mathvariant="bold">x</mtext></msub><mtext mathvariant="bold">Ax</mtext><mo>=</mo><msup><mtext mathvariant="bold">A</mtext><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">\nabla_{\textbf{x}}\textbf{A}\textbf{x} = \textbf{A}^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83611em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord">∇</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.161108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord textbf mtight">x</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord text"><span class="mord textbf">A</span></span><span class="mord text"><span class="mord textbf">x</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.917341em;vertical-align:0em;"></span><span class="mord"><span class="mord text"><span class="mord textbf">A</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.917341em;"><span style="top:-3.1390100000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span></p>
</li>
<li>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="normal">∇</mi><mtext mathvariant="bold">x</mtext></msub><msup><mtext mathvariant="bold">x</mtext><mi>T</mi></msup><mtext mathvariant="bold">A</mtext><mo>=</mo><mtext mathvariant="bold">A</mtext></mrow><annotation encoding="application/x-tex">\nabla_{\textbf{x}}\textbf{x}^T\textbf{A} = \textbf{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.991331em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord">∇</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.161108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord textbf mtight">x</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord text"><span class="mord textbf">x</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord text"><span class="mord textbf">A</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68611em;vertical-align:0em;"></span><span class="mord text"><span class="mord textbf">A</span></span></span></span></span></p>
</li>
<li>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="normal">∇</mi><mtext mathvariant="bold">x</mtext></msub><msup><mtext mathvariant="bold">x</mtext><mi>T</mi></msup><mtext mathvariant="bold">Ax</mtext><mo>=</mo><mo stretchy="false">(</mo><mtext mathvariant="bold">A</mtext><mo>+</mo><msup><mtext mathvariant="bold">A</mtext><mi>T</mi></msup><mo stretchy="false">)</mo><mtext mathvariant="bold">x</mtext></mrow><annotation encoding="application/x-tex">\nabla_{\textbf{x}}\textbf{x}^T\textbf{A}\textbf{x} = (\textbf{A}+\textbf{A}^T)\textbf{x}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.991331em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord">∇</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.161108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord textbf mtight">x</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord text"><span class="mord textbf">x</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord text"><span class="mord textbf">A</span></span><span class="mord text"><span class="mord textbf">x</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord text"><span class="mord textbf">A</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.167341em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord text"><span class="mord textbf">A</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.917341em;"><span style="top:-3.1390100000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord text"><span class="mord textbf">x</span></span></span></span></span></p>
</li>
<li>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="normal">∇</mi><mtext mathvariant="bold">x</mtext></msub><mi mathvariant="normal">∥</mi><mtext mathvariant="bold">x</mtext><mi mathvariant="normal">∥</mi><mo>=</mo><msub><mi mathvariant="normal">∇</mi><mtext mathvariant="bold">x</mtext></msub><msup><mtext mathvariant="bold">x</mtext><mi>T</mi></msup><mtext mathvariant="bold">x</mtext><mo>=</mo><mn>2</mn><mtext mathvariant="bold">x</mtext></mrow><annotation encoding="application/x-tex">\nabla_{\textbf{x}}\Vert \textbf{x}\Vert = \nabla_\textbf{x}\textbf{x}^T\textbf{x}=2\textbf{x}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">∇</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.161108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord textbf mtight">x</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∥</span><span class="mord text"><span class="mord textbf">x</span></span><span class="mord">∥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.991331em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord">∇</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.161108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord text mtight"><span class="mord textbf mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord text"><span class="mord textbf">x</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord text"><span class="mord textbf">x</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord text"><span class="mord textbf">x</span></span></span></span></span></p>
</li>
</ul>
<h3 id="自动微分"><a class="markdownIt-Anchor" href="#自动微分"></a> 自动微分</h3>
<p>在pytorch中，可以通过简单的函数调用完成复杂的梯度计算</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs pytho">X = torch.arange(12,require_grad=True)<br># 或在之后显式地写X.require_grad(True)<br>Y = f(X) # 对X进行一系列计算<br>Y.backward()<br>x.grad<br></code></pre></td></tr></table></figure>
<p>前提是y是一个标量，否则需要通过<code>y.sum().backward()</code>来调用</p>
<blockquote>
<p>梯度会自动累积，所以必要时需要调用<code>X.grad.zero_()</code>来清空梯度</p>
</blockquote>
<p>不需要梯度计算时，可以通过</p>
<figure class="highlight python"><table><tr><td class="code"><pre><code class="hljs python">x.grad.zero_()<br>y = x * x<br>u = y.detach()<br>z = u * x<br><br>z.<span class="hljs-built_in">sum</span>().backward()<br>x.grad == u<br></code></pre></td></tr></table></figure>
<p>detach函数来将u当做一个常数，不参与梯度计算.</p>
<p>还可以通过with语句让某部分代码不计算梯度</p>
<p><code>with torch.no_grad():</code></p>
<h1 id="二-线性回归"><a class="markdownIt-Anchor" href="#二-线性回归"></a> 二、线性回归</h1>
<p>线性回归算是高中就接触的问题了，只不过现在将各个参数和自变量（特征）、因变量（标签）用向量来描述</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext mathvariant="bold">y</mtext><mo>=</mo><mtext mathvariant="bold">Xw</mtext><mo>+</mo><mtext mathvariant="bold">b</mtext></mrow><annotation encoding="application/x-tex">\textbf{y}=\textbf{Xw}+\textbf{b}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.63888em;vertical-align:-0.19444em;"></span><span class="mord text"><span class="mord textbf">y</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76944em;vertical-align:-0.08333em;"></span><span class="mord text"><span class="mord textbf">Xw</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord text"><span class="mord textbf">b</span></span></span></span></span></span></p>
<p>我们假设一些标签和特征是存在线性关系的，我们希望拟合出的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mtext mathvariant="bold">y</mtext><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">\hat{\textbf{y}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.90232em;vertical-align:-0.19444em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.70788em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord textbf">y</span></span></span></span><span style="top:-3.01344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span></span></span>使得损失<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi></mrow><annotation encoding="application/x-tex">L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">L</span></span></span></span>最小</p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><mtext mathvariant="bold">w,b</mtext><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">L(\textbf{w,b})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord text"><span class="mord textbf">w,b</span></span><span class="mclose">)</span></span></span></span>是关于两个参数的函数，在训练集上，通过调整<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="bold">w,b</mtext></mrow><annotation encoding="application/x-tex">\textbf{w,b}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord text"><span class="mord textbf">w,b</span></span></span></span></span>可以使损失达到满意的值，具体方法是对损失函数求梯度，通过梯度下降的方法来求得极小值。</p>
<p>然而线性回归作为回归问题的最简单的模型，是存在解析解的。</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mtext mathvariant="bold">w</mtext><mo>∗</mo></msup><mo>=</mo><mo stretchy="false">(</mo><msup><mtext mathvariant="bold">X</mtext><mi>T</mi></msup><mtext mathvariant="bold">X</mtext><msup><mo stretchy="false">)</mo><mrow><mo>−</mo><mn>1</mn></mrow></msup><msup><mtext mathvariant="bold">X</mtext><mi>T</mi></msup><mtext mathvariant="bold">y</mtext></mrow><annotation encoding="application/x-tex">\textbf{w}^*=(\textbf{X}^T\textbf{X})^{-1}\textbf{X}^T\textbf{y}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.738696em;vertical-align:0em;"></span><span class="mord"><span class="mord text"><span class="mord textbf">w</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.738696em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.167341em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord text"><span class="mord textbf">X</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.917341em;"><span style="top:-3.1390100000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord text"><span class="mord textbf">X</span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord text"><span class="mord textbf">X</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.917341em;"><span style="top:-3.1390100000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord text"><span class="mord textbf">y</span></span></span></span></span></span></p>
<blockquote>
<p>实际上，代码中还是用求数值解的方法来一点一点逼近的</p>
</blockquote>
<p>线性回归的机器学习代码可以分为大如下步骤：</p>
<ul>
<li>设定一个待求参数的初始值，可以通过正态分布等方法获得，并定义超参数（学习率<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>η</mi></mrow><annotation encoding="application/x-tex">\eta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">η</span></span></span></span>，正则化常数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>λ</mi></mrow><annotation encoding="application/x-tex">\lambda</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">λ</span></span></span></span>等）。</li>
<li>获取训练集，使用当前模型计算估计值，与真实标签求损失（均方差、范数）。</li>
<li>求损失函数关于参数的梯度，利用梯度求出当前参数应当变化的方向，结合学习率对参数进行修正。</li>
<li>训练完毕后，利用测试集（验证集进行评估）</li>
</ul>
<h1 id="三-softmax回归"><a class="markdownIt-Anchor" href="#三-softmax回归"></a> 三、softmax回归</h1>
<p>softmax是线性回归问题的一种，softmax回归将输出的标签规定为<strong>one-hot</strong>标签，即标签向量中只有一个维度是1，其他维度是0；同时对预测值（有正有负）计算softmax值，从而保证归一、非负的性质。</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>y</mi><mi>j</mi></msub><mo>=</mo><mfrac><msup><mi>e</mi><msub><mi>o</mi><mi>j</mi></msub></msup><mrow><munder><mo>∑</mo><mi>i</mi></munder><msup><mi>e</mi><msub><mi>o</mi><mi>i</mi></msub></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">y_j=\frac{e^{o_j}}{\sum_i{e^{o_i}}}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.327102em;vertical-align:-0.9857100000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.341392em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16195399999999993em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.590392em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9857100000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>而损失函数也通过<strong>交叉熵损失</strong>来定义</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>l</mi><mo stretchy="false">(</mo><mtext mathvariant="bold">y</mtext><mo separator="true">,</mo><mover accent="true"><mtext mathvariant="bold">y</mtext><mo>^</mo></mover><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><mo>∑</mo><mrow><msub><mi>y</mi><mi>j</mi></msub><mi>log</mi><mo>⁡</mo><mover accent="true"><msub><mi>y</mi><mi>j</mi></msub><mo>^</mo></mover></mrow></mrow><annotation encoding="application/x-tex">l(\textbf{y},\hat{\textbf{y}})=-\sum{y_j\log\hat{y_j}}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mopen">(</span><span class="mord text"><span class="mord textbf">y</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.70788em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord textbf">y</span></span></span></span><span style="top:-3.01344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.6000100000000002em;vertical-align:-0.55001em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-symbol large-op" style="position:relative;top:-0.000004999999999977245em;">∑</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p>由于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="bold">y</mtext></mrow><annotation encoding="application/x-tex">\textbf{y}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.63888em;vertical-align:-0.19444em;"></span><span class="mord text"><span class="mord textbf">y</span></span></span></span></span>是独热标签，所以损失函数的计算也较为简单。</p>
<p>代入后</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>l</mi><mo stretchy="false">(</mo><mtext mathvariant="bold">y</mtext><mo separator="true">,</mo><mover accent="true"><mtext mathvariant="bold">y</mtext><mo>^</mo></mover><mo stretchy="false">)</mo><mo>=</mo><mi>log</mi><mo>⁡</mo><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>q</mi></munderover><msup><mi>e</mi><msub><mi>o</mi><mi>k</mi></msub></msup><mo>−</mo><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>q</mi></munderover><msub><mi>y</mi><mi>j</mi></msub><msub><mi>o</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">l(\textbf{y},\hat{\textbf{y}})=\log\sum_{k=1}^qe^{o_k}-\sum_{j=1}^qy_jo_j
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mopen">(</span><span class="mord text"><span class="mord textbf">y</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.70788em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord textbf">y</span></span></span></span><span style="top:-3.01344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0006180000000002em;vertical-align:-1.302113em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6985050000000002em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.347113em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.302113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:3.1122820000000004em;vertical-align:-1.4137769999999998em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6985050000000006em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.347113em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4137769999999998em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p>求梯度：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi mathvariant="normal">∂</mi><msub><mi>o</mi><mi>j</mi></msub></msub><mi>l</mi><mo stretchy="false">(</mo><mtext mathvariant="bold">y</mtext><mo separator="true">,</mo><mover accent="true"><mtext mathvariant="bold">y</mtext><mo>^</mo></mover><mo stretchy="false">)</mo><mo>=</mo><mfrac><msup><mi>e</mi><msub><mi>o</mi><mi>j</mi></msub></msup><mrow><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>q</mi></munderover><msup><mi>e</mi><msub><mi>o</mi><mi>k</mi></msub></msup></mrow></mfrac><mo>−</mo><msub><mi>y</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">\partial_{o_j}l(\textbf{y},\hat{\textbf{y}})=\frac{e^{o_j}}{\sum_{k=1}^qe^{o_k}}-y_j
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0973199999999999em;vertical-align:-0.34731999999999996em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05556em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.34731999999999996em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mopen">(</span><span class="mord text"><span class="mord textbf">y</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.70788em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord textbf">y</span></span></span></span><span style="top:-3.01344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.335394em;vertical-align:-0.994002em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.341392em;"><span style="top:-2.305708em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029000000000005em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.590392em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.994002em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<h1 id="四-利用pytorch框架"><a class="markdownIt-Anchor" href="#四-利用pytorch框架"></a> 四、利用pytorch框架</h1>
<h2 id="定义神经网络"><a class="markdownIt-Anchor" href="#定义神经网络"></a> 定义神经网络</h2>
<p><code>nn.Sequential</code></p>
<h2 id="初始化数据"><a class="markdownIt-Anchor" href="#初始化数据"></a> 初始化数据</h2>
<p>此章节提及两种初始化方式</p>
<figure class="highlight python"><table><tr><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#方式1</span><br>net[<span class="hljs-number">0</span>].weight.data.normal_(<span class="hljs-number">0</span>, <span class="hljs-number">0.01</span>)<br>net[<span class="hljs-number">0</span>].bias.data.fill_(<span class="hljs-number">0</span>)<br><br><span class="hljs-comment">#方式2</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">init_weight</span>(<span class="hljs-params">m</span>):</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">type</span>(m) == nn.Linear:<br>        nn.init.normal(m.weight,std=<span class="hljs-number">0.01</span>)<br><br>net.apply(init_weight)<br></code></pre></td></tr></table></figure>
<h2 id="定义损失函数"><a class="markdownIt-Anchor" href="#定义损失函数"></a> 定义损失函数</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><code class="hljs python">loss = nn.MSELoss() <span class="hljs-comment">#均方差损失</span><br><br>loss = nn.CrossEntropyLoss(reduction=<span class="hljs-string">&#x27;none&#x27;</span>) <span class="hljs-comment"># 交叉熵损失</span><br></code></pre></td></tr></table></figure>
<h2 id="优化器训练器"><a class="markdownIt-Anchor" href="#优化器训练器"></a> 优化器（训练器）</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><code class="hljs python">trainer = torch.optim.SGD(net.parameters(),<span class="hljs-number">0.1</span>) <span class="hljs-comment"># 随机梯度下降</span><br></code></pre></td></tr></table></figure>
<h2 id="开始训练"><a class="markdownIt-Anchor" href="#开始训练"></a> 开始训练</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><code class="hljs python">num_epochs = <span class="hljs-number">10</span><br>d2l.train_ch3(net, train_iter, test_iter, loss, num_epochs, trainer)<br></code></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>深度学习</tag>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>《算法设计与分析》作业答案(转载自解凯华）</title>
    <url>/2022/10/12/%E3%80%8A%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%88%86%E6%9E%90%E3%80%8B%E4%BD%9C%E4%B8%9A%E7%AD%94%E6%A1%88-%E8%BD%AC%E8%BD%BD%E8%87%AA%E8%A7%A3%E5%87%AF%E5%8D%8E%EF%BC%89/</url>
    <content><![CDATA[<p><strong>本文版权为原作者（解凯华）所有。</strong></p>
<h2 id="14"><a class="markdownIt-Anchor" href="#14"></a> 1.4</h2>
<h3 id="142"><a class="markdownIt-Anchor" href="#142"></a> 1.4.2</h3>
<ul>
<li>
<p>Description: Modify <code>ThreeSum</code> to work properly even when the int values are so large that adding two of them might cause overflow.</p>
</li>
<li>
<p>Solution:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ThreeSum</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">count</span><span class="hljs-params">(<span class="hljs-keyword">int</span>[] a)</span></span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">int</span> N = a.length;<br>        <span class="hljs-keyword">int</span> cnt = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; N; i++)<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = i + <span class="hljs-number">1</span>; j &lt; N; j++)<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> k = j + <span class="hljs-number">1</span>; k &lt; N; k++)<br>                    <span class="hljs-comment">// 使用long类型避免溢出</span><br>                    <span class="hljs-keyword">if</span> ((<span class="hljs-keyword">long</span>) a[i] + a[j] + a[k] == <span class="hljs-number">0</span>)<br>                        cnt++;<br>        <span class="hljs-keyword">return</span> cnt;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span></span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">int</span>[] a = In.readInts(args[<span class="hljs-number">0</span>]);<br>        StdOut.println(count(a));<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="145"><a class="markdownIt-Anchor" href="#145"></a> 1.4.5</h3>
<ul>
<li>Description: Give tilde approximations for the following quantities:
<ol>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">N+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>+</mo><mn>1</mn><mi mathvariant="normal">/</mi><mi>N</mi></mrow><annotation encoding="application/x-tex">1+1/N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">/</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><mn>1</mn><mi mathvariant="normal">/</mi><mi>N</mi><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><mn>2</mn><mi mathvariant="normal">/</mi><mi>N</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(1+1/N)(1+2/N)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">/</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mord">/</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">)</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><msup><mi>N</mi><mn>3</mn></msup><mo>−</mo><mn>15</mn><msup><mi>N</mi><mn>2</mn></msup><mo>+</mo><mi>N</mi></mrow><annotation encoding="application/x-tex">2N^3-15N^2+N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord">5</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>lg</mi><mo>⁡</mo><mo stretchy="false">(</mo><mn>2</mn><mi>N</mi><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mi>lg</mi><mo>⁡</mo><mi>N</mi></mrow><annotation encoding="application/x-tex">\lg(2N )/\lg N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">l<span style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">)</span><span class="mord">/</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">l<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>lg</mi><mo>⁡</mo><mo stretchy="false">(</mo><msup><mi>N</mi><mn>2</mn></msup><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mi>lg</mi><mo>⁡</mo><mi>N</mi></mrow><annotation encoding="application/x-tex">\lg(N^2+1)/\lg N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mop">l<span style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mord">/</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">l<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>N</mi><mn>100</mn></msup><mi mathvariant="normal">/</mi><mn>2</mn><mi>N</mi></mrow><annotation encoding="application/x-tex">N^{100}/2N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">0</span><span class="mord mtight">0</span></span></span></span></span></span></span></span></span><span class="mord">/</span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span></li>
</ol>
</li>
<li>Solution:
<ol>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi><mo>+</mo><mn>1</mn><mo>∼</mo><mi>N</mi></mrow><annotation encoding="application/x-tex">N+1 \sim N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>+</mo><mn>1</mn><mi mathvariant="normal">/</mi><mi>N</mi><mo>∼</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">1+1/N\sim 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">/</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><mn>1</mn><mi mathvariant="normal">/</mi><mi>N</mi><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><mn>2</mn><mi mathvariant="normal">/</mi><mi>N</mi><mo stretchy="false">)</mo><mo>∼</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">(1+1/N)(1+2/N)\sim 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">/</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mord">/</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><msup><mi>N</mi><mn>3</mn></msup><mo>−</mo><mn>15</mn><msup><mi>N</mi><mn>2</mn></msup><mo>+</mo><mi>N</mi><mo>∼</mo><mn>2</mn><msup><mi>N</mi><mn>3</mn></msup></mrow><annotation encoding="application/x-tex">2N^3-15N^2+N\sim 2N^3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord">5</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>lg</mi><mo>⁡</mo><mo stretchy="false">(</mo><mn>2</mn><mi>N</mi><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mi>lg</mi><mo>⁡</mo><mi>N</mi><mo>=</mo><mo stretchy="false">(</mo><mi>lg</mi><mo>⁡</mo><mn>2</mn><mo>+</mo><mi>lg</mi><mo>⁡</mo><mi>N</mi><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mi>lg</mi><mo>⁡</mo><mi>N</mi><mo>∼</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\lg(2N )/\lg N=(\lg 2+\lg N)/\lg N\sim 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">l<span style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">)</span><span class="mord">/</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">l<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mop">l<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">l<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">)</span><span class="mord">/</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">l<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>lg</mi><mo>⁡</mo><mo stretchy="false">(</mo><msup><mi>N</mi><mn>2</mn></msup><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mi>lg</mi><mo>⁡</mo><mi>N</mi><mo>∼</mo><mi>lg</mi><mo>⁡</mo><mo stretchy="false">(</mo><msup><mi>N</mi><mn>2</mn></msup><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mi>lg</mi><mo>⁡</mo><mi>N</mi><mo>=</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">\lg(N^2+1)/\lg N\sim \lg(N^2)/\lg N =2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mop">l<span style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mord">/</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">l<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mop">l<span style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord">/</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">l<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>N</mi><mn>100</mn></msup><mi mathvariant="normal">/</mi><msup><mn>2</mn><mi>N</mi></msup><mo>∼</mo><mn>1</mn><mi mathvariant="normal">/</mi><msup><mn>2</mn><mi>N</mi></msup></mrow><annotation encoding="application/x-tex">N^{100}/2^N\sim 1/2^N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0913309999999998em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">0</span><span class="mord mtight">0</span></span></span></span></span></span></span></span></span><span class="mord">/</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0913309999999998em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">/</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span></span></span></span></span></span></span></li>
</ol>
</li>
</ul>
<h3 id="146"><a class="markdownIt-Anchor" href="#146"></a> 1.4.6</h3>
<ul>
<li>
<p>Description: Give the order of growth (as a function of N ) of the running times of each of the following code fragments:</p>
<ol>
<li>
<pre class="highlight"><code class="java"><span class="hljs-type">int</span> <span class="hljs-variable">sum</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;
<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">n</span> <span class="hljs-operator">=</span> N; n &gt; <span class="hljs-number">0</span>; n /= <span class="hljs-number">2</span>)
    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; n; i++)
        sum++;
&lt;!--code￼<span class="hljs-number">1</span>--&gt;

</code></pre>
</li>
<li>
<pre class="highlight"><code class="java"><span class="hljs-type">int</span> <span class="hljs-variable">sum</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;
<span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">1</span>; i &lt; N; i *= <span class="hljs-number">2</span>)
    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">j</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; j &lt; N; j++)
        sum++;
&lt;!--code￼<span class="hljs-number">2</span>--&gt;

</code></pre>
</li>
</ol>
</li>
</ul>
<h3 id="1415"><a class="markdownIt-Anchor" href="#1415"></a> 1.4.15</h3>
<ul>
<li>
<p>Description: <em>Faster 3-sum</em>. As a warmup, develop an implementation <code>TwoSumFaster</code> that uses a linear algorithm to count the pairs that sum to zero after the array is sorted (instead of the binary-search-based linearithmic algorithm). Then apply a similar idea to develop a quadratic algorithm for the 3-sum problem.</p>
</li>
<li>
<p>Solution:</p>
<ul>
<li>
<p>TwoSumFaster:<br>
先来考虑一个没有重复元素的有序数组，假定它是升序。考虑从头尾分别设立指针，双向遍历该数组。如果两数之和过大，欲使结果变小，只有左指针左移和右指针左移两种选择，但是左指针左侧的已经遍历过，所以只能左移右指针。两数之和过小同理。对于需要考虑重复元素的情形，处理起来会略微繁琐一点，但整体思路上一致。</p>
<p>以指针移动次数作为基准，每次移动指针后，只进行了常数次操作，指针最多移动<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span>次,故最坏情况下的时间复杂度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Θ</mi><mo stretchy="false">(</mo><mi>N</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\Theta(N)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">Θ</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">)</span></span></span></span></p>
<p>不考虑重复元素的版本</p>
<figure class="highlight java"><table><tr><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">long</span> <span class="hljs-title">twoSumFasterWithoutRepeat</span><span class="hljs-params">(<span class="hljs-keyword">int</span>[] arr, <span class="hljs-keyword">int</span> target)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">return</span> twoSumFasterWithoutRepeat(arr, target, <span class="hljs-number">0</span>, arr.length);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">long</span> <span class="hljs-title">twoSumFasterWithoutRepeat</span><span class="hljs-params">(<span class="hljs-keyword">int</span>[] arr, <span class="hljs-keyword">int</span> target, <span class="hljs-keyword">int</span> begin, <span class="hljs-keyword">int</span> end)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">int</span> left = begin;<br>    <span class="hljs-keyword">int</span> right = end - <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">int</span> count = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">long</span> sum;<br>    <span class="hljs-keyword">while</span> (left &lt; right)<br>    &#123;<br>        sum = arr[left] + arr[right];<br>        <span class="hljs-keyword">if</span> (sum == target)<br>        &#123;<br>            count++;<br>            left++;<br>            right--;<br>        &#125;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (sum &gt; target)<br>            right--;<br>        <span class="hljs-keyword">else</span><br>            left++;<br>    &#125;<br>    <span class="hljs-keyword">return</span> count;<br>&#125;<br></code></pre></td></tr></table></figure>
<p>考虑重复元素的版本</p>
<figure class="highlight java"><table><tr><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">long</span> <span class="hljs-title">twoSumFaster</span><span class="hljs-params">(<span class="hljs-keyword">int</span>[] arr, <span class="hljs-keyword">int</span> target)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">return</span> twoSumFaster(arr, target, <span class="hljs-number">0</span>, arr.length);<br>&#125;<br><span class="hljs-comment">// 在左闭右开区间中查找，即[begin, end)</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">long</span> <span class="hljs-title">twoSumFaster</span><span class="hljs-params">(<span class="hljs-keyword">int</span>[] arr, <span class="hljs-keyword">int</span> target, <span class="hljs-keyword">int</span> begin, <span class="hljs-keyword">int</span> end)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">int</span> left = begin;<br>    <span class="hljs-keyword">int</span> right = end - <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">long</span> count = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">long</span> lcount = <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">long</span> rcount = <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">while</span> (left &lt; right)<br>    &#123;<br>        <span class="hljs-keyword">if</span> (arr[left] == arr[left + <span class="hljs-number">1</span>])<br>        &#123;<br>            lcount++;<br>            left++;<br>            <span class="hljs-comment">// 进入该分支说明left和right指向了相同的整数段，需要特判</span><br>            <span class="hljs-keyword">if</span> (left == right &amp;&amp; arr[left] * <span class="hljs-number">2</span> == target)<br>            &#123;<br>                count += lcount * (lcount - <span class="hljs-number">1</span>) / <span class="hljs-number">2</span>;<br>                lcount = <span class="hljs-number">1</span>;<br>                <span class="hljs-keyword">continue</span>;<br>            &#125;<br>            <span class="hljs-keyword">continue</span>;<br>        &#125;<br>        <span class="hljs-keyword">if</span> (arr[right] == arr[right - <span class="hljs-number">1</span>])<br>        &#123;<br>            rcount++;<br>            right--;<br>            <span class="hljs-keyword">continue</span>;<br>        &#125;<br><br>        <span class="hljs-comment">// 两数相等的情况</span><br>        <span class="hljs-keyword">if</span> (arr[left] * <span class="hljs-number">2</span> == target &amp;&amp; lcount &gt;= <span class="hljs-number">2</span>)<br>        &#123;<br>            count += lcount * (lcount - <span class="hljs-number">1</span>) / <span class="hljs-number">2</span>;<br>            left++;<br>            lcount = <span class="hljs-number">1</span>;<br>            <span class="hljs-keyword">continue</span>;<br>        &#125;<br>        <span class="hljs-keyword">if</span> (arr[right] * <span class="hljs-number">2</span> == target &amp;&amp; rcount &gt;= <span class="hljs-number">2</span>)<br>        &#123;<br>            count += rcount * (rcount - <span class="hljs-number">1</span>) / <span class="hljs-number">2</span>;<br>            right++;<br>            rcount = <span class="hljs-number">1</span>;<br>            <span class="hljs-keyword">continue</span>;<br>        &#125;<br><br>        <span class="hljs-comment">// 两数不相等的情况</span><br>        <span class="hljs-keyword">int</span> sum = arr[left] + arr[right];<br>        <span class="hljs-keyword">if</span> (sum == target)<br>        &#123;<br>            count += lcount * rcount;<br>            lcount = <span class="hljs-number">1</span>;<br>            rcount = <span class="hljs-number">1</span>;<br>            left++;<br>            right--;<br>        &#125;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (sum &gt; target)<br>        &#123;<br>            right--;<br>            rcount = <span class="hljs-number">1</span>;<br>        &#125;<br>        <span class="hljs-keyword">else</span><br>        &#123;<br>            left++;<br>            lcount = <span class="hljs-number">1</span>;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">return</span> count;<br>&#125;<br></code></pre></td></tr></table></figure>
</li>
<li>
<p>ThreeSumFaster:<br>
对于三数之和，只需要先遍历第一个数，剩下的两个数在第一个数的右侧部分选取，由于两数之和是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Θ</mi><mo stretchy="false">(</mo><mi>N</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\Theta(N)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">Θ</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">)</span></span></span></span>级别的算法，并且至多执行<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span>次，排序算法的复杂度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mi>log</mi><mo>⁡</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n\log n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>，故此处的三数之和是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>N</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(N^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>级别的算法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">long</span> <span class="hljs-title">threeSumFaster</span><span class="hljs-params">(<span class="hljs-keyword">int</span>[] arr, <span class="hljs-keyword">int</span> target, <span class="hljs-keyword">int</span> begin, <span class="hljs-keyword">int</span> end)</span></span><br><span class="hljs-function"></span>&#123;<br>    Arrays.sort(arr);<br>    <span class="hljs-keyword">long</span> count = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = begin; i &lt; end - <span class="hljs-number">2</span>; i++)<br>        count += twoSumFaster(arr, target - arr[i], i + <span class="hljs-number">1</span>, end);<br>    <span class="hljs-keyword">return</span> count;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">long</span> <span class="hljs-title">threeSumFaster</span><span class="hljs-params">(<span class="hljs-keyword">int</span>[] arr, <span class="hljs-keyword">int</span> target)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">return</span> threeSumFaster(arr, target, <span class="hljs-number">0</span>, arr.length);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">long</span> <span class="hljs-title">threeSumFaster</span><span class="hljs-params">(<span class="hljs-keyword">int</span>[] arr)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">return</span> threeSumFaster(arr, <span class="hljs-number">0</span>);<br>&#125;<br></code></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<h2 id="15"><a class="markdownIt-Anchor" href="#15"></a> 1.5</h2>
<h3 id="151"><a class="markdownIt-Anchor" href="#151"></a> 1.5.1</h3>
<ul>
<li>
<p>Description: Show the contents of the <code>id[]</code> array and the number of times the array is accessed for each input pair when you use quick-find for the sequence 9-0 3-4 5-8 7-2 2-1 5-7 0-3 4-2.</p>
</li>
<li>
<p>Solution:</p>
<ul>
<li>
<p>Initinitalize<br>
accessTimes=10</p>
<table>
<thead>
<tr>
<th>node</th>
<th>0</th>
<th>1</th>
<th>2</th>
<th>3</th>
<th>4</th>
<th>5</th>
<th>6</th>
<th>7</th>
<th>8</th>
<th>9</th>
</tr>
</thead>
<tbody>
<tr>
<td>id</td>
<td>0</td>
<td>1</td>
<td>2</td>
<td>3</td>
<td>4</td>
<td>5</td>
<td>6</td>
<td>7</td>
<td>8</td>
<td>9</td>
</tr>
</tbody>
</table>
</li>
<li>
<p>9-0<br>
accessTimes=23</p>
<table>
<thead>
<tr>
<th>node</th>
<th>0</th>
<th>1</th>
<th>2</th>
<th>3</th>
<th>4</th>
<th>5</th>
<th>6</th>
<th>7</th>
<th>8</th>
<th>9</th>
</tr>
</thead>
<tbody>
<tr>
<td>id</td>
<td>0</td>
<td>1</td>
<td>2</td>
<td>3</td>
<td>4</td>
<td>5</td>
<td>6</td>
<td>7</td>
<td>8</td>
<td>0</td>
</tr>
</tbody>
</table>
</li>
<li>
<p>3-4<br>
accessTimes=36</p>
<table>
<thead>
<tr>
<th>node</th>
<th>0</th>
<th>1</th>
<th>2</th>
<th>3</th>
<th>4</th>
<th>5</th>
<th>6</th>
<th>7</th>
<th>8</th>
<th>9</th>
</tr>
</thead>
<tbody>
<tr>
<td>id</td>
<td>0</td>
<td>1</td>
<td>2</td>
<td>4</td>
<td>4</td>
<td>5</td>
<td>6</td>
<td>7</td>
<td>8</td>
<td>0</td>
</tr>
</tbody>
</table>
</li>
<li>
<p>5-8<br>
accessTimes=49</p>
<table>
<thead>
<tr>
<th>node</th>
<th>0</th>
<th>1</th>
<th>2</th>
<th>3</th>
<th>4</th>
<th>5</th>
<th>6</th>
<th>7</th>
<th>8</th>
<th>9</th>
</tr>
</thead>
<tbody>
<tr>
<td>id</td>
<td>0</td>
<td>1</td>
<td>2</td>
<td>4</td>
<td>4</td>
<td>8</td>
<td>6</td>
<td>7</td>
<td>8</td>
<td>0</td>
</tr>
</tbody>
</table>
</li>
<li>
<p>7-2<br>
accessTimes=62</p>
<table>
<thead>
<tr>
<th>node</th>
<th>0</th>
<th>1</th>
<th>2</th>
<th>3</th>
<th>4</th>
<th>5</th>
<th>6</th>
<th>7</th>
<th>8</th>
<th>9</th>
</tr>
</thead>
<tbody>
<tr>
<td>id</td>
<td>0</td>
<td>1</td>
<td>2</td>
<td>4</td>
<td>4</td>
<td>8</td>
<td>6</td>
<td>2</td>
<td>8</td>
<td>0</td>
</tr>
</tbody>
</table>
</li>
<li>
<p>2-1<br>
accessTimes=76</p>
<table>
<thead>
<tr>
<th>node</th>
<th>0</th>
<th>1</th>
<th>2</th>
<th>3</th>
<th>4</th>
<th>5</th>
<th>6</th>
<th>7</th>
<th>8</th>
<th>9</th>
</tr>
</thead>
<tbody>
<tr>
<td>id</td>
<td>0</td>
<td>1</td>
<td>1</td>
<td>4</td>
<td>4</td>
<td>8</td>
<td>6</td>
<td>1</td>
<td>8</td>
<td>0</td>
</tr>
</tbody>
</table>
</li>
<li>
<p>5-7<br>
accessTimes=90</p>
<table>
<thead>
<tr>
<th>node</th>
<th>0</th>
<th>1</th>
<th>2</th>
<th>3</th>
<th>4</th>
<th>5</th>
<th>6</th>
<th>7</th>
<th>8</th>
<th>9</th>
</tr>
</thead>
<tbody>
<tr>
<td>id</td>
<td>0</td>
<td>1</td>
<td>1</td>
<td>4</td>
<td>4</td>
<td>1</td>
<td>6</td>
<td>1</td>
<td>1</td>
<td>0</td>
</tr>
</tbody>
</table>
</li>
<li>
<p>0-3<br>
accessTimes=104</p>
<table>
<thead>
<tr>
<th>node</th>
<th>0</th>
<th>1</th>
<th>2</th>
<th>3</th>
<th>4</th>
<th>5</th>
<th>6</th>
<th>7</th>
<th>8</th>
<th>9</th>
</tr>
</thead>
<tbody>
<tr>
<td>id</td>
<td>4</td>
<td>1</td>
<td>1</td>
<td>4</td>
<td>4</td>
<td>1</td>
<td>6</td>
<td>1</td>
<td>1</td>
<td>4</td>
</tr>
</tbody>
</table>
</li>
<li>
<p>4-2<br>
accessTimes=120</p>
<table>
<thead>
<tr>
<th>node</th>
<th>0</th>
<th>1</th>
<th>2</th>
<th>3</th>
<th>4</th>
<th>5</th>
<th>6</th>
<th>7</th>
<th>8</th>
<th>9</th>
</tr>
</thead>
<tbody>
<tr>
<td>id</td>
<td>1</td>
<td>1</td>
<td>1</td>
<td>1</td>
<td>1</td>
<td>1</td>
<td>6</td>
<td>1</td>
<td>1</td>
<td>1</td>
</tr>
</tbody>
</table>
</li>
</ul>
</li>
</ul>
<h3 id="152"><a class="markdownIt-Anchor" href="#152"></a> 1.5.2</h3>
<ul>
<li>
<p>Description: Do Exercise 1.5.1, but use quick-union (page 224). In addition, draw the forest of trees represented by the <code>id[]</code> array after each input pair is processed.</p>
</li>
<li>
<p>Solution:</p>
<ul>
<li>
<p>Initinitalize<br>
accessTimes=10</p>
<table>
<thead>
<tr>
<th>node</th>
<th>0</th>
<th>1</th>
<th>2</th>
<th>3</th>
<th>4</th>
<th>5</th>
<th>6</th>
<th>7</th>
<th>8</th>
<th>9</th>
</tr>
</thead>
<tbody>
<tr>
<td>id</td>
<td>0</td>
<td>1</td>
<td>2</td>
<td>3</td>
<td>4</td>
<td>5</td>
<td>6</td>
<td>7</td>
<td>8</td>
<td>9</td>
</tr>
</tbody>
</table>
<pre><code class=" mermaid">graph TD;
0((0))
1((1))
2((2))
3((3))
4((4))
5((5))
6((6))
7((7))
8((8))
9((9))

0---0
1---1
2---2
3---3
4---4
5---5
6---6
7---7
8---8
9---9
</code></pre>
</li>
<li>
<p>9-0<br>
accessTimes=13</p>
<table>
<thead>
<tr>
<th>node</th>
<th>0</th>
<th>1</th>
<th>2</th>
<th>3</th>
<th>4</th>
<th>5</th>
<th>6</th>
<th>7</th>
<th>8</th>
<th>9</th>
</tr>
</thead>
<tbody>
<tr>
<td>id</td>
<td>0</td>
<td>1</td>
<td>2</td>
<td>3</td>
<td>4</td>
<td>5</td>
<td>6</td>
<td>7</td>
<td>8</td>
<td>0</td>
</tr>
</tbody>
</table>
<pre><code class=" mermaid">graph TD;
0((0))
1((1))
2((2))
3((3))
4((4))
5((5))
6((6))
7((7))
8((8))
9((9))

0---0
1---1
2---2
3---3
4---4
5---5
6---6
7---7
8---8
0---9
</code></pre>
</li>
<li>
<p>3-4<br>
accessTimes=16</p>
<table>
<thead>
<tr>
<th>node</th>
<th>0</th>
<th>1</th>
<th>2</th>
<th>3</th>
<th>4</th>
<th>5</th>
<th>6</th>
<th>7</th>
<th>8</th>
<th>9</th>
</tr>
</thead>
<tbody>
<tr>
<td>id</td>
<td>0</td>
<td>1</td>
<td>2</td>
<td>4</td>
<td>4</td>
<td>5</td>
<td>6</td>
<td>7</td>
<td>8</td>
<td>0</td>
</tr>
</tbody>
</table>
<pre><code class=" mermaid">graph TD;
0((0))
1((1))
2((2))
3((3))
4((4))
5((5))
6((6))
7((7))
8((8))
9((9))

0---0
1---1
2---2
4---3
4---4
5---5
6---6
7---7
8---8
0---9
</code></pre>
</li>
<li>
<p>5-8<br>
accessTimes=19</p>
<table>
<thead>
<tr>
<th>node</th>
<th>0</th>
<th>1</th>
<th>2</th>
<th>3</th>
<th>4</th>
<th>5</th>
<th>6</th>
<th>7</th>
<th>8</th>
<th>9</th>
</tr>
</thead>
<tbody>
<tr>
<td>id</td>
<td>0</td>
<td>1</td>
<td>2</td>
<td>4</td>
<td>4</td>
<td>8</td>
<td>6</td>
<td>7</td>
<td>8</td>
<td>0</td>
</tr>
</tbody>
</table>
<pre><code class=" mermaid">graph TD;
0((0))
1((1))
2((2))
3((3))
4((4))
5((5))
6((6))
7((7))
8((8))
9((9))

0---0
1---1
2---2
4---3
4---4
8---5
6---6
7---7
8---8
0---9
</code></pre>
</li>
<li>
<p>7-2<br>
accessTimes=22</p>
<table>
<thead>
<tr>
<th>node</th>
<th>0</th>
<th>1</th>
<th>2</th>
<th>3</th>
<th>4</th>
<th>5</th>
<th>6</th>
<th>7</th>
<th>8</th>
<th>9</th>
</tr>
</thead>
<tbody>
<tr>
<td>id</td>
<td>0</td>
<td>1</td>
<td>2</td>
<td>4</td>
<td>4</td>
<td>8</td>
<td>6</td>
<td>2</td>
<td>8</td>
<td>0</td>
</tr>
</tbody>
</table>
<pre><code class=" mermaid">graph TD;
0((0))
1((1))
2((2))
3((3))
4((4))
5((5))
6((6))
7((7))
8((8))
9((9))

0---0
1---1
2---2
4---3
4---4
8---5
6---6
2---7
8---8
0---9
</code></pre>
</li>
<li>
<p>2-1<br>
accessTimes=25</p>
<table>
<thead>
<tr>
<th>node</th>
<th>0</th>
<th>1</th>
<th>2</th>
<th>3</th>
<th>4</th>
<th>5</th>
<th>6</th>
<th>7</th>
<th>8</th>
<th>9</th>
</tr>
</thead>
<tbody>
<tr>
<td>id</td>
<td>0</td>
<td>1</td>
<td>1</td>
<td>4</td>
<td>4</td>
<td>8</td>
<td>6</td>
<td>2</td>
<td>8</td>
<td>0</td>
</tr>
</tbody>
</table>
<pre><code class=" mermaid">graph TD;
0((0))
1((1))
2((2))
3((3))
4((4))
5((5))
6((6))
7((7))
8((8))
9((9))

0---0
1---1
1---2
4---3
4---4
8---5
6---6
2---7
8---8
0---9
</code></pre>
</li>
<li>
<p>5-7<br>
accessTimes=34</p>
<table>
<thead>
<tr>
<th>node</th>
<th>0</th>
<th>1</th>
<th>2</th>
<th>3</th>
<th>4</th>
<th>5</th>
<th>6</th>
<th>7</th>
<th>8</th>
<th>9</th>
</tr>
</thead>
<tbody>
<tr>
<td>id</td>
<td>0</td>
<td>1</td>
<td>1</td>
<td>4</td>
<td>4</td>
<td>8</td>
<td>6</td>
<td>2</td>
<td>1</td>
<td>0</td>
</tr>
</tbody>
</table>
<pre><code class=" mermaid">graph TD;
0((0))
1((1))
2((2))
3((3))
4((4))
5((5))
6((6))
7((7))
8((8))
9((9))

0---0
1---1
1---2
4---3
4---4
8---5
6---6
2---7
1---8
0---9
</code></pre>
</li>
<li>
<p>0-3<br>
accessTimes=39</p>
<table>
<thead>
<tr>
<th>node</th>
<th>0</th>
<th>1</th>
<th>2</th>
<th>3</th>
<th>4</th>
<th>5</th>
<th>6</th>
<th>7</th>
<th>8</th>
<th>9</th>
</tr>
</thead>
<tbody>
<tr>
<td>id</td>
<td>4</td>
<td>1</td>
<td>1</td>
<td>4</td>
<td>4</td>
<td>8</td>
<td>6</td>
<td>2</td>
<td>1</td>
<td>0</td>
</tr>
</tbody>
</table>
<pre><code class=" mermaid">graph TD;
0((0))
1((1))
2((2))
3((3))
4((4))
5((5))
6((6))
7((7))
8((8))
9((9))

4---0
1---1
1---2
4---3
4---4
8---5
6---6
2---7
1---8
0---9
</code></pre>
</li>
<li>
<p>4-2<br>
accessTimes=44</p>
<table>
<thead>
<tr>
<th>node</th>
<th>0</th>
<th>1</th>
<th>2</th>
<th>3</th>
<th>4</th>
<th>5</th>
<th>6</th>
<th>7</th>
<th>8</th>
<th>9</th>
</tr>
</thead>
<tbody>
<tr>
<td>id</td>
<td>4</td>
<td>1</td>
<td>1</td>
<td>4</td>
<td>1</td>
<td>8</td>
<td>6</td>
<td>2</td>
<td>1</td>
<td>0</td>
</tr>
</tbody>
</table>
<pre><code class=" mermaid">graph TD;
0((0))
1((1))
2((2))
3((3))
4((4))
5((5))
6((6))
7((7))
8((8))
9((9))

4---0
1---1
1---2
4---3
1---4
8---5
6---6
2---7
1---8
0---9
</code></pre>
</li>
</ul>
</li>
</ul>
<h3 id="153"><a class="markdownIt-Anchor" href="#153"></a> 1.5.3</h3>
<ul>
<li>
<p>Description: Do Exercise 1.5.1, but use weighted quick-union (page 228).</p>
</li>
<li>
<p>Solution:</p>
</li>
<li>
<p>Initinitalize<br>
accessTimes=20</p>
<table>
<thead>
<tr>
<th>node</th>
<th>0</th>
<th>1</th>
<th>2</th>
<th>3</th>
<th>4</th>
<th>5</th>
<th>6</th>
<th>7</th>
<th>8</th>
<th>9</th>
</tr>
</thead>
<tbody>
<tr>
<td>id</td>
<td>0</td>
<td>1</td>
<td>2</td>
<td>3</td>
<td>4</td>
<td>5</td>
<td>6</td>
<td>7</td>
<td>8</td>
<td>9</td>
</tr>
</tbody>
</table>
<pre><code class=" mermaid">graph TD;
0((0))
1((1))
2((2))
3((3))
4((4))
5((5))
6((6))
7((7))
8((8))
9((9))

0---0
1---1
2---2
3---3
4---4
5---5
6---6
7---7
8---8
9---9
</code></pre>
</li>
<li>
<p>9-0<br>
accessTimes=27</p>
<table>
<thead>
<tr>
<th>node</th>
<th>0</th>
<th>1</th>
<th>2</th>
<th>3</th>
<th>4</th>
<th>5</th>
<th>6</th>
<th>7</th>
<th>8</th>
<th>9</th>
</tr>
</thead>
<tbody>
<tr>
<td>id</td>
<td>9</td>
<td>1</td>
<td>2</td>
<td>3</td>
<td>4</td>
<td>5</td>
<td>6</td>
<td>7</td>
<td>8</td>
<td>9</td>
</tr>
</tbody>
</table>
<pre><code class=" mermaid">graph TD;
0((0))
1((1))
2((2))
3((3))
4((4))
5((5))
6((6))
7((7))
8((8))
9((9))

9---0
1---1
2---2
3---3
4---4
5---5
6---6
7---7
8---8
9---9
</code></pre>
</li>
<li>
<p>3-4<br>
accessTimes=34</p>
<table>
<thead>
<tr>
<th>node</th>
<th>0</th>
<th>1</th>
<th>2</th>
<th>3</th>
<th>4</th>
<th>5</th>
<th>6</th>
<th>7</th>
<th>8</th>
<th>9</th>
</tr>
</thead>
<tbody>
<tr>
<td>id</td>
<td>9</td>
<td>1</td>
<td>2</td>
<td>3</td>
<td>3</td>
<td>5</td>
<td>6</td>
<td>7</td>
<td>8</td>
<td>9</td>
</tr>
</tbody>
</table>
<pre><code class=" mermaid">graph TD;
0((0))
1((1))
2((2))
3((3))
4((4))
5((5))
6((6))
7((7))
8((8))
9((9))

9---0
1---1
2---2
3---3
3---4
5---5
6---6
7---7
8---8
9---9
</code></pre>
</li>
<li>
<p>5-8<br>
accessTimes=41</p>
<table>
<thead>
<tr>
<th>node</th>
<th>0</th>
<th>1</th>
<th>2</th>
<th>3</th>
<th>4</th>
<th>5</th>
<th>6</th>
<th>7</th>
<th>8</th>
<th>9</th>
</tr>
</thead>
<tbody>
<tr>
<td>id</td>
<td>9</td>
<td>1</td>
<td>2</td>
<td>3</td>
<td>3</td>
<td>5</td>
<td>6</td>
<td>7</td>
<td>5</td>
<td>9</td>
</tr>
</tbody>
</table>
<pre><code class=" mermaid">graph TD;
0((0))
1((1))
2((2))
3((3))
4((4))
5((5))
6((6))
7((7))
8((8))
9((9))

9---0
1---1
2---2
3---3
3---4
5---5
6---6
7---7
5---8
9---9
</code></pre>
</li>
<li>
<p>7-2<br>
accessTimes=48</p>
<table>
<thead>
<tr>
<th>node</th>
<th>0</th>
<th>1</th>
<th>2</th>
<th>3</th>
<th>4</th>
<th>5</th>
<th>6</th>
<th>7</th>
<th>8</th>
<th>9</th>
</tr>
</thead>
<tbody>
<tr>
<td>id</td>
<td>9</td>
<td>1</td>
<td>7</td>
<td>3</td>
<td>3</td>
<td>5</td>
<td>6</td>
<td>7</td>
<td>5</td>
<td>9</td>
</tr>
</tbody>
</table>
<pre><code class=" mermaid">graph TD;
0((0))
1((1))
2((2))
3((3))
4((4))
5((5))
6((6))
7((7))
8((8))
9((9))

9---0
1---1
7---2
3---3
3---4
5---5
6---6
7---7
5---8
9---9
</code></pre>
</li>
<li>
<p>2-1<br>
accessTimes=57</p>
<table>
<thead>
<tr>
<th>node</th>
<th>0</th>
<th>1</th>
<th>2</th>
<th>3</th>
<th>4</th>
<th>5</th>
<th>6</th>
<th>7</th>
<th>8</th>
<th>9</th>
</tr>
</thead>
<tbody>
<tr>
<td>id</td>
<td>9</td>
<td>7</td>
<td>7</td>
<td>3</td>
<td>3</td>
<td>5</td>
<td>6</td>
<td>7</td>
<td>5</td>
<td>9</td>
</tr>
</tbody>
</table>
<pre><code class=" mermaid">graph TD;
0((0))
1((1))
2((2))
3((3))
4((4))
5((5))
6((6))
7((7))
8((8))
9((9))

9---0
7---1
7---2
3---3
3---4
5---5
6---6
7---7
5---8
9---9
</code></pre>
</li>
<li>
<p>5-7<br>
accessTimes=64</p>
<table>
<thead>
<tr>
<th>node</th>
<th>0</th>
<th>1</th>
<th>2</th>
<th>3</th>
<th>4</th>
<th>5</th>
<th>6</th>
<th>7</th>
<th>8</th>
<th>9</th>
</tr>
</thead>
<tbody>
<tr>
<td>id</td>
<td>9</td>
<td>7</td>
<td>7</td>
<td>3</td>
<td>3</td>
<td>7</td>
<td>6</td>
<td>7</td>
<td>5</td>
<td>9</td>
</tr>
</tbody>
</table>
<pre><code class=" mermaid">graph TD;
0((0))
1((1))
2((2))
3((3))
4((4))
5((5))
6((6))
7((7))
8((8))
9((9))

9---0
7---1
7---2
3---3
3---4
7---5
6---6
7---7
5---8
9---9
</code></pre>
</li>
<li>
<p>0-3<br>
accessTimes=73</p>
<table>
<thead>
<tr>
<th>node</th>
<th>0</th>
<th>1</th>
<th>2</th>
<th>3</th>
<th>4</th>
<th>5</th>
<th>6</th>
<th>7</th>
<th>8</th>
<th>9</th>
</tr>
</thead>
<tbody>
<tr>
<td>id</td>
<td>9</td>
<td>7</td>
<td>7</td>
<td>9</td>
<td>3</td>
<td>7</td>
<td>6</td>
<td>7</td>
<td>5</td>
<td>9</td>
</tr>
</tbody>
</table>
<pre><code class=" mermaid">graph TD;
0((0))
1((1))
2((2))
3((3))
4((4))
5((5))
6((6))
7((7))
8((8))
9((9))

9---0
7---1
7---2
9---3
3---4
7---5
6---6
7---7
5---8
9---9
</code></pre>
</li>
<li>
<p>4-2<br>
accessTimes=86</p>
<table>
<thead>
<tr>
<th>node</th>
<th>0</th>
<th>1</th>
<th>2</th>
<th>3</th>
<th>4</th>
<th>5</th>
<th>6</th>
<th>7</th>
<th>8</th>
<th>9</th>
</tr>
</thead>
<tbody>
<tr>
<td>id</td>
<td>9</td>
<td>7</td>
<td>7</td>
<td>9</td>
<td>3</td>
<td>7</td>
<td>6</td>
<td>7</td>
<td>5</td>
<td>7</td>
</tr>
</tbody>
</table>
<pre><code class=" mermaid">graph TD;
0((0))
1((1))
2((2))
3((3))
4((4))
5((5))
6((6))
7((7))
8((8))
9((9))

9---0
7---1
7---2
9---3
3---4
7---5
6---6
7---7
5---8
7---9
</code></pre>
</li>
</ul>
]]></content>
      <categories>
        <category>课内</category>
      </categories>
      <tags>
        <tag>课内</tag>
        <tag>答案</tag>
        <tag>转载</tag>
      </tags>
  </entry>
  <entry>
    <title>中国剩余定理</title>
    <url>/2022/03/19/%E4%B8%AD%E5%9B%BD%E5%89%A9%E4%BD%99%E5%AE%9A%E7%90%86/</url>
    <content><![CDATA[<h1 id="零-概述"><a class="markdownIt-Anchor" href="#零-概述"></a> 零、概述</h1>
<p>本文介绍中国剩余定理以及其简单应用，阅读前请先了解《数论基础》</p>
<h1 id="一-从问题入手"><a class="markdownIt-Anchor" href="#一-从问题入手"></a> 一、从问题入手</h1>
<blockquote>
<p>有物不知其数，三三数之剩二，五五数之剩三，七七数之剩二。问物几何？即，一个整数除以三余二，除以五余三，除以七余二，求这个整数。</p>
</blockquote>
<p>《孙子算经》中首次提到了同余方程组问题，以及以上具体问题的解法，因此在中文数学文献中也会将中国剩余定理称为孙子定理。</p>
<h1 id="二-数学语言表达"><a class="markdownIt-Anchor" href="#二-数学语言表达"></a> 二、数学语言表达</h1>
<p>实际上，中国剩余定理的内容可以表达为如下：<br>
对于同余方程组</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>x</mi><mo>≡</mo><msub><mi>a</mi><mn>1</mn></msub><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mspace width="1em"><mi>m</mi><mn>1</mn><mo stretchy="false">)</mo></mspace></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>x</mi><mo>≡</mo><msub><mi>a</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mspace width="1em"><mi>m</mi><mn>2</mn><mo stretchy="false">)</mo></mspace></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mspace width="1em"><mi><mi mathvariant="normal">⋮</mi><mpadded height="+0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mspace></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>x</mi><mo>≡</mo><msub><mi>a</mi><mi>n</mi></msub><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mspace width="1em"><msub><mi>m</mi><mi>n</mi></msub><mo stretchy="false">)</mo></mspace></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases}
x \equiv a_1(mod \quad m1)\\
x \equiv a_2(mod \quad m2)\\
\quad \vdots\\
x \equiv a_n(mod \quad m_n)
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:6.252000000000001em;vertical-align:-2.876em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.2500200000000006em;"><span style="top:-1.2999899999999998em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-1.2949899999999999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-1.58999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-1.8849900000000002em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-2.17999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-2.2049900000000004em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-3.1500100000000004em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.29501em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.59001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.885010000000001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-5.180010000000001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-5.205010000000001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-5.50002em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.3760000000000003em;"><span style="top:-6.0555em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">m</span><span class="mord">1</span><span class="mclose">)</span></span></span><span style="top:-4.615500000000001em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">m</span><span class="mord">2</span><span class="mclose">)</span></span></span><span style="top:-2.6835000000000004em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mspace" style="margin-right:1em;"></span><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-1.2435em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:1em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.876em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>m</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>m</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>m</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">m_1,m_2,\cdots,m_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>互质,该方程的解为</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>x</mi><mo>≡</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mrow><msub><mi>a</mi><mi>i</mi></msub><mo>∗</mo><msub><mi>M</mi><mi>i</mi></msub><mo>∗</mo><mi>i</mi><mi>n</mi><mi>v</mi><mo stretchy="false">(</mo><msub><mi>M</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><mspace width="1em"><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mspace width="1em"><mi>M</mi><mo stretchy="false">)</mo></mspace></mspace></mrow><annotation encoding="application/x-tex">x \equiv \sum_{i=1}^{n}{a_i*M_i*inv(M_i)} \quad (mod\quad M)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46375em;vertical-align:0em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span><span class="mspace" style="margin-right:1em;"></span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mclose">)</span></span></span></span></span></p>
<p>其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mo>=</mo><msubsup><mo>∏</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><msub><mi>m</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">M=\prod_{i=1}^nm_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.104002em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∏</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>,<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>M</mi><mi>i</mi></msub><mo>=</mo><mfrac><mi>M</mi><msub><mi>m</mi><mi>i</mi></msub></mfrac></mrow><annotation encoding="application/x-tex">M_i=\frac{M}{m_i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.317431em;vertical-align:-0.44509999999999994em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><br>
该结论正确性容易证明，直接代入方程即可证明，接下来讨论的是如何使用简单的方法推出中国剩余定理。</p>
<h1 id="三-从一个简单例子引入"><a class="markdownIt-Anchor" href="#三-从一个简单例子引入"></a> 三、从一个简单例子引入</h1>
<blockquote>
<p>一个数模以3得2，模以5得3，这个数是多少？</p>
</blockquote>
<p>可能会有点复杂，我们先考虑一以下两个问题</p>
<blockquote>
<p>一个数模以3得1，模以5得0，这个数是多少？<br>
一个数模以3得0，模以5得1，这个数是多少？</p>
</blockquote>
<p>好像很容易，第一个问题是10，第二个问题是6。用数学语言表达就是</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>10</mn><mo>≡</mo><mn>1</mn><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mspace width="1em"><mn>3</mn><mo stretchy="false">)</mo></mspace></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>10</mn><mo>≡</mo><mn>0</mn><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mspace width="1em"><mn>5</mn><mo stretchy="false">)</mo></mspace></mrow></mstyle></mtd></mtr></mtable></mrow><mspace linebreak="newline"></mspace><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>6</mn><mo>≡</mo><mn>0</mn><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mspace width="1em"><mn>3</mn><mo stretchy="false">)</mo></mspace></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>6</mn><mo>≡</mo><mn>1</mn><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mspace width="1em"><mn>5</mn><mo stretchy="false">)</mo></mspace></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">\begin{cases}
10\equiv 1 (mod\quad 3)\\
10\equiv 0 (mod\quad 5)
\end{cases}\\
\begin{cases}
6\equiv 0 (mod\quad 3)\\
6\equiv 1 (mod\quad 5)
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">1</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">1</span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:1em;"></span><span class="mord">3</span><span class="mclose">)</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">1</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:1em;"></span><span class="mord">5</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">6</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:1em;"></span><span class="mord">3</span><span class="mclose">)</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">6</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">1</span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:1em;"></span><span class="mord">5</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>由于同余式的<strong>乘法封闭性</strong>，我们可以将第一个方程组乘以2，将第二个方程组乘以3，那么结果为：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>20</mn><mo>≡</mo><mn>2</mn><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mspace width="1em"><mn>3</mn><mo stretchy="false">)</mo></mspace></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>20</mn><mo>≡</mo><mn>0</mn><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mspace width="1em"><mn>5</mn><mo stretchy="false">)</mo></mspace></mrow></mstyle></mtd></mtr></mtable></mrow><mspace linebreak="newline"></mspace><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>18</mn><mo>≡</mo><mn>0</mn><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mspace width="1em"><mn>3</mn><mo stretchy="false">)</mo></mspace></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>18</mn><mo>≡</mo><mn>3</mn><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mspace width="1em"><mn>5</mn><mo stretchy="false">)</mo></mspace></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">\begin{cases}
20\equiv 2 (mod\quad 3)\\
20\equiv 0 (mod\quad 5)
\end{cases}
\\
\begin{cases}
18\equiv 0 (mod\quad 3)\\
18\equiv 3 (mod\quad 5)
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">2</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">2</span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:1em;"></span><span class="mord">3</span><span class="mclose">)</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">2</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:1em;"></span><span class="mord">5</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">1</span><span class="mord">8</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:1em;"></span><span class="mord">3</span><span class="mclose">)</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">1</span><span class="mord">8</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">3</span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:1em;"></span><span class="mord">5</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>再由<strong>加法封闭性</strong>，将上下两个方程相加</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>38</mn><mo>≡</mo><mn>2</mn><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mspace width="1em"><mn>3</mn><mo stretchy="false">)</mo></mspace></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>38</mn><mo>≡</mo><mn>3</mn><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mspace width="1em"><mn>5</mn><mo stretchy="false">)</mo></mspace></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases}
38\equiv 2 (mod\quad 3)\\
38\equiv 3 (mod\quad 5)
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">3</span><span class="mord">8</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">2</span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:1em;"></span><span class="mord">3</span><span class="mclose">)</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">3</span><span class="mord">8</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">3</span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:1em;"></span><span class="mord">5</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>检查一下，38是不是满足原问题的条件？<br>
不难发现，同余方程有类似向量的线性性质，这启发我们可以通过线性的变换来计算出特定同余方程的解。其中最简便的方法，便是计算出满足条件的一组基向量，然后直接线性相加得出结果。<br>
同时，我们希望基向量是正交且标准化的的，也就是说，基向量有形如<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>1</mn><mo separator="true">,</mo><mn>0</mn><mo separator="true">,</mo><mn>0</mn><mo separator="true">,</mo><mn>0</mn><mo separator="true">,</mo><mo>…</mo><mtext> </mtext><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(1,0,0,0,\dots)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mclose">)</span></span></span></span>的形式，如何求出满足这样的同余式？乘法逆元就派上了用场。</p>
<h1 id="四-求出基向量"><a class="markdownIt-Anchor" href="#四-求出基向量"></a> 四、求出基向量</h1>
<p>要想得到形如</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>x</mi><mo>≡</mo><mn>0</mn><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mspace width="1em"><mn>2</mn><mo stretchy="false">)</mo></mspace></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>x</mi><mo>≡</mo><mn>1</mn><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mspace width="1em"><mn>3</mn><mo stretchy="false">)</mo></mspace></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>x</mi><mo>≡</mo><mn>0</mn><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mspace width="1em"><mn>7</mn><mo stretchy="false">)</mo></mspace></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases}
x\equiv 0 (mod\quad 2)\\
x\equiv 1 (mod\quad 3)\\
x\equiv 0 (mod\quad 7)\\
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.32em;vertical-align:-1.9099999999999997em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.35002em;"><span style="top:-2.19999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-2.19499em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-2.20499em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-3.15001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.2950099999999996em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.30501em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.60002em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.8500199999999998em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.41em;"><span style="top:-4.41em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:1em;"></span><span class="mord">2</span><span class="mclose">)</span></span></span><span style="top:-2.97em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">1</span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:1em;"></span><span class="mord">3</span><span class="mclose">)</span></span></span><span style="top:-1.5300000000000002em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:1em;"></span><span class="mord">7</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.9099999999999997em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>的同余方程，首先要除第二个同余方程以外的通余方程右边为0，我们可以直接计算出剩余项的lcm,由于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>m</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">m_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>互质，则可以知道14的倍数都是满足条件的。其次我们希望x与1在模3意义下同余，可以通过枚举来测试，但是最好的方法是使用乘法逆元。<br>
显然，有如下同余方程：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mn>14</mn><mo>≡</mo><mn>14</mn><mspace></mspace><mspace width="1em"><mo stretchy="false">(</mo><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mspace width="0.3333333333333333em"><mn>3</mn><mo stretchy="false">)</mo></mspace></mspace></mrow><annotation encoding="application/x-tex">14\equiv14\pmod{3}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">4</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">4</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.3333333333333333em;"></span><span class="mord">3</span><span class="mclose">)</span></span></span></span></span></p>
<p>左右同乘以14在模3意义下的乘法逆元，则有</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mn>14</mn><mo>∗</mo><mi>i</mi><mi>n</mi><mi>v</mi><mo stretchy="false">(</mo><mn>14</mn><mo stretchy="false">)</mo><mo>≡</mo><mn>1</mn><mspace></mspace><mspace width="1em"><mo stretchy="false">(</mo><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mspace width="0.3333333333333333em"><mn>3</mn><mo stretchy="false">)</mo></mspace></mspace></mrow><annotation encoding="application/x-tex">14*inv(14)\equiv 1\pmod{3}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">4</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mopen">(</span><span class="mord">1</span><span class="mord">4</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.3333333333333333em;"></span><span class="mord">3</span><span class="mclose">)</span></span></span></span></span></p>
<p>这样，我们便求出了其中的一个基向量。<br>
将结论推广到更一般的形式，对于同余方程组</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>x</mi><mo>≡</mo><msub><mi>a</mi><mn>1</mn></msub><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mspace width="1em"><mi>m</mi><mn>1</mn><mo stretchy="false">)</mo></mspace></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>x</mi><mo>≡</mo><msub><mi>a</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mspace width="1em"><mi>m</mi><mn>2</mn><mo stretchy="false">)</mo></mspace></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mspace width="1em"><mi><mi mathvariant="normal">⋮</mi><mpadded height="+0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mspace></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>x</mi><mo>≡</mo><msub><mi>a</mi><mi>n</mi></msub><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mspace width="1em"><msub><mi>m</mi><mi>n</mi></msub><mo stretchy="false">)</mo></mspace></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases}
x \equiv a_1(mod \quad m1)\\
x \equiv a_2(mod \quad m2)\\
\quad \vdots\\
x \equiv a_n(mod \quad m_n)
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:6.252000000000001em;vertical-align:-2.876em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.2500200000000006em;"><span style="top:-1.2999899999999998em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-1.2949899999999999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-1.58999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-1.8849900000000002em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-2.17999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-2.2049900000000004em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-3.1500100000000004em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.29501em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.59001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.885010000000001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-5.180010000000001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-5.205010000000001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-5.50002em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.3760000000000003em;"><span style="top:-6.0555em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">m</span><span class="mord">1</span><span class="mclose">)</span></span></span><span style="top:-4.615500000000001em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">m</span><span class="mord">2</span><span class="mclose">)</span></span></span><span style="top:-2.6835000000000004em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mspace" style="margin-right:1em;"></span><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-1.2435em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:1em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.876em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>其第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span></span></span></span>个基向量为</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>e</mi><mi>i</mi></msub><mo>=</mo><msub><mi>M</mi><mi>i</mi></msub><mo>∗</mo><mi>i</mi><mi>n</mi><mi>v</mi><mo stretchy="false">(</mo><msub><mi>M</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">e_i=M_i*inv(M_i)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p>
<p>其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>M</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">M_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是除<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>m</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">m_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>以外的所有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">m</span></span></span></span>的乘积。</p>
<blockquote>
<ul>
<li>
<p>为什么是“除<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>m</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">m_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>以外所有m的乘积”？</p>
<p>“所有m的乘积”是为了保证求出的这个基向量在其他模意义下均与0同余，以免影响其他模意义下的基向量的结果。</p>
</li>
<li>
<p>如何理解基向量</p>
<p>这里的基向量可以仅仅将其理解成一个值，这个值在当前模意义下与1同余，在其他模意义下是0，只要将各个模意义下的基向量线性组合，就可以得到x的最终解。</p>
</li>
</ul>
</blockquote>
<p>所以，最终的答案便是</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mrow><mo fence="true">(</mo><mtable rowspacing="0.15999999999999992em" columnalign="center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>a</mi><mn>1</mn></msub><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>a</mi><mn>2</mn></msub><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mi>n</mi></msub></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow><mo>∗</mo><mrow><mo fence="true">(</mo><mtable rowspacing="0.15999999999999992em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>e</mi><mn>1</mn></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>e</mi><mn>2</mn></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mi mathvariant="normal">⋮</mi><mpadded height="+0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>e</mi><mi>n</mi></msub></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">{
\left(
    \begin{array}{ccc}
    a_1,&amp;
    a_2,&amp;
    \cdots,&amp;
    a_n
    \end{array}
\right)
}*
{
\left(
    \begin{array}{c}
    e_1\\
    e_2\\
    \vdots\\
    e_n
    \end{array}
    \right)}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.20001em;vertical-align:-0.35001em;"></span><span class="mord"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:5.459999999999999em;vertical-align:-2.4799999999999995em;"></span><span class="mord"><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.950035em;"><span style="top:-1.3499850000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎝</span></span></span><span style="top:-2.4999950000000006em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-3.0950050000000005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-3.6900150000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-3.7100150000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-4.950035000000001em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎛</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4500349999999997em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.9799999999999995em;"><span style="top:-5.8275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-4.6275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.7674999999999996em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-1.5675000000000006em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4799999999999995em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.950035em;"><span style="top:-1.3499850000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎠</span></span></span><span style="top:-2.4999950000000006em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-3.0950050000000005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-3.6900150000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-3.7100150000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-4.950035000000001em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4500349999999997em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>也即</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>x</mi><mo>≡</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mrow><msub><mi>a</mi><mi>i</mi></msub><mo>∗</mo><msub><mi>M</mi><mi>i</mi></msub><mo>∗</mo><mi>i</mi><mi>n</mi><mi>v</mi><mo stretchy="false">(</mo><msub><mi>M</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><mspace width="1em"><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mspace width="1em"><mi>M</mi><mo stretchy="false">)</mo></mspace></mspace></mrow><annotation encoding="application/x-tex">x \equiv \sum_{i=1}^{n}{a_i*M_i*inv(M_i)} \quad (mod\quad M)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46375em;vertical-align:0em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span><span class="mspace" style="margin-right:1em;"></span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mclose">)</span></span></span></span></span></p>
<h2 id="如何与线性代数类比"><a class="markdownIt-Anchor" href="#如何与线性代数类比"></a> 如何与线性代数类比</h2>
<p>求同余方程的过程可以看成是，求出一个向量，该向量在<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>m</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">m_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>所在维度上长度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">a_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，我们要做的就是求出<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>m</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">m_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>维度上的单位向量（且该向量在其他维度投影为0），然后用线性性质将其相加。<br>
<strong>该部分关于向量等等的表述可能存在一些问题，感性理解一下吧</strong></p>
]]></content>
      <categories>
        <category>算法</category>
        <category>数论</category>
      </categories>
      <tags>
        <tag>中国剩余定理</tag>
        <tag>数论</tag>
      </tags>
  </entry>
  <entry>
    <title>从中国剩余定理到拉格朗日插值法</title>
    <url>/2022/08/15/%E4%BB%8E%E4%B8%AD%E5%9B%BD%E5%89%A9%E4%BD%99%E5%AE%9A%E7%90%86%E5%88%B0%E6%8B%89%E6%A0%BC%E6%9C%97%E6%97%A5%E6%8F%92%E5%80%BC%E6%B3%95/</url>
    <content><![CDATA[<p>本文是看了b站up主<em>乐正垂星</em>的视频后写下的笔记（拖了足足三四个月吧），当时看的时候觉得大受震撼。可能看这篇博客不如直接看视频来的简明，但写下这篇博客仅仅是为了记录我学过这个定理。</p>
<iframe src="//player.bilibili.com/player.html?aid=339210437&bvid=BV1TR4y1j745&cid=512174127&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" width="800px" height="600px"> </iframe>
<h1 id="回顾"><a class="markdownIt-Anchor" href="#回顾"></a> 回顾</h1>
<p>在之前的博客中，介绍了<strong>中国剩余定理</strong>，该定理用数学表达为：</p>
<p>对于同余方程组</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>x</mi><mo>≡</mo><msub><mi>a</mi><mn>1</mn></msub><mo stretchy="false">(</mo><mspace></mspace><mspace width="0.6666666666666666em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mtext> </mtext><mtext> </mtext><msub><mi>m</mi><mn>1</mn></msub><mo stretchy="false">)</mo></mspace></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>x</mi><mo>≡</mo><msub><mi>a</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mspace></mspace><mspace width="0.6666666666666666em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mtext> </mtext><mtext> </mtext><msub><mi>m</mi><mn>2</mn></msub><mo stretchy="false">)</mo></mspace></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>x</mi><mo>≡</mo><msub><mi>a</mi><mi>n</mi></msub><mo stretchy="false">(</mo><mspace></mspace><mspace width="0.6666666666666666em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mtext> </mtext><mtext> </mtext><msub><mi>m</mi><mi>n</mi></msub><mo stretchy="false">)</mo></mspace></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases}
x\equiv a_1(\mod m_1) \\
x\equiv a_2(\mod m_2) \\
\cdots\\
x\equiv a_n(\mod m_n)
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:5.76em;vertical-align:-2.63em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.9500200000000008em;"><span style="top:-1.59999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-1.5949900000000001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-1.8899900000000003em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-2.1849900000000004em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-2.2049900000000004em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-3.1500100000000004em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.29501em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.59001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.885010000000001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.905010000000001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-5.20002em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.45002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.1300000000000003em;"><span style="top:-5.130000000000001em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:0.6666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-3.6900000000000004em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:0.6666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="minner">⋯</span></span></span><span style="top:-0.8100000000000002em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:0.6666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.63em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>其解为：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>x</mi><mo>≡</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mrow><msub><mi>a</mi><mi>i</mi></msub><mo>∗</mo><msub><mi>M</mi><mi>i</mi></msub></mrow><mo>∗</mo><mi>i</mi><mi>n</mi><mi>v</mi><mo stretchy="false">(</mo><msub><mi>M</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mspace></mspace><mspace width="1em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mtext> </mtext><mtext> </mtext><mi>M</mi><mo stretchy="false">)</mo></mspace></mrow><annotation encoding="application/x-tex">x\equiv\sum_{i=1}^n{a_i*M_i}*inv(M_i) (\mod M)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46375em;vertical-align:0em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mclose">)</span></span></span></span></span></p>
<p>其中：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>M</mi><mo>=</mo><munderover><mo>∏</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>m</mi><mi>i</mi></msub><mspace linebreak="newline"></mspace><msub><mi>M</mi><mi>i</mi></msub><mo>=</mo><mfrac><mi>M</mi><msub><mi>m</mi><mi>i</mi></msub></mfrac></mrow><annotation encoding="application/x-tex">M=\prod_{i=1}^{n}m_i\\
M_i=\frac{M}{m_i}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∏</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.19633em;vertical-align:-0.8360000000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mi>n</mi><mi>v</mi></mrow><annotation encoding="application/x-tex">inv</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span></span>表示乘法逆元</p>
<h1 id="整式除法"><a class="markdownIt-Anchor" href="#整式除法"></a> 整式除法</h1>
<p>在初中，我们可能会见到如下的的整式除法：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mfrac><mrow><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mn>3</mn><mi>x</mi><mo>+</mo><mn>2</mn></mrow><mrow><mi>x</mi><mo>+</mo><mn>1</mn></mrow></mfrac><mo>=</mo><mi>x</mi><mo>+</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">\frac{x^2+3x+2}{x+1}=x+2
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.260438em;vertical-align:-0.7693300000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.491108em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">3</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span></span></p>
<p>这是显而易见的，因为我们可以用十字相乘法对分子式进行因式分解，但是当遇到这样的情况时，你可能会束手无策：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mfrac><mrow><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mn>4</mn><mi>x</mi><mo>+</mo><mn>2</mn></mrow><mrow><mi>x</mi><mo>+</mo><mn>1</mn></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{x^2+4x+2}{x+1}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.260438em;vertical-align:-0.7693300000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.491108em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">4</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>这里引入一个新的计算方式</p>
<p><img src="/2022/08/15/%E4%BB%8E%E4%B8%AD%E5%9B%BD%E5%89%A9%E4%BD%99%E5%AE%9A%E7%90%86%E5%88%B0%E6%8B%89%E6%A0%BC%E6%9C%97%E6%97%A5%E6%8F%92%E5%80%BC%E6%B3%95/%E6%95%B4%E5%BC%8F%E9%99%A4%E6%B3%95.png" alt></p>
<p>和之前学过方法有点不同，这是<strong>整式的长除法</strong>，其主要的计算思想就将一个m次多项式<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>除以一个n次多项式<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">g(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>,得到一个多项式的商和一个n-1次多项式<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">r(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>。</p>
<blockquote>
<p>多项式长除法的思想就是每次把被除数的最高项除进，这里并没有规定多项式每一项的系数都要是整数，也就是说，计算前、后多项式的系数可以是有理数甚至是无理数。</p>
</blockquote>
<p>于是，我们可以尝试将数论公式推广到对于含未知数的多项式的形式，对于上面一个式子便是：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mn>4</mn><mi>x</mi><mo>+</mo><mn>2</mn><mo>≡</mo><mo>−</mo><mn>1</mn><mo stretchy="false">(</mo><mspace></mspace><mspace width="1em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mtext> </mtext><mtext> </mtext><mi>x</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mspace></mrow><annotation encoding="application/x-tex">x^2+4x+2\equiv-1(\mod x+1)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">4</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">−</span><span class="mord">1</span><span class="mopen">(</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span></span></p>
<p>写成更一般的形式：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>≡</mo><mi>r</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mspace></mspace><mspace width="1em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mtext> </mtext><mtext> </mtext><mi>m</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mspace></mrow><annotation encoding="application/x-tex">f(x)\equiv r(x)(\mod m(x))
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mopen">(</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">m</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></span></p>
<p>可以发现，之前提到的同余的<strong>加减法封闭性</strong>和<strong>乘法封闭性</strong>对于多项式的同余方程同样适用</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>a</mi><mo>+</mo><mi>c</mi><mo>≡</mo><mi>b</mi><mo>+</mo><mi>c</mi><mo stretchy="false">(</mo><mspace></mspace><mspace width="1em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mtext> </mtext><mtext> </mtext><mi>p</mi><mo stretchy="false">)</mo><mspace width="1em"><mo>⟹</mo><mspace width="1em"><mi>a</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>+</mo><mi>c</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>≡</mo><mi>b</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>+</mo><mi>c</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mspace></mspace><mspace width="1em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mtext> </mtext><mtext> </mtext><mi>m</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mi>a</mi><mo>∗</mo><mi>c</mi><mo>≡</mo><mi>b</mi><mo>∗</mo><mi>c</mi><mo stretchy="false">(</mo><mspace></mspace><mspace width="1em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mtext> </mtext><mtext> </mtext><mi>p</mi><mo stretchy="false">)</mo><mspace width="1em"><mo>⟹</mo><mspace width="1em"><mi>a</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>∗</mo><mi>c</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>≡</mo><mi>b</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>∗</mo><mi>c</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mspace></mspace><mspace width="1em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mtext> </mtext><mtext> </mtext><mi>m</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace></mspace></mspace></mspace></mspace></mspace></mspace></mspace></mspace></mrow><annotation encoding="application/x-tex">a+c\equiv b+c(\mod p)   \quad\Longrightarrow\quad a(x)+c(x)\equiv b(x)+c(x)(\mod m(x))\\
a*c\equiv b*c(\mod p)   \quad\Longrightarrow\quad a(x)*c(x)\equiv b(x)*c(x)(\mod m(x))\\
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.46375em;vertical-align:0em;"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">c</span><span class="mopen">(</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">p</span><span class="mclose">)</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⟹</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">a</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">c</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">b</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">c</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mopen">(</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">m</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.46375em;vertical-align:0em;"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">c</span><span class="mopen">(</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">p</span><span class="mclose">)</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⟹</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">a</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">c</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">b</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">c</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mopen">(</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">m</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mclose">)</span></span><span class="mspace newline"></span></span></span></span></p>
<p>但是，同余式的除法依旧十分棘手，于是又要引入逆元的概念</p>
<h2 id="多项式的逆元"><a class="markdownIt-Anchor" href="#多项式的逆元"></a> 多项式的逆元</h2>
<p>多项式的逆元用<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>f</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f^{-1}(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>来表示，即<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>f</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f^{-1}(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>满足</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>∗</mo><msup><mi>f</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>≡</mo><mn>1</mn><mo stretchy="false">(</mo><mspace></mspace><mspace width="1em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mtext> </mtext><mtext> </mtext><mi>m</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mspace></mrow><annotation encoding="application/x-tex">f(x)*f^{-1}(x)\equiv 1(\mod m(x))
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mopen">(</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">m</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></span></p>
<h2 id="一次多项式的特殊性质"><a class="markdownIt-Anchor" href="#一次多项式的特殊性质"></a> 一次多项式的特殊性质</h2>
<p>可以证明（或者尝试说服一下自己），一次多项式的同余方程有以下几个性质（这里的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">c</span></span></span></span>是常数）</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>≡</mo><mi>f</mi><mo stretchy="false">(</mo><mi>a</mi><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mspace></mspace><mspace width="1em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mtext> </mtext><mtext> </mtext><mi>x</mi><mo>−</mo><mi>a</mi><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mi>c</mi><mo>≡</mo><mfrac><mn>1</mn><mi>c</mi></mfrac><mo stretchy="false">(</mo><mspace></mspace><mspace width="1em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mtext> </mtext><mtext> </mtext><mi>x</mi><mo>−</mo><mi>a</mi><mo stretchy="false">)</mo></mspace></mspace></mrow><annotation encoding="application/x-tex">f(x)\equiv f(a)(\mod x-a)\\
c\equiv \frac{1}{c} (\mod x-a)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mopen">(</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">a</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.46375em;vertical-align:0em;"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">c</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">a</span><span class="mclose">)</span></span></span></span></span></p>
<p>由于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>a</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(a)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mclose">)</span></span></span></span>也是常数，所以我们可以在第一个式子的左右同时乘上<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mn>1</mn><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>a</mi><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{1}{f(a)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.365108em;vertical-align:-0.52em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">a</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>，可以得出下面这个同余方程</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>∗</mo><mfrac><mn>1</mn><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>a</mi><mo stretchy="false">)</mo></mrow></mfrac><mo>≡</mo><mn>1</mn><mo stretchy="false">(</mo><mspace></mspace><mspace width="1em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mtext> </mtext><mtext> </mtext><mi>x</mi><mo>−</mo><mi>a</mi><mo stretchy="false">)</mo></mspace></mrow><annotation encoding="application/x-tex">f(x)*\frac{1}{f(a)}\equiv 1(\mod x-a)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.25744em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mopen">(</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">a</span><span class="mclose">)</span></span></span></span></span></p>
<p>于是，我们得出了一次多项式的乘法逆元。</p>
<h1 id="中国剩余定理的多项式形式"><a class="markdownIt-Anchor" href="#中国剩余定理的多项式形式"></a> 中国剩余定理的多项式形式</h1>
<p>我们将上面得到的第一个结论写成同余方程组的形式</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>≡</mo><mi>f</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mspace></mspace><mspace width="0.6666666666666666em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mtext> </mtext><mtext> </mtext><mi>x</mi><mo>−</mo><msub><mi>x</mi><mn>1</mn></msub><mo stretchy="false">)</mo></mspace></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>≡</mo><mi>f</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mspace></mspace><mspace width="0.6666666666666666em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mtext> </mtext><mtext> </mtext><mi>x</mi><mo>−</mo><msub><mi>x</mi><mn>2</mn></msub><mo stretchy="false">)</mo></mspace></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>≡</mo><mi>f</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>n</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mspace></mspace><mspace width="0.6666666666666666em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mtext> </mtext><mtext> </mtext><mi>x</mi><mo>−</mo><msub><mi>x</mi><mi>n</mi></msub><mo stretchy="false">)</mo></mspace></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases}
f(x)\equiv f(x_1)(\mod x-x_1)\\
f(x)\equiv f(x_2)(\mod x-x_2)\\
\cdots\\
f(x)\equiv f(x_n)(\mod x-x_n)
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:5.76em;vertical-align:-2.63em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.9500200000000008em;"><span style="top:-1.59999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-1.5949900000000001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-1.8899900000000003em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-2.1849900000000004em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-2.2049900000000004em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-3.1500100000000004em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.29501em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.59001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.885010000000001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.905010000000001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-5.20002em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.45002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.1300000000000003em;"><span style="top:-5.130000000000001em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:0.6666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-3.6900000000000004em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:0.6666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="minner">⋯</span></span></span><span style="top:-0.8100000000000002em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:0.6666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.63em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>根据中国剩余定理的内容，该同余方程的解为：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>≡</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mrow><mi>f</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>∗</mo><mover accent="true"><msub><mi>e</mi><mi>i</mi></msub><mo>⃗</mo></mover></mrow></mrow><annotation encoding="application/x-tex">f(x)\equiv \sum_{i=1}^n{f(x_i)*\vec{e_i}}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2355em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width="0.471em" height="0.714em" style="width:0.471em" viewbox="0 0 471 714" preserveaspectratio="xMinYMin"><path d="M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z"/></svg></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p>现在要做的就是求出每个基向量<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><msub><mi>e</mi><mi>i</mi></msub><mo>⃗</mo></mover></mrow><annotation encoding="application/x-tex">\vec{e_i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.864em;vertical-align:-0.15em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2355em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width="0.471em" height="0.714em" style="width:0.471em" viewbox="0 0 471 714" preserveaspectratio="xMinYMin"><path d="M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z"/></svg></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span>。</p>
<p>我们可以根据之前的中国剩余定理，推广到多项式的形式，即</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mover accent="true"><msub><mi>e</mi><mi>i</mi></msub><mo>⃗</mo></mover><mo>=</mo><msub><mi>M</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>∗</mo><mi>i</mi><mi>n</mi><mi>v</mi><mo stretchy="false">(</mo><msub><mi>M</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\vec{e_i} = M_i(x)*inv(M_i(x))
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.864em;vertical-align:-0.15em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2355em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width="0.471em" height="0.714em" style="width:0.471em" viewbox="0 0 471 714" preserveaspectratio="xMinYMin"><path d="M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z"/></svg></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></span></p>
<p>与之前相似</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>M</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><munderover><mo>∏</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mrow><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><msub><mi>x</mi><mi>j</mi></msub><mo stretchy="false">)</mo></mrow></mrow><mrow><mi>x</mi><mo>−</mo><msub><mi>x</mi><mi>i</mi></msub></mrow></mfrac></mrow><annotation encoding="application/x-tex">M_i(x)=\frac{\prod_{j=1}^n{(x-x_j)}}{x-x_i}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.4661100000000005em;vertical-align:-0.8360000000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6301100000000002em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.825818em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∏</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.43581800000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>而<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mi>n</mi><mi>v</mi><mo stretchy="false">(</mo><msub><mi>M</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">inv(M_i(x))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span>就是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>M</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">M_i(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>在模<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>−</mo><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">x-x_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>意义下的<strong>乘法逆元</strong>，可以通过上面一次式的结论得出，</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>i</mi><mi>n</mi><mi>v</mi><mo stretchy="false">(</mo><msub><mi>M</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><msub><mi>M</mi><mi>i</mi></msub><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">inv(M_i(x)) = \frac{1}{M_i(x_i)}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.25744em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>将这两个式子代入基向量，得到</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mover accent="true"><msub><mi>e</mi><mi>i</mi></msub><mo>⃗</mo></mover><mo>=</mo><mfrac><mrow><munder><mo>∏</mo><mrow><mi>j</mi><mo mathvariant="normal">≠</mo><mi>i</mi></mrow></munder><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><msub><mi>x</mi><mi>j</mi></msub><mo stretchy="false">)</mo></mrow><mrow><munder><mo>∏</mo><mrow><mi>j</mi><mo mathvariant="normal">≠</mo><mi>i</mi></mrow></munder><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><msub><mi>x</mi><mi>j</mi></msub><mo stretchy="false">)</mo></mrow></mfrac><mo>=</mo><munder><mo>∏</mo><mrow><mi>j</mi><mo mathvariant="normal">≠</mo><mi>i</mi></mrow></munder><mfrac><mrow><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><msub><mi>x</mi><mi>j</mi></msub><mo stretchy="false">)</mo></mrow><mrow><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><msub><mi>x</mi><mi>j</mi></msub><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">\vec{e_i}=\frac{\prod_{j\neq i}(x-x_j)}{\prod_{j\neq i}(x_i-x_j)}=\prod_{j\neq i}\frac{(x-x_j)}{(x_i-x_j)}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.864em;vertical-align:-0.15em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2355em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width="0.471em" height="0.714em" style="width:0.471em" viewbox="0 0 471 714" preserveaspectratio="xMinYMin"><path d="M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z"/></svg></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.697636em;vertical-align:-1.1218180000000002em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.575818em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∏</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.18639799999999984em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight"><span class="mrel mtight"><span class="mord vbox mtight"><span class="thinbox mtight"><span class="rlap mtight"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel mtight"></span></span><span class="fix"></span></span></span></span></span><span class="mrel mtight">=</span></span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.43581800000000004em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.825818em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∏</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.18639799999999984em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight"><span class="mrel mtight"><span class="mord vbox mtight"><span class="thinbox mtight"><span class="rlap mtight"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel mtight"></span></span><span class="fix"></span></span></span></span></span><span class="mrel mtight">=</span></span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.43581800000000004em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.1218180000000002em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.865221em;vertical-align:-1.438221em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight"><span class="mrel mtight"><span class="mord vbox mtight"><span class="thinbox mtight"><span class="rlap mtight"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel mtight"></span></span><span class="fix"></span></span></span></span></span><span class="mrel mtight">=</span></span><span class="mord mathnormal mtight">i</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∏</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.438221em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.972108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>所以，将这个式子代入中国剩余定理的结论</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mi>f</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>∗</mo><munder><mo>∏</mo><mrow><mi>j</mi><mo mathvariant="normal">≠</mo><mi>i</mi></mrow></munder><mfrac><mrow><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><msub><mi>x</mi><mi>j</mi></msub><mo stretchy="false">)</mo></mrow><mrow><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><msub><mi>x</mi><mi>j</mi></msub><mo stretchy="false">)</mo></mrow></mfrac><mo stretchy="false">(</mo><mspace></mspace><mspace width="1em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mtext> </mtext><mtext> </mtext><mi>M</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mspace></mrow><annotation encoding="application/x-tex">f(x)=\sum_{i=1}^nf(x_i)*\prod_{j\neq i}\frac{(x-x_j)}{(x_i-x_j)} (\mod M(x))
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.865221em;vertical-align:-1.438221em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight"><span class="mrel mtight"><span class="mord vbox mtight"><span class="thinbox mtight"><span class="rlap mtight"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel mtight"></span></span><span class="fix"></span></span></span></span></span><span class="mrel mtight">=</span></span><span class="mord mathnormal mtight">i</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∏</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.438221em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.972108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></span></p>
<p>可以发现，这个式子恰好就是拉格朗日插值法的公式。</p>
<h1 id="尝试解释"><a class="markdownIt-Anchor" href="#尝试解释"></a> 尝试解释</h1>
<p>可能直接从中国剩余定理到拉格朗日插值法会有些跳跃，但是我们不妨从“实验现象”出发，尝试解释“实验现象”。</p>
<ul>
<li>我们构造出的同余方程组，表达的就是在<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>=</mo><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">x=x_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>时，曲线<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">y=f(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>恰好经过<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(x_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，这可以看成是希望达到的目标，即插值后的曲线要经过已知的所有点</li>
<li>最后的结果中，出现了和中国剩余定理一样的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace></mspace><mspace width="0.6666666666666666em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mtext> </mtext><mtext> </mtext><mi>M</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mspace></mrow><annotation encoding="application/x-tex">\mod M(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0em;vertical-align:0em;"></span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:0.6666666666666666em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>，这里我们可以理解为对最终结果的次数做了一个限制，即最后的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>次数为n-1，而非更大，限制了结果的个数。</li>
</ul>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>数论</tag>
      </tags>
  </entry>
  <entry>
    <title>在Unity3D中实现存档系统</title>
    <url>/2022/09/05/%E5%9C%A8Unity3D%E4%B8%AD%E5%AE%9E%E7%8E%B0%E5%AD%98%E6%A1%A3%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<p>Unity引擎提供了很多工具类和接口，但是在游戏存档这方面为开发者提供的帮助十分优先，毕竟存档不是什么简单的事，不同游戏的存档方式差距还是比较大的。</p>
<p>像网上说的通过<code>PlayerPrefs</code>、<code>JsonUtility</code>等类虽然确实能够提供一些存储的手段，但是局限性较大。前者只能存储<strong>整型、单精度浮点、字符串</strong>类型的数据，而后者对序列化对象有一定要求，需要开发者在设计类时就提前考虑好。</p>
<p><strong>所以，最好的方法还是自己想办法实现一个存档系统，可以完美契合自己的需求，减少时间和空间上的付出</strong></p>
<h1 id="格式化"><a class="markdownIt-Anchor" href="#格式化"></a> 格式化</h1>
<p>我的项目是一款类似MC的游戏，需要存储的数据很简单，就是每个游戏中物体的位置（一个三维向量）、朝向（一个四维向量）和激活状态（一个bool值）。之前搞算法竞赛的时候就经常接触格式化的输入输出，即规定好某行某列的数据是某意义的数值，所以就想到了用格式化的方法来储存数据。</p>
<p>Unity中所有游戏对象都继承了<code>GameObject</code>类，所以可以写一个静态方法来将想要储存的游戏对象转化成可以存储的字符串形式，至于“选择”的工作，可以另外写一个方法来筛选。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs c#">static public string ToText(List&lt;GameObject&gt; gameObjects)<br>&#123;<br>    string res=&quot;&quot;;<br>    foreach(var go in gameObjects)<br>    &#123;<br>        if(go.layer==20) <br>        &#123;<br>            //Debug.Log(go);<br>            string str = Formatting(go);<br>            res += str;<br>        &#125;<br>    &#125;<br>    return res;<br>&#125;<br><br>static public string Formatting(GameObject go)<br>&#123;<br>    string res = go.GetComponent&lt;Identify&gt;().ID;<br>    res += &quot;%&quot; + go.transform.position;<br>    res += &quot;%&quot; + go.transform.rotation;<br>    if(go.GetComponent&lt;IUnit&gt;()!=null)<br>    &#123;<br>        res += &quot;%&quot; + go.GetComponent&lt;IUnit&gt;().isCultivated;<br>    &#125;<br>    return res+&quot;\n&quot;;<br>&#125;<br><br></code></pre></td></tr></table></figure>
<blockquote>
<p>这里的20是一个Magic Number，代表游戏中“方块”所特有的渲染图层。由于暂时找不到很好的方法来区别方块和其他类型的GameObject，只能先用这个笨办法。这算是一个不好的习惯吧。</p>
</blockquote>
<p><code>ToText</code>接受一个GameObject数组，筛选出是方块的对象后调用<code>Formatting</code>方法来格式化方块。<code>Formatting</code>方法采使用简单的语句记录<code>position</code>和<code>rotation</code>两个属性，并判断该对象是否继承自<code>IUnit</code>(这个类是电子元件的基类，需要存储激活状态)。</p>
<blockquote>
<p>实际上GameObject并不继承自IUnit，而是GameObject上的脚本组件继承自IUnit</p>
</blockquote>
<p>然后是朴实无华的获取场景中所有类</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs c#">static public List&lt;GameObject&gt; GetBlocks()<br>&#123;<br>    //获取场景中所有GameObject<br>    GameObject[] gameObjects =(GameObject[]) GameObject.FindObjectsOfType(typeof(GameObject));<br>    List&lt;GameObject&gt; glist = new List&lt;GameObject&gt;();<br>    foreach(var go in gameObjects)<br>    &#123;<br>        //这里保证选到的类不是任何类的子类，否则会出问题<br>        if (go.transform.parent == null) <br>        &#123;<br>            glist.Add(go);<br>        &#125;<br>    &#125;<br>    return glist;        <br>&#125;<br></code></pre></td></tr></table></figure>
<h1 id="储存"><a class="markdownIt-Anchor" href="#储存"></a> 储存</h1>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs C#">static public void Save(int index)<br>&#123;<br>    List&lt;GameObject&gt; gameObjects = GetBlocks();<br>    //Debug.Log(gameObjects.Length);<br>    //Player:<br>    GameObject player = GameObject.Find(&quot;Player&quot;);<br>    string str = player.transform.position.ToString() + &quot;%&quot; + player.transform.rotation.ToString() + &quot;\n&quot;;<br>    str += ToText(gameObjects);<br>    File.WriteAllText(path + string.Format(&quot;\\test&#123;0&#125;.txt&quot;, index), str);<br>    Debug.Log(&quot;Save &quot; + index + &quot; is saved Successfully!&quot;);<br>&#125;<br></code></pre></td></tr></table></figure>
<p>调用各个函数，然后使用C#自带的<code>File</code>类来向文件写入数据。这里为了储存玩家的位置信息，决定在第一行储存玩家的<code>position</code>和<code>rotation</code>。</p>
<p>格式化后的结果如图：</p>
<p><img src="/2022/09/05/%E5%9C%A8Unity3D%E4%B8%AD%E5%AE%9E%E7%8E%B0%E5%AD%98%E6%A1%A3%E7%B3%BB%E7%BB%9F/image-20220906200839509.png" alt="格式化后的信息"></p>
<h1 id="读取数据"><a class="markdownIt-Anchor" href="#读取数据"></a> 读取数据</h1>
<p>读取数据就是格式化数据的逆过程，要从字符串中获得相应的数据，就要对读取出的字符串做一些操作，上面格式化时加入的<code>%</code>符号就是为了让字符串数据变得好处理。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs c#">static public Vector3 getPos(string str)<br>&#123;<br>    float x, y, z;<br>    str = str.Trim(new char[] &#123; &#x27;(&#x27;,&#x27;)&#x27;&#125;);<br>    string[] nums = str.Split(&#x27;,&#x27;);<br>    x = float.Parse(nums[0]);<br>    y = float.Parse(nums[1]);<br>    z = float.Parse(nums[2]);<br>    return new Vector3(x,y,z);<br>&#125;<br><br>static public Quaternion getRotation(string str)<br>&#123;<br>    float x, y, z, w;<br>    str = str.Trim(new char[] &#123; &#x27;(&#x27;, &#x27;)&#x27; &#125;);<br>    string[] nums = str.Split(&#x27;,&#x27;);<br>    x = float.Parse(nums[0]);<br>    y = float.Parse(nums[1]);<br>    z = float.Parse(nums[2]);<br>    w = float.Parse(nums[3]);<br>    return new Quaternion(x,y,z,w);<br>&#125;<br><br>static public bool getCul(string str)<br>&#123;<br>    return str.CompareTo(&quot;True&quot;)==0 ? true : false;<br>&#125;<br></code></pre></td></tr></table></figure>
<p>都是一些基础操作，去空格、去括号、读取值等等。</p>
<p>还需要一个for循环对每一行的数据调用上面三个方法：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs c#">for(int i = 1; i &lt; strs.Length; i++)<br>//从1开始，因为第0个是玩家位置的数据<br>&#123;<br>    string str = strs[i];<br>    // 对字符串进行分割<br>    string[] word = str.Split(&quot;%&quot;);<br>    string name = word[0];<br>    Vector3 pos = getPos(word[1]);<br>    Quaternion quaternion = getRotation(word[2]);<br>    GameObject go = Resources.Load&lt;GameObject&gt;(&quot;Prefabs/&quot; + name);<br>    // 在游戏场景中实例化GameObject<br>    Instantiate(go, pos, quaternion);<br>    // 如果分割出的数据长度大于3，即有第四个数据就意味着这是一个元件，需要读取的数据更多<br>    if(word.Length&gt;3)<br>    &#123;<br>        go.GetComponent&lt;IUnit&gt;().isCultivated = getCul(word[3]);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>
<h1 id="完整的load"><a class="markdownIt-Anchor" href="#完整的load"></a> 完整的Load</h1>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs c#">static public void Load(int index)<br>&#123;<br>    string[] strs;<br>    string FilePath = path + string.Format(&quot;\\test&#123;0&#125;.txt&quot;, index);<br>	// 读取前先判断文件是否存在<br>    if (!File.Exists(FilePath))<br>    &#123;         <br>        File.Create(FilePath).Close(); // 这里链式调用的Close方法很重要<br>        File.WriteAllText(FilePath, template.text);<br>    &#125;<br>    strs = File.ReadAllLines(FilePath);<br>    // 这一部分是玩家的数据<br>    string playerInfo = strs[0];<br>    string[] res = playerInfo.Split(&quot;%&quot;);<br>    GameObject player = GameObject.Find(&quot;Player&quot;);<br>    player.transform.position = getPos(res[0]);<br>    player.transform.rotation = getRotation(res[1]);<br>    <br>    for(int i = 1; i &lt; strs.Length; i++)<br>    &#123;<br>        string str = strs[i];<br>        string[] word = str.Split(&quot;%&quot;);<br>        string name = word[0];<br>        Vector3 pos = getPos(word[1]);<br>        Quaternion quaternion = getRotation(word[2]);<br>        GameObject go = Resources.Load&lt;GameObject&gt;(&quot;Prefabs/&quot; + name);<br>        Instantiate(go, pos, quaternion);<br>        if(word.Length&gt;3)<br>        &#123;<br>            go.GetComponent&lt;IUnit&gt;().isCultivated = getCul(word[3]);<br>        &#125;<br>    &#125;<br></code></pre></td></tr></table></figure>
<p>上面用到了类中的一些静态量</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs c#">public class SaveManager:MonoBehaviour<br>&#123;<br>    public static string path; <br>    public static TextAsset template; <br><br>    private void Start()<br>    &#123;<br>        // 可持久化储存路径，在不同设备中会获得不同的值，可移植性更好<br>        path = Application.persistentDataPath;<br>        <br>        // template是一个模板存档文件，只存储一个简单的地图<br>        template = Resources.Load&lt;TextAsset&gt;(&quot;template&quot;);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>
<h1 id="一些issue"><a class="markdownIt-Anchor" href="#一些issue"></a> 一些Issue</h1>
<p>脚本上的技巧大概就是这些，但是写的时候还是遇到了一些问题。</p>
<h2 id="文件流冲突"><a class="markdownIt-Anchor" href="#文件流冲突"></a> 文件流冲突</h2>
<p>在<code>Load</code>方法中，对文件的存在与否做了一个判断，这里出现过问题。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs c#">// 原先的写法<br>   if (!File.Exists(FilePath))<br>   &#123;         <br>       File.Create(FilePath);<br>       File.WriteAllText(FilePath, template.text);<br>   &#125;<br></code></pre></td></tr></table></figure>
<p>之前的代码在创建文件时没有文件流关闭，导致每次创建文件时出bug，后来加了一个链式调用的<code>.Close()</code>就好了</p>
<h2 id="静态字段未被赋值"><a class="markdownIt-Anchor" href="#静态字段未被赋值"></a> 静态字段未被赋值</h2>
<p>上述所有静态方法和字段都在一个<code>SaveManager</code>类中，而这个类挂载在**场景B（游戏内）<strong>内。我在</strong>场景A（主菜单）**中添加了一个删除存档的按钮，执行一下语句，结果出现了问题</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs c#">string filePath = path + string.Format(&quot;\\test&#123;0&#125;.txt&quot;, index);<br>File.WriteAllText(filePath, SaveManager.template.text);<br></code></pre></td></tr></table></figure>
<p>然后发现，在这个函数中<code>SaveManager.path</code>和<code>SaveManager.template</code>都是空的，因为在场景A中，场景B挂载的脚本并没有运行，所以<code>SaveManager</code>类的静态字段没有被初始化。</p>
<blockquote>
<p>当时为什么不在声明的时候给这两个变量赋值？我也忘了，好像IDE给我报错了，但现在我发现又可以这么写了，挖个坑以后研究吧</p>
</blockquote>
<h1 id="完整代码"><a class="markdownIt-Anchor" href="#完整代码"></a> 完整代码</h1>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs c#">using System.Collections;<br>using System.Collections.Generic;<br>using UnityEngine;<br>using System.IO;<br>using UnityEngine.UI;<br><br>public class SaveManager:MonoBehaviour<br>&#123;<br>    public static string path;<br>    public static TextAsset template; <br><br>    private void Start()<br>    &#123;<br>        path = Application.persistentDataPath;<br>        template = Resources.Load&lt;TextAsset&gt;(&quot;template&quot;);<br>    &#125;<br><br>    static public void Load(int index)<br>    &#123;<br>        string[] strs;<br>        string FilePath = path + string.Format(&quot;\\test&#123;0&#125;.txt&quot;, index);<br><br>        if (!File.Exists(FilePath))<br>        &#123;         <br>            File.Create(FilePath).Close();<br>            File.WriteAllText(FilePath, template.text);<br>        &#125;<br><br>        strs = File.ReadAllLines(FilePath);<br>        string playerInfo = strs[0];<br>        string[] res = playerInfo.Split(&quot;%&quot;);<br>        GameObject player = GameObject.Find(&quot;Player&quot;);<br>        player.transform.position = getPos(res[0]);<br>        player.transform.rotation = getRotation(res[1]);<br>        for(int i = 1; i &lt; strs.Length; i++)<br>        //foreach(string str in strs)<br>        &#123;<br>            string str = strs[i];<br>            string[] word = str.Split(&quot;%&quot;);<br>            string name = word[0];<br>            Vector3 pos = getPos(word[1]);<br>            Quaternion quaternion = getRotation(word[2]);<br>            GameObject go = Resources.Load&lt;GameObject&gt;(&quot;Prefabs/&quot; + name);<br>            Instantiate(go, pos, quaternion);<br>            if(word.Length&gt;3)<br>            &#123;<br>                go.GetComponent&lt;IUnit&gt;().isCultivated = getCul(word[3]);<br>            &#125;<br>        &#125;<br>        //Debug.Log(path);<br>    &#125;<br><br>    static public Vector3 getPos(string str)<br>    &#123;<br>        float x, y, z;<br>        str = str.Trim(new char[] &#123; &#x27;(&#x27;,&#x27;)&#x27;&#125;);<br>        string[] nums = str.Split(&#x27;,&#x27;);<br>        x = float.Parse(nums[0]);<br>        y = float.Parse(nums[1]);<br>        z = float.Parse(nums[2]);<br>        return new Vector3(x,y,z);<br>    &#125;<br><br>    static public Quaternion getRotation(string str)<br>    &#123;<br>        float x, y, z, w;<br>        str = str.Trim(new char[] &#123; &#x27;(&#x27;, &#x27;)&#x27; &#125;);<br>        string[] nums = str.Split(&#x27;,&#x27;);<br>        x = float.Parse(nums[0]);<br>        y = float.Parse(nums[1]);<br>        z = float.Parse(nums[2]);<br>        w = float.Parse(nums[3]);<br>        return new Quaternion(x,y,z,w);<br>    &#125;<br><br>    static public bool getCul(string str)<br>    &#123;<br>        return str.CompareTo(&quot;True&quot;)==0 ? true : false;<br>    &#125;<br><br>    static public void Save(int index)<br>    &#123;<br>        List&lt;GameObject&gt; gameObjects = GetBlocks();<br>        //Debug.Log(gameObjects.Length);<br>        //Player:<br>        GameObject player = GameObject.Find(&quot;Player&quot;);<br>        string str = player.transform.position.ToString() + &quot;%&quot; + player.transform.rotation.ToString() + &quot;\n&quot;;<br>        str += ToText(gameObjects);<br>        File.WriteAllText(path + string.Format(&quot;\\test&#123;0&#125;.txt&quot;, index), str);<br>        Debug.Log(&quot;Save &quot; + index + &quot; is saved Successfully!&quot;);<br>    &#125;<br><br>    static public List&lt;GameObject&gt; GetBlocks()<br>    &#123;<br>        GameObject[] gameObjects =(GameObject[]) GameObject.FindObjectsOfType(typeof(GameObject));<br>        List&lt;GameObject&gt; glist = new List&lt;GameObject&gt;();<br>        foreach(var go in gameObjects)<br>        &#123;<br>            if (go.transform.parent == null)<br>            &#123;<br>                glist.Add(go);<br>            &#125;<br>        &#125;<br>        return glist;        <br>    &#125;<br><br>    static public string ToText(List&lt;GameObject&gt; gameObjects)<br>    &#123;<br>        string res=&quot;&quot;;<br>        foreach(var go in gameObjects)<br>        &#123;<br>            if(go.layer==20)<br>            &#123;<br>                //Debug.Log(go);<br>                string str = Formatting(go);<br>                res += str;<br>            &#125;<br>        &#125;<br>        return res;<br>    &#125;<br><br>    static public string Formatting(GameObject go)<br>    &#123;<br>        string res = go.GetComponent&lt;Identify&gt;().ID;<br>        res += &quot;%&quot; + go.transform.position;<br>        res += &quot;%&quot; + go.transform.rotation;<br>        if(go.GetComponent&lt;IUnit&gt;()!=null)<br>        &#123;<br>            res += &quot;%&quot; + go.GetComponent&lt;IUnit&gt;().isCultivated;<br>        &#125;<br>        return res+&quot;\n&quot;;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>编程语言</tag>
        <tag>Unity</tag>
      </tags>
  </entry>
  <entry>
    <title>博客资料下载链接索引</title>
    <url>/2022/06/12/%E5%8D%9A%E5%AE%A2%E8%B5%84%E6%96%99%E4%B8%8B%E8%BD%BD%E9%93%BE%E6%8E%A5%E7%B4%A2%E5%BC%95/</url>
    <content><![CDATA[<h1 id="思维导图"><a class="markdownIt-Anchor" href="#思维导图"></a> 思维导图</h1>
<p>均为个人复习资料，正确性无法保证，敬请包容，也欢迎指出。</p>
<p><a href="https://zhf999.github.io/mind/ComputerComposition.rar">计算机组成原理2022</a></p>
<p><a href="https://zhf999.github.io/mind/ComputerNetwork.rar">计算机通信与网络2022</a></p>
<blockquote>
<p>UPD(2022-6-13): 蹭了节复习课，根据其他老师的复习目录修改了一点点内容。增加了绪论章节的思维导图。</p>
</blockquote>
<p><a href="https://zhf999.github.io/mind/OS.rar">操作系统2022</a></p>
<h1 id="大作业"><a class="markdownIt-Anchor" href="#大作业"></a> 大作业</h1>
<p><a href="https://zhf999.github.io/download/CV.rar">计算机数据lyn大作业</a></p>
]]></content>
  </entry>
  <entry>
    <title>基于LeNet的手写数字识别</title>
    <url>/2022/11/03/%E5%9F%BA%E4%BA%8ELeNet%E7%9A%84%E6%89%8B%E5%86%99%E6%95%B0%E5%AD%97%E8%AF%86%E5%88%AB/</url>
    <content><![CDATA[<h1 id="基于lenet的手写数字识别"><a class="markdownIt-Anchor" href="#基于lenet的手写数字识别"></a> 基于LeNet的手写数字识别</h1>
<p><em><u>作者：周洪锋 学号：20009200766</u></em></p>
<p>[TOC]</p>
<h2 id="0-环境配置"><a class="markdownIt-Anchor" href="#0-环境配置"></a> 0、环境配置</h2>
<p>需要用到的Python包有<code>matplotlib</code>、<code>pytorch</code>、<code>torchvision</code>，其中pytorch可以使用GPU版本的，但需要按照好CUDA。</p>
<h2 id="1-数据集下载"><a class="markdownIt-Anchor" href="#1-数据集下载"></a> 1、数据集下载</h2>
<p>使用torchvision封装的数据集类来下载MNIST数据集，保存在工作文件夹下。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><code class="hljs python">down_path = <span class="hljs-string">&quot;.\data&quot;</span><br>device = torch.device(<span class="hljs-string">&quot;cuda&quot;</span>)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">raw_read</span>():</span><br>    trans = torchvision.transforms.Compose([torchvision.transforms.ToTensor(),<br>                                torchvision.transforms.Normalize(mean = [<span class="hljs-number">0.5</span>],std = [<span class="hljs-number">0.5</span>])])<br>    train_raw = torchvision.datasets.MNIST(down_path,<span class="hljs-literal">True</span>,transform=trans,download=<span class="hljs-literal">True</span>)<br>    test_raw = torchvision.datasets.MNIST(down_path,<span class="hljs-literal">False</span>,transform=trans,download=<span class="hljs-literal">True</span>)<br></code></pre></td></tr></table></figure>
<h2 id="2-加载数据集"><a class="markdownIt-Anchor" href="#2-加载数据集"></a> 2、加载数据集</h2>
<p>直接下载的数据集并无法直接使用，需要使用pytorch将其处理成<code>DataLoader</code>数据加载器，然后作为迭代器使用。经过多次测试，使用批量大小为1024，线程数为4，以提高数据读取速度。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_loader</span>(<span class="hljs-params">train_raw,test_raw,batch_size=<span class="hljs-number">256</span></span>):</span><br>    train_loader = DataLoader(dataset=train_raw,batch_size=batch_size,shuffle=<span class="hljs-literal">True</span>,num_workers=<span class="hljs-number">4</span>,pin_memory=<span class="hljs-literal">True</span>)<br>    test_loader = DataLoader(dataset=test_raw,batch_size=batch_size,num_workers=<span class="hljs-number">4</span>,pin_memory=<span class="hljs-literal">True</span>)<br>    <span class="hljs-keyword">return</span> train_loader,test_loader<br></code></pre></td></tr></table></figure>
<h2 id="3-构建网络"><a class="markdownIt-Anchor" href="#3-构建网络"></a> 3、构建网络</h2>
<p><img src="/2022/11/03/%E5%9F%BA%E4%BA%8ELeNet%E7%9A%84%E6%89%8B%E5%86%99%E6%95%B0%E5%AD%97%E8%AF%86%E5%88%AB/LeNet.jpg" alt="LeNet的示意图"></p>
<p>网络的主要构成如下：</p>
<h4 id="1卷积层"><a class="markdownIt-Anchor" href="#1卷积层"></a> （1）卷积层</h4>
<p>输入大小为1*28*28，卷积核大小为5，填充为2，输出通道为6，输出的大小为6*28*28。</p>
<h4 id="2池化层"><a class="markdownIt-Anchor" href="#2池化层"></a> （2）池化层</h4>
<p>采用最大池化方法，将输入大小减半，输出为6*14*14。</p>
<h4 id="3卷积层"><a class="markdownIt-Anchor" href="#3卷积层"></a> （3）卷积层</h4>
<p>输入大小为为6*14*14，卷积核大小为5，填充为0，输出通道为16，输出大小为16*10*10。</p>
<h4 id="4池化层"><a class="markdownIt-Anchor" href="#4池化层"></a> （4）池化层</h4>
<p>与（2）相同，最大池化，对输入进行下采样。</p>
<h4 id="5卷积层"><a class="markdownIt-Anchor" href="#5卷积层"></a> （5）卷积层</h4>
<p>输入大小为为6*5*5，卷积核大小为5，填充为0，输出通道为120，输出大小为120*1*1。这一层也可以看成是全连接层。</p>
<h4 id="55展平层"><a class="markdownIt-Anchor" href="#55展平层"></a> （5.5）展平层</h4>
<p>将输入的图像展平为<code>batch_size*120</code>的张量。</p>
<h4 id="6全连接层"><a class="markdownIt-Anchor" href="#6全连接层"></a> （6）全连接层</h4>
<p>输入大小为一个长度120的张量，输出是长度为10的张量，张量的每个分量越大表达这个图片是某个数字的可能性越大。</p>
<h4 id="7softmax层"><a class="markdownIt-Anchor" href="#7softmax层"></a> （7）Softmax层</h4>
<p>将长度为10的张量处理为表示概率的，取值为(0,1)的张量，最终可以用于损失函数的计算</p>
<p><strong>为了提高网络识别的准确性，在各个层之间加了ReLU层，作为非线性神经元。</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><code class="hljs python">net = nn.Sequential(<br>    nn.Conv2d(kernel_size=<span class="hljs-number">5</span>,padding=<span class="hljs-number">2</span>,out_channels=<span class="hljs-number">6</span>,in_channels=<span class="hljs-number">1</span>),<br>    nn.ReLU(),<br>    nn.MaxPool2d(kernel_size=<span class="hljs-number">2</span>),<br>    nn.ReLU(),<br>    nn.Conv2d(kernel_size=<span class="hljs-number">5</span>,in_channels=<span class="hljs-number">6</span>,out_channels=<span class="hljs-number">16</span>),<br>    nn.ReLU(),<br>    nn.MaxPool2d(kernel_size=<span class="hljs-number">2</span>),<br>    nn.ReLU(),<br>    nn.Conv2d(kernel_size=<span class="hljs-number">5</span>,in_channels=<span class="hljs-number">16</span>,out_channels=<span class="hljs-number">120</span>),<br>    nn.Flatten(),<br>    nn.Linear(in_features=<span class="hljs-number">120</span>,out_features=<span class="hljs-number">10</span>),<br>    nn.ReLU(),<br>    nn.Softmax(dim=<span class="hljs-number">1</span>)<br>)<br>net.to(device)<br></code></pre></td></tr></table></figure>
<h2 id="4-优化器和损失函数"><a class="markdownIt-Anchor" href="#4-优化器和损失函数"></a> 4、优化器和损失函数</h2>
<p>优化器选择pytorch封装好的<code>Adam</code>优化器，并开启权重衰减，<strong>防止过拟合</strong>。、</p>
<p>损失函数采用分类问题中常见的交叉熵损失函数。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><code class="hljs python">optimizer = torch.optim.Adam(net.parameters(),lr=<span class="hljs-number">0.01</span>,weight_decay=<span class="hljs-number">0.001</span>)<br>loss = torch.nn.CrossEntropyLoss()<br></code></pre></td></tr></table></figure>
<h2 id="5-训练"><a class="markdownIt-Anchor" href="#5-训练"></a> 5、训练</h2>
<p>训练设定的迭代轮次为30，每轮训练后记录准确率和平均损失，并返回，以便将数据可视化，观察训练结果。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">train</span>(<span class="hljs-params">net,optimizer,loss,train_loader</span>):</span><br>    <span class="hljs-comment"># 下面三个变量分别用来记录正确数目，总数目，和总损失</span><br>    correct = <span class="hljs-number">0</span><br>    tot = <span class="hljs-number">0</span><br>    epoch_loss = <span class="hljs-number">0</span><br>    <span class="hljs-comment"># 设置为训练模式</span><br>    net.train()<br>    <span class="hljs-keyword">for</span> X,y <span class="hljs-keyword">in</span> train_loader:<br>        X = X.to(device)<br>        y = y.to(device)<br>         <br>        net.zero_grad()<br>        yhat = net(X)<br>        <span class="hljs-comment"># 将数据集的标签转化为独热编码</span><br>        y = torch.nn.functional.one_hot(y).<span class="hljs-built_in">type</span>(torch.float32)<br>        l = loss(yhat,y)<br>        <span class="hljs-comment"># 反向传播</span><br>        l.mean().backward()<br>        optimizer.step()   <br>        <span class="hljs-comment"># 计算得到正确的个数</span><br>        cmp = yhat.argmax(dim=<span class="hljs-number">1</span>)==y.argmax(dim=<span class="hljs-number">1</span>)<br>        correct += cmp.<span class="hljs-built_in">sum</span>()<br>        <span class="hljs-comment"># 总损失和训练集容量也进行累加</span><br>        epoch_loss += l<br>        tot += y.shape[<span class="hljs-number">0</span>]<br><br>    <span class="hljs-comment"># 返回前将数据zhuanhui</span><br>    correct = correct.to(torch.device(<span class="hljs-string">&quot;cpu&quot;</span>))<br>    epoch_loss = epoch_loss.to(torch.device(<span class="hljs-string">&quot;cpu&quot;</span>)).detach()<br>    <span class="hljs-comment"># 返回精度和损失</span><br>    <span class="hljs-keyword">return</span> correct/tot,epoch_loss/tot<br></code></pre></td></tr></table></figure>
<h2 id="6-测试"><a class="markdownIt-Anchor" href="#6-测试"></a> 6、测试</h2>
<p>每轮训练完成后进行测试，记录准确率和平均损失，并返回。使用测试集可以评估训练结果并进行调参。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">test</span>(<span class="hljs-params">net,loss,test_loader</span>):</span><br>    correct = <span class="hljs-number">0</span><br>    tot = <span class="hljs-number">0</span><br>    epoch_loss = <span class="hljs-number">0</span><br><br>    net.<span class="hljs-built_in">eval</span>()<br>    <span class="hljs-keyword">with</span> torch.no_grad():<br>        <span class="hljs-keyword">for</span> X,y <span class="hljs-keyword">in</span> test_loader:<br>            X = X.to(device)<br>            y = y.to(device)<br>            <br>            yhat = net(X)<br><br>            y = torch.nn.functional.one_hot(y).<span class="hljs-built_in">type</span>(torch.float32)<br>            l = loss(yhat,y)<br><br>            cmp = yhat.argmax(dim=<span class="hljs-number">1</span>)==y.argmax(dim=<span class="hljs-number">1</span>)<br>            correct += cmp.<span class="hljs-built_in">sum</span>()<br>            epoch_loss += l<br>            tot += y.shape[<span class="hljs-number">0</span>]<br><br>    correct = correct.to(torch.device(<span class="hljs-string">&quot;cpu&quot;</span>))<br>    epoch_loss = epoch_loss.to(torch.device(<span class="hljs-string">&quot;cpu&quot;</span>)).detach()<br>    <span class="hljs-keyword">return</span> correct/tot,epoch_loss/tot<br></code></pre></td></tr></table></figure>
<h2 id="7-结果评估"><a class="markdownIt-Anchor" href="#7-结果评估"></a> 7、结果评估</h2>
<p>结果多次调参并评估结果，得到超参数按如下设定时，训练效果较好，在测试集上的准确率高于98%。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><code class="hljs python">learn_rate = <span class="hljs-number">0.01</span><br>weight_decay = <span class="hljs-number">0.001</span><br>batch_size = <span class="hljs-number">1024</span><br>num_workers = <span class="hljs-number">4</span><br>num_epoches = <span class="hljs-number">30</span><br></code></pre></td></tr></table></figure>
<p>设计了以下函数，用于总体上控制训练和测试。并将结果可视化为图表。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">start</span>(<span class="hljs-params">num_epoches,net,optimizer,loss,train_loader,test_loader</span>):</span><br>    <span class="hljs-comment"># 四个列表用于容纳训练和测试的准确率和平均损失</span><br>    train_acc = []<br>    train_loss = []<br>    test_acc = []<br>    test_loss = []<br>    <span class="hljs-comment"># 训练轮次</span><br>    <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(num_epoches):<br>        acc,epoch_loss = train(net,optimizer,loss,train_loader)<br>        train_acc.append(acc)<br>        train_loss.append(epoch_loss)<br><br>        acc,epoch_loss = test(net,loss,test_loader)<br>        test_acc.append(acc)<br>        test_loss.append(epoch_loss)<br>    <span class="hljs-comment"># 绘图</span><br>    pyplot.figure()<br>    pyplot.subplot(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">1</span>)<br>    <span class="hljs-comment"># 绘制准确率的图表</span><br>    pyplot.plot(<span class="hljs-built_in">range</span>(num_epoches),train_acc)<br>    pyplot.plot(<span class="hljs-built_in">range</span>(num_epoches),test_acc)<br>    pyplot.xlabel(<span class="hljs-string">&quot;accuracy&quot;</span>)<br>    pyplot.legend(labels=(<span class="hljs-string">&quot;train&quot;</span>,<span class="hljs-string">&quot;test&quot;</span>))<br>    pyplot.subplot(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">2</span>)<br>    <span class="hljs-comment"># 绘制平均损失的图表</span><br>    pyplot.plot(<span class="hljs-built_in">range</span>(num_epoches),train_loss)<br>    pyplot.plot(<span class="hljs-built_in">range</span>(num_epoches),test_loss)<br>    pyplot.xlabel(<span class="hljs-string">&quot;loss&quot;</span>)<br>    pyplot.legend(labels=(<span class="hljs-string">&quot;train&quot;</span>,<span class="hljs-string">&quot;test&quot;</span>))<br>    pyplot.show()<br><br></code></pre></td></tr></table></figure>
<p>结果如下：</p>
<p>未加入权重衰减的结果：</p>
<p><img src="/2022/11/03/%E5%9F%BA%E4%BA%8ELeNet%E7%9A%84%E6%89%8B%E5%86%99%E6%95%B0%E5%AD%97%E8%AF%86%E5%88%AB/batch_small_no_decay.png" alt="未加入权重衰减的结果"></p>
<p><strong>加入权重衰减后</strong></p>
<p><img src="/2022/11/03/%E5%9F%BA%E4%BA%8ELeNet%E7%9A%84%E6%89%8B%E5%86%99%E6%95%B0%E5%AD%97%E8%AF%86%E5%88%AB/small_batch.png" alt="加入权重衰减的结果"></p>
<p>可见，加入权重衰减后，精度和准确率的波动较小，减小了过拟合现象。</p>
<p>最后，将模型保存为文件格式，并编写另一个脚本<code>show.py</code>用于展示成果。</p>
<p><img src="/2022/11/03/%E5%9F%BA%E4%BA%8ELeNet%E7%9A%84%E6%89%8B%E5%86%99%E6%95%B0%E5%AD%97%E8%AF%86%E5%88%AB/recognition.png" alt="最终的结果"></p>
<h1 id="实验心得"><a class="markdownIt-Anchor" href="#实验心得"></a> 实验心得</h1>
<p>经过这次实验，加深了对神经网络和计算机视觉领域的了解。虽然模型已经是使用前人设计的LeNet模型，但是实验中仍遇到许多问题，比如对框架的使用不够熟练、数据可视化结果较差、调参过程耗费大量时间等等。同时，为了提高训练速度，还需要同时关注内存、GPU、CPU、硬盘的情况，加深了对计算机体系和操作系统的理解。</p>
<h2 id="完整代码"><a class="markdownIt-Anchor" href="#完整代码"></a> 完整代码：</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> torch<br><span class="hljs-keyword">import</span> torchvision<br><span class="hljs-keyword">from</span> torch.utils.data <span class="hljs-keyword">import</span> DataLoader<br><span class="hljs-keyword">from</span> torch <span class="hljs-keyword">import</span> nn<br><span class="hljs-keyword">from</span> matplotlib <span class="hljs-keyword">import</span> pyplot<br><br>down_path = <span class="hljs-string">&quot;.\data&quot;</span><br>device = torch.device(<span class="hljs-string">&quot;cuda&quot;</span>)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">raw_read</span>():</span><br>    trans = torchvision.transforms.Compose([torchvision.transforms.ToTensor(),<br>                                torchvision.transforms.Normalize(mean = [<span class="hljs-number">0.5</span>],std = [<span class="hljs-number">0.5</span>])])<br>    train_raw = torchvision.datasets.MNIST(down_path,<span class="hljs-literal">True</span>,transform=trans,download=<span class="hljs-literal">True</span>)<br>    test_raw = torchvision.datasets.MNIST(down_path,<span class="hljs-literal">False</span>,transform=trans,download=<span class="hljs-literal">True</span>)<br>    <span class="hljs-keyword">return</span> train_raw,test_raw<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_loader</span>(<span class="hljs-params">train_raw,test_raw,batch_size=<span class="hljs-number">256</span></span>):</span><br>    train_loader = DataLoader(dataset=train_raw,batch_size=batch_size,shuffle=<span class="hljs-literal">True</span>,num_workers=<span class="hljs-number">4</span>,pin_memory=<span class="hljs-literal">True</span>)<br>    test_loader = DataLoader(dataset=test_raw,batch_size=batch_size,num_workers=<span class="hljs-number">4</span>,pin_memory=<span class="hljs-literal">True</span>)<br>    <span class="hljs-keyword">return</span> train_loader,test_loader<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">train</span>(<span class="hljs-params">net,optimizer,loss,train_loader</span>):</span><br>    <span class="hljs-comment"># 下面三个变量分别用来记录正确数目，总数目，和总损失</span><br>    correct = <span class="hljs-number">0</span><br>    tot = <span class="hljs-number">0</span><br>    epoch_loss = <span class="hljs-number">0</span><br>    <span class="hljs-comment"># 设置为训练模式</span><br>    net.train()<br>    <span class="hljs-keyword">for</span> X,y <span class="hljs-keyword">in</span> train_loader:<br>        X = X.to(device)<br>        y = y.to(device)<br>         <br>        net.zero_grad()<br>        yhat = net(X)<br>        <span class="hljs-comment"># 将数据集的标签转化为独热编码</span><br>        y = torch.nn.functional.one_hot(y).<span class="hljs-built_in">type</span>(torch.float32)<br>        l = loss(yhat,y)<br>        <span class="hljs-comment"># 反向传播</span><br>        l.mean().backward()<br>        optimizer.step()   <br>        <span class="hljs-comment"># 计算得到正确的个数</span><br>        cmp = yhat.argmax(dim=<span class="hljs-number">1</span>)==y.argmax(dim=<span class="hljs-number">1</span>)<br>        correct += cmp.<span class="hljs-built_in">sum</span>()<br>        <span class="hljs-comment"># 总损失和训练集容量也进行累加</span><br>        epoch_loss += l<br>        tot += y.shape[<span class="hljs-number">0</span>]<br><br>    <span class="hljs-comment"># 返回前将数据zhuanhui</span><br>    correct = correct.to(torch.device(<span class="hljs-string">&quot;cpu&quot;</span>))<br>    epoch_loss = epoch_loss.to(torch.device(<span class="hljs-string">&quot;cpu&quot;</span>)).detach()<br>    <span class="hljs-comment"># 返回精度和损失</span><br>    <span class="hljs-keyword">return</span> correct/tot,epoch_loss/tot<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">test</span>(<span class="hljs-params">net,loss,test_loader</span>):</span><br>    correct = <span class="hljs-number">0</span><br>    tot = <span class="hljs-number">0</span><br>    epoch_loss = <span class="hljs-number">0</span><br><br>    net.<span class="hljs-built_in">eval</span>()<br>    <span class="hljs-keyword">with</span> torch.no_grad():<br>        <span class="hljs-keyword">for</span> X,y <span class="hljs-keyword">in</span> test_loader:<br>            X = X.to(device)<br>            y = y.to(device)<br>            <br>            yhat = net(X)<br><br>            y = torch.nn.functional.one_hot(y).<span class="hljs-built_in">type</span>(torch.float32)<br>            l = loss(yhat,y)<br><br>            cmp = yhat.argmax(dim=<span class="hljs-number">1</span>)==y.argmax(dim=<span class="hljs-number">1</span>)<br>            correct += cmp.<span class="hljs-built_in">sum</span>()<br>            epoch_loss += l<br>            tot += y.shape[<span class="hljs-number">0</span>]<br><br>    correct = correct.to(torch.device(<span class="hljs-string">&quot;cpu&quot;</span>))<br>    epoch_loss = epoch_loss.to(torch.device(<span class="hljs-string">&quot;cpu&quot;</span>)).detach()<br>    <span class="hljs-keyword">return</span> correct/tot,epoch_loss/tot<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">start</span>(<span class="hljs-params">num_epoches,net,optimizer,loss,train_loader,test_loader</span>):</span><br>    <span class="hljs-comment"># 四个列表用于容纳训练和测试的准确率和平均损失</span><br>    train_acc = []<br>    train_loss = []<br>    test_acc = []<br>    test_loss = []<br>    <span class="hljs-comment"># 训练轮次</span><br>    <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(num_epoches):<br>        acc,epoch_loss = train(net,optimizer,loss,train_loader)<br>        train_acc.append(acc)<br>        train_loss.append(epoch_loss)<br><br>        acc,epoch_loss = test(net,loss,test_loader)<br>        test_acc.append(acc)<br>        test_loss.append(epoch_loss)<br>    <span class="hljs-comment"># 绘图</span><br>    pyplot.figure()<br>    pyplot.subplot(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">1</span>)<br>    <span class="hljs-comment"># 绘制准确率的图表</span><br>    pyplot.plot(<span class="hljs-built_in">range</span>(num_epoches),train_acc)<br>    pyplot.plot(<span class="hljs-built_in">range</span>(num_epoches),test_acc)<br>    pyplot.xlabel(<span class="hljs-string">&quot;accuracy&quot;</span>)<br>    pyplot.legend(labels=(<span class="hljs-string">&quot;train&quot;</span>,<span class="hljs-string">&quot;test&quot;</span>))<br>    pyplot.subplot(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">2</span>)<br>    <span class="hljs-comment"># 绘制平均损失的图表</span><br>    pyplot.plot(<span class="hljs-built_in">range</span>(num_epoches),train_loss)<br>    pyplot.plot(<span class="hljs-built_in">range</span>(num_epoches),test_loss)<br>    pyplot.xlabel(<span class="hljs-string">&quot;loss&quot;</span>)<br>    pyplot.legend(labels=(<span class="hljs-string">&quot;train&quot;</span>,<span class="hljs-string">&quot;test&quot;</span>))<br>    pyplot.show()<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    batch_size = <span class="hljs-number">1024</span><br>    train_raw,test_raw = raw_read()<br>    <br>    train_loader,test_loader = get_loader(train_raw,test_raw,batch_size)<br>    <br>    net = nn.Sequential(<br>        nn.Conv2d(kernel_size=<span class="hljs-number">5</span>,padding=<span class="hljs-number">2</span>,out_channels=<span class="hljs-number">6</span>,in_channels=<span class="hljs-number">1</span>),<br>        nn.ReLU(),<br>        nn.MaxPool2d(kernel_size=<span class="hljs-number">2</span>),<br>        nn.ReLU(),<br>        nn.Conv2d(kernel_size=<span class="hljs-number">5</span>,in_channels=<span class="hljs-number">6</span>,out_channels=<span class="hljs-number">16</span>),<br>        nn.ReLU(),<br>        nn.MaxPool2d(kernel_size=<span class="hljs-number">2</span>),<br>        nn.ReLU(),<br>        nn.Conv2d(kernel_size=<span class="hljs-number">5</span>,in_channels=<span class="hljs-number">16</span>,out_channels=<span class="hljs-number">120</span>),<br>        nn.Flatten(),<br>        nn.Linear(in_features=<span class="hljs-number">120</span>,out_features=<span class="hljs-number">10</span>),<br>        nn.ReLU(),<br>        nn.Softmax(dim=<span class="hljs-number">1</span>)<br>    )<br>    net.to(device)<br><br>    optimizer = torch.optim.Adam(net.parameters(),lr=<span class="hljs-number">0.01</span>,weight_decay=<span class="hljs-number">0.001</span>)<br>    loss = torch.nn.CrossEntropyLoss()<br><br>    start(<span class="hljs-number">30</span>,net,optimizer,loss,train_loader,test_loader)<br><br>    s = <span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;Save this model?&quot;</span>)<br>    <span class="hljs-keyword">if</span> s == <span class="hljs-string">&#x27;y&#x27;</span>:<br>        torch.save(net,<span class="hljs-string">&quot;.\model.pth&quot;</span>)<br>    <br></code></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>深度学习</tag>
        <tag>分类问题</tag>
      </tags>
  </entry>
  <entry>
    <title>学习NAT协议，在家中架设服务器</title>
    <url>/2022/12/26/%E5%AD%A6%E4%B9%A0NAT%E5%8D%8F%E8%AE%AE%EF%BC%8C%E5%9C%A8%E5%AE%B6%E4%B8%AD%E6%9E%B6%E8%AE%BE%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
    <content><![CDATA[<h1 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景</h1>
<p>好久没写博客了，也许是因为前段时间大作业写的报告内容太多，有点厌倦了，坚持果然是件难事。</p>
<p>寒假放假在家想和朋友联机玩《Minecraft》，但苦于没有服务器可以用，于是便尝试自己开一个私服。因为学过计算机网络的知识，我知道自己的PC在路由器LAN口的内网下，于是便考虑了很多种方法来使自己能被公网的其他用户发现。顺便还研究了一下组网的原理。</p>
<h1 id="理论部分"><a class="markdownIt-Anchor" href="#理论部分"></a> 理论部分</h1>
<h2 id="nat协议"><a class="markdownIt-Anchor" href="#nat协议"></a> NAT协议</h2>
<p>全称Network Address Translation。</p>
<p>众所周知，IPv4地址由32bit组成，也就是说，IPv4最多能给2^32次方个设备提供逻辑地址，这其中还不包括事先约定好的<strong>主机环回地址127.0.0.1，私有地址、广播地址</strong>等等，所以目前IPv4地址已经枯竭，目前我们所用的个人上网设备大都没有真正意义的公网地址。为了解决IPv4地址枯竭的问题，<em>NAT协议</em>被提出。</p>
<blockquote>
<p>没有特别说明，本文的IP都指IPv4地址</p>
</blockquote>
<h3 id="私有地址私有ip"><a class="markdownIt-Anchor" href="#私有地址私有ip"></a> 私有地址（私有IP）</h3>
<p>国际上为IP又划分了三个地址段，用于局域网内为设备分配IP地址。也就是说，公网下存在若干的局域网，每个局域网的网关LAN口下就可以使用这些私有地址，私有地址在局域网内不可以重复，但是在公网的不同局域网中可以重复。</p>
<p><img src="/2022/12/26/%E5%AD%A6%E4%B9%A0NAT%E5%8D%8F%E8%AE%AE%EF%BC%8C%E5%9C%A8%E5%AE%B6%E4%B8%AD%E6%9E%B6%E8%AE%BE%E6%9C%8D%E5%8A%A1%E5%99%A8/nat.webp" alt="NAT示意图"></p>
<blockquote>
<p>RFC1918定义了私有IP地址范围：</p>
<p><strong>A: 10.0.0.0~10.255.255.255 即10.0.0.0/8</strong></p>
<p><strong>B:172.16.0.0~172.31.255.255即172.16.0.0/12</strong></p>
<p><strong>C:192.168.0.0~192.168.255.255 即192.168.0.0/16</strong></p>
</blockquote>
<h3 id="nat协议的工作原理"><a class="markdownIt-Anchor" href="#nat协议的工作原理"></a> NAT协议的工作原理</h3>
<p>如上图所示，使用私有地址后，个人的上网设备不需要时时刻刻占用公网IP也可以上网。例如，路由器获得了3个公网IP（X1,X2,X3），局域网内有5台上网设备，当某台设备（私有地址为<strong>A1</strong>）需要上网时，路由器就会从地址池中选择一个公网地址（X2)，建立一个二元组（A1,X2）在映射表中，此后从A1地址发出来的数据报都会利用路由器转化后以X2地址的身份发出，同样，路由器收到发给X2的数据报时都会转发给A1，这样这台设备就可以正常上网。</p>
<p>但是这样有个问题，就是如果这个局域网的5台设备都要上网时，公网IP不够的问题还是没有被解决。于是，更节省的**NAPT（Network Address Port Translation）**就被提出。现今用的大部分NAT协议，其实就是NAPT协议，只是习惯上仍归类为NAT。</p>
<h3 id="napt协议的工作原理"><a class="markdownIt-Anchor" href="#napt协议的工作原理"></a> NAPT协议的工作原理</h3>
<p>NAT协议是建立起一个从私网IP到公网IP的映射，而NAPT如其名，将端口也进行了映射。当路由器收到一个从内网设备A1端口P1发出的数据报时，路由器会建立一个四元组（A1,P1,X1,P1’），其中X1为路由器的公网地址，P1‘为路由器未使用的端口号。这样，只要从（A1,P1)端口发出的数据报都会由路由器的（X1,P1’)，发向外网，反之亦然，于是A1就可以上网。由于一台上网设备可能需要使用多个端口，所以NAPT需要维护的映射表数量较大，但这有个好处，就是路由器只需要被分配一个公网IP可以令其局域网内的设备都可以上网，大大节省了IP资源。</p>
<p><img src="/2022/12/26/%E5%AD%A6%E4%B9%A0NAT%E5%8D%8F%E8%AE%AE%EF%BC%8C%E5%9C%A8%E5%AE%B6%E4%B8%AD%E6%9E%B6%E8%AE%BE%E6%9C%8D%E5%8A%A1%E5%99%A8/v2-625236e44506487bf716ce0d8c8c3db8_720w.webp" alt="NAPT示意图"></p>
<blockquote>
<p>由于涉及到修改端口号，所以NAPT必须与更高层的协议如TCP配合，否则上层数据会出现问题，比如说修改端口号时，TCP头部校验和不对，需要由路由器修改。在一定程度上说，我认为NAPT协议破坏了OSI七层模型层间的独立性。</p>
</blockquote>
<h4 id="映射的分类"><a class="markdownIt-Anchor" href="#映射的分类"></a> 映射的分类</h4>
<p>NA(P)T协议的映射方案分许两种种，其中包括<strong>对称型NAT，锥形NAT</strong>；锥形NAT又可以分为完全锥形、IP限制锥形、端口限制锥形。以上提到的完全锥形NAT、IP限制型NAT，端口限制型NAT，对称型NAT，映射要求逐次变严格。具体的可以看文章底部的B站链接。</p>
<h3 id="大内网"><a class="markdownIt-Anchor" href="#大内网"></a> “大内网”</h3>
<p>实际上，我国的运营商（专业上叫服务提供商ISP）为了更大程度地借阅公网IP资源，采用了”大内网“的策略，说白了就是套娃。将你的网关（路由器、光猫）再置于一个”大内网”，也就是说，看似你可以正常上网，但是你压根就没有属于自己的公网IP。</p>
<h1 id="实践部分"><a class="markdownIt-Anchor" href="#实践部分"></a> 实践部分</h1>
<p>NAT协议确实节省了IP地址资源，但是这也带来一个问题，就是现在的个人网络设备都没有公网IP，这就意味着个人设备无法直接被其他外网用户主动访问（虽然确实起到一定防火墙作用）。为了能够被其他公网用户访问，需要用一种叫做**端口映射（端口转发）**的技术。</p>
<h2 id="端口映射"><a class="markdownIt-Anchor" href="#端口映射"></a> 端口映射</h2>
<p>因为内网中的设备被网关所隐蔽，所以外网用户无法直接访问内网设备，但是我们可以事先在网关上维护好映射表，让外网发往路由器P2端口的数据报都被转发到A1的P1端口，这样就可以让内网设备的某个应用向外网提供服务了。</p>
<p>请注意，我在这段文字中的都说的是“外网”而非“公网”，因为正如上文所说，大部分人都处于“大内网“下，也就是说数据报还要经过ISP的网关才能到达家中的网关。而普通人是没有ISP的网关的配置权限的，这就意味着简单的端口映射是行不通的。就算可以配置ISP网关，经过两层端口映射后延迟也会变得难以接受。</p>
<h2 id="天无绝人之路"><a class="markdownIt-Anchor" href="#天无绝人之路"></a> 天无绝人之路</h2>
<p>但是，我们是可以通过联系ISP客服来获得公网IP的，给家中网关分配公网IP后，我们的数据报就不需要进过运营商的网关了。但是，配置好我的路由器后，我发现还是不能上网，检查后发现我仍然不是用公网IP上网的，经过检查我家网络的拓扑结构后，我发现我家网络的拓扑结构如下图：</p>
<p><img src="/2022/12/26/%E5%AD%A6%E4%B9%A0NAT%E5%8D%8F%E8%AE%AE%EF%BC%8C%E5%9C%A8%E5%AE%B6%E4%B8%AD%E6%9E%B6%E8%AE%BE%E6%9C%8D%E5%8A%A1%E5%99%A8/myhouse1.png" alt="myhouse1"></p>
<p>由于我家的宽带拨号是在光猫上完成的，所以获得公网IP的实际上是我的光猫，而光猫下面一共连接了4个路由器，只设置一层的端口映射是不够的。经过思考后我想出来下面几种解决办法：</p>
<p>1.在光猫上也设置一个端口映射，但是两层的端口映射可能会让延迟打折扣，所以这个方案不适合作为首选。</p>
<p>2.将光猫配置为桥接模式。这种情况下光猫只负责光电信号的转化，拨号由路由器完成，于是路由器就可以获得公网IP。但是宽带拨号只能在一个设备上完成，我的路由器A拨号后，其他三台就无法联网。当然，可以配置其他三台路由器为有线中继或无线中继模式来实现上网，但这样会让路由器A负担过大，并且网络健壮性会下降。同时这种方案会让网络维护难度增大，一是光猫变桥接后，如果网络出问题ISP无法远程配置我家的光猫，需要安排师傅上门，二是我维护网络时需要同时配置四台路由器，过于麻烦。</p>
<p>3.直接将我所用的路由器A设置为中继，中继光猫的信号，这样，我家的网络拓扑结构可以逻辑上表示为下图：</p>
<p><img src="/2022/12/26/%E5%AD%A6%E4%B9%A0NAT%E5%8D%8F%E8%AE%AE%EF%BC%8C%E5%9C%A8%E5%AE%B6%E4%B8%AD%E6%9E%B6%E8%AE%BE%E6%9C%8D%E5%8A%A1%E5%99%A8/myhouse2.png" alt></p>
<p>这种方式下，路由器只是作为一个信号中继器的作用，实际上的数据报都由光猫处理。我只需要在光猫上配置端口映射，就可以实现向公网提供服务了！</p>
<blockquote>
<p>为了配置光猫信息，需要获得光猫的超级管理员密码，这需要一定手段。并且运营商为了防止用户私自搭设服务器，（似乎）将光猫的80、8080等常用端口都封了，如果想要架设WEB服务器可能需要另外的端口。</p>
</blockquote>
<p><img src="/2022/12/26/%E5%AD%A6%E4%B9%A0NAT%E5%8D%8F%E8%AE%AE%EF%BC%8C%E5%9C%A8%E5%AE%B6%E4%B8%AD%E6%9E%B6%E8%AE%BE%E6%9C%8D%E5%8A%A1%E5%99%A8/image-20221226155500696.png" alt="image-20221226155500696"></p>
<h2 id="化动为静"><a class="markdownIt-Anchor" href="#化动为静"></a> 化动为静</h2>
<h3 id="内网-dhcp"><a class="markdownIt-Anchor" href="#内网-dhcp"></a> 内网-DHCP</h3>
<p>为了免去因为DHCP租约到期后要重新配置端口映射的麻烦，需要在PC上将DHCP关闭，手动为其设置一个私有IP。</p>
<h3 id="公网-ddns"><a class="markdownIt-Anchor" href="#公网-ddns"></a> 公网-dDNS</h3>
<p>个人用户获得的公网IP是动态变化的，只要重启一次光猫就会改变（即使不手动重启，运营商也会隔段时间重启一次），这就给我们带来很大的不便利——每次要访问我们的主机时，都要确定一下公网IP是否改变。为了解决这一问题，可以使用<strong>dDNS（Dynamic Domain Name Server)</strong>，使用域名动态解析我们的公网IP，也就是当我们公网IP改变时，会更改DNS解析的内容，我这里使用花生壳（电信网关只支持花生壳）。</p>
<h1 id="扩展"><a class="markdownIt-Anchor" href="#扩展"></a> 扩展</h1>
<p>还有STUN、TURN等方法可以达到内网穿透的效果，其中STUN是通过服务器获取自己的公网IP和端口号，从而自行与公网上的目标建立连接；而TURN是通过一个中间的服务器来交换数据报，知名的樱花内网穿透就是利用这个原理来完成通信的。</p>
<h1 id="结语"><a class="markdownIt-Anchor" href="#结语"></a> 结语</h1>
<p>最后就是用这个办法与好基友成功联机，延迟比使用内网穿透降低了不少，几乎感受不到延迟。想到Minecraft开服我就回忆起初中那段玩MC的时光，当时没有钱，也没有支付宝、微信支付这种手段，只能和朋友买Q币卡，然后上淘宝用Q币卡租服务器。当时对计算机知识了解得太少了，被各种配置搞的晕头转向的，不过想想许多计算机知识或许都是MC带给我的。</p>
<p>参考地址</p>
<p><a href="https://www.zhihu.com/question/31332694">知乎：NAT协议是怎样工作的</a></p>
<p><a href="https://www.bilibili.com/read/cv6189209?spm_id_from=333.1007.0.0">BiliBili：B站最详细内网穿透原理，看了包懂，全是干货！</a></p>
<p><a href="https://developer.aliyun.com/article/243540">阿里云：STUN, TURN, ICE介绍</a></p>
]]></content>
      <categories>
        <category>网络</category>
      </categories>
      <tags>
        <tag>计算机网络</tag>
      </tags>
  </entry>
  <entry>
    <title>循环神经网络笔记</title>
    <url>/2022/10/10/%E5%BE%AA%E7%8E%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<p>最近忙着队里招新的事情，太忙了，将近一个月没有更新博客。今天突然想起来，写点博客来记录一下*《动手学深度学习》*的学习过程，这篇主要记录一下<strong>循环神经网络（RNN）</strong>。</p>
<h1 id="回顾"><a class="markdownIt-Anchor" href="#回顾"></a> 回顾</h1>
<p>其实**卷积神经网络（CNN）**的分量也不轻，毕竟在图像处理领域CNN是十分重要，但是没什么时间写了，只能委屈把CNN的内容写到RNN里，权当作为一个回顾和比较了。</p>
<h2 id="线性神经网络"><a class="markdownIt-Anchor" href="#线性神经网络"></a> 线性神经网络</h2>
<p>在书中，先是介绍了线性神经网络，利用线性神经网络来求解拟合的问题，当时有时间还顺便做了一下Kaggle上的房价预测，练习了一下数据清洗和预处理，算是对数据科学有了一个基本的认识。</p>
<p>线性神经网络主要是对输入向量<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>x</mi><mo>⃗</mo></mover></mrow><annotation encoding="application/x-tex">\vec{x}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.714em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.20772em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width="0.471em" height="0.714em" style="width:0.471em" viewbox="0 0 471 714" preserveaspectratio="xMinYMin"><path d="M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z"/></svg></span></span></span></span></span></span></span></span></span></span>的若干的分量进行加权，从而得到输出。这里加权矩阵<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>W</mi></mrow><annotation encoding="application/x-tex">W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span></span></span>便是待学习参数。在房价预测问题中，输出只有一个，便是房价<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span>（标量）。而在图像分类问题中，可以使用<em>one_hot</em>编码来把输出向量的维度扩展到m维（m为需要分类的数目）。值得注意的是，这里的图像处理方法是把图像由二维展开为一维，从而当做一个width*height的向量而非矩阵来处理，对各个位置的像素进行加权。这样处理有一个问题，就是识别太过笨拙，只会按照对应像素的位置进行加权，图像微小的变换可能就会引起结果的很大差异。</p>
<p><img src="/2022/10/10/%E5%BE%AA%E7%8E%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E7%AC%94%E8%AE%B0/softmaxreg.svg" alt="softmaxreg"></p>
<h2 id="多层感知机"><a class="markdownIt-Anchor" href="#多层感知机"></a> 多层感知机</h2>
<p>多层感知机可以说才是真正的深度网络，因为它利用现代计算设备的高效性和高并行性，在神经网络中加入了隐藏层，并使用非线性函数（ReLU、tanh）来激活神经元。</p>
<p><img src="/2022/10/10/%E5%BE%AA%E7%8E%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E7%AC%94%E8%AE%B0/mlp.svg" alt="mlp"></p>
<h3 id="权重衰减"><a class="markdownIt-Anchor" href="#权重衰减"></a> 权重衰减</h3>
<p>为了防止深度学习时过拟合，引入了一种惩罚机制，即<strong>权重衰减（weight decay）</strong>，给损失函数的loss加上一个与权重有关的值，作为对大权重的惩罚。在loss中，结果原来的损失函数和权重衰减项权衡之后，可以得到一个较为理想的、过拟合现象不是很严重的网络。</p>
<p>权重衰减的函数可以使用L1范数、L2范数等等，而该项的系数是一个超参数，需要人工调整，找到一个合适的值。</p>
<h3 id="暂退法"><a class="markdownIt-Anchor" href="#暂退法"></a> 暂退法</h3>
<p>**暂退法（dropout）**暂时没有理解透彻，我现在的理解就是在训练时每个神经元有一定概率输出为0，可能是模拟人的神经元的某种遗忘机制，或者是人为地向网络中加入噪声。这部分先作为一个TODO，将来学明白了来填坑。</p>
<h2 id="卷积神经网络"><a class="markdownIt-Anchor" href="#卷积神经网络"></a> 卷积神经网络</h2>
<p>卷积神经网络将二维图像的结构保留了下来，利用<strong>核（kernel）<strong>对图像进行卷积操作。为了让图像在变换时也有一定的鲁棒性，还引入了</strong>池化（pooling，也有人认为翻译成汇聚）</strong>，池化可以认为是特殊的一种卷积操作，有平均汇聚层和最大汇聚层两种。用大的核对图像卷积时可能会缩小图像，所以这里又涉及了一系列超参数，<em>填充padding、步幅stride、核大小kernel_size</em>。</p>
<p>由于图片有多个通道，所以在对图像进行卷积操作时需要考虑通道的问题。</p>
<p>文中还介绍了现代神经网络，包括<strong>深度卷积神经网络AlexNet残差网络ResNet等</strong>，这部分就不深入提了。</p>
<p><img src="/2022/10/10/%E5%BE%AA%E7%8E%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E7%AC%94%E8%AE%B0/filters.png" alt="学习后得出的卷积核，可以看到其中有许多形似高斯核和Sobel的核"></p>
<p><img src="/2022/10/10/%E5%BE%AA%E7%8E%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E7%AC%94%E8%AE%B0/alexnet.svg" alt="AlexNet的示意图"></p>
<h1 id="rnn"><a class="markdownIt-Anchor" href="#rnn"></a> RNN</h1>
<p>终于到正题。上述提到的网络都是仅对当前的输入进行一系列计算，而得出对应的结果。但是，这种学习没有时序性。在自然语言、股价预测、天气预测时，往往需要结合过去的若干个状态来完成输出。</p>
<p>用数学公式表达就是</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>x</mi><mi>t</mi></msub><mo>∼</mo><mi>p</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>t</mi></msub><mi mathvariant="normal">∣</mi><msub><mi>x</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>x</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>x</mi><mn>1</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">x_t\sim p(x_t|x_{t-1},x_{t-1},\cdots,x_1)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p>
<p>但是这模型有个缺点，就是随着<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathnormal">t</span></span></span></span>的增大，需要处理的数据量也会不断增大，针对这个问题，有两个解决办法。</p>
<ul>
<li>只根据前<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">τ</mi></mrow><annotation encoding="application/x-tex">\bf{\tau}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.1132em;">τ</span></span></span></span></span></span>个状态来推出现在的状态，即</li>
</ul>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>x</mi><mi>t</mi></msub><mo>∼</mo><mi>p</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>t</mi></msub><mi mathvariant="normal">∣</mi><msub><mi>x</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>x</mi><mrow><mi>t</mi><mo>−</mo><mn>2</mn></mrow></msub><mo separator="true">,</mo><msub><mi>x</mi><mrow><mi>t</mi><mo>−</mo><mi>τ</mi></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">x_t\sim p(x_t|x_{t-1},x_{t-2},x_{t-\tau})
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.28055599999999997em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.1132em;">τ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p>
<ul>
<li>保留一些对过去的总结，可以用矩阵<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">H</mi></mrow><annotation encoding="application/x-tex">\bf{H}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68611em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">H</span></span></span></span></span></span>来表示（可以将其理解为上阶段隐藏层的输出）</li>
</ul>
<p>实际上，为了减少需要学习的参数个数，RNN使用的是后者。</p>
<h2 id="网络模型"><a class="markdownIt-Anchor" href="#网络模型"></a> 网络模型</h2>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi mathvariant="bold">H</mi><mi mathvariant="bold">t</mi></msub><mo>=</mo><mrow><mi mathvariant="bold">Φ</mi><mo stretchy="false">(</mo><mrow><mrow><msub><mi mathvariant="bold">X</mi><mi mathvariant="bold">t</mi></msub><msub><mi mathvariant="bold">W</mi><mrow><mi mathvariant="bold">x</mi><mi mathvariant="bold">h</mi></mrow></msub><mo>+</mo><msub><mi mathvariant="bold">H</mi><mrow><mi mathvariant="bold">t</mi><mo>−</mo><mn mathvariant="bold">1</mn></mrow></msub><msub><mi mathvariant="bold">W</mi><mrow><mi mathvariant="bold">h</mi><mi mathvariant="bold">h</mi></mrow></msub><mo>+</mo><mi mathvariant="bold">b</mi><mi mathvariant="bold">i</mi><mi mathvariant="bold">a</mi><msub><mi mathvariant="bold">s</mi><mi mathvariant="bold">h</mi></msub></mrow><mo stretchy="false">)</mo></mrow></mrow></mrow><annotation encoding="application/x-tex">\bf{H_t} = \bf{\Phi}(\bf{X_tW_{xh}+H_{t-1}W_{hh}+bias_h})
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathbf">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.29444400000000004em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathbf mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">Φ</span></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathbf">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.29444400000000004em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathbf mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.01597em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathbf mtight">x</span><span class="mord mathbf mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathbf">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathbf mtight">t</span><span class="mbin mtight">−</span><span class="mord mathbf mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.01597em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathbf mtight">h</span><span class="mord mathbf mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathbf">b</span><span class="mord mathbf">i</span><span class="mord mathbf">a</span><span class="mord"><span class="mord mathbf">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathbf mtight">h</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></span></span></span></p>
<p>这个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="bold">H</mi><mi mathvariant="bold">t</mi></msub></mrow><annotation encoding="application/x-tex">\bf{H_t}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83611em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathbf">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.29444400000000004em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathbf mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></span>矩阵表达的是第t个时间步的状态，可以理解为隐藏层的输出值，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">W</mi></mrow><annotation encoding="application/x-tex">\bf{W}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68611em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">W</span></span></span></span></span></span>矩阵是待学习参数，前者对输入矩阵加权，后者对上个阶段的状态处理。这里的激活函数默认使用ReLU。</p>
<p>要获得输出，还要将此刻的状态输入到一个线性神经网络进行计算，</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi mathvariant="bold">O</mi><mi mathvariant="bold">t</mi></msub><mo>=</mo><msub><mi mathvariant="bold">H</mi><mi mathvariant="bold">t</mi></msub><msub><mi mathvariant="bold">W</mi><mrow><mi mathvariant="bold">h</mi><mi mathvariant="bold">q</mi></mrow></msub><mo>+</mo><mi mathvariant="bold">b</mi><mi mathvariant="bold">i</mi><mi mathvariant="bold">a</mi><msub><mi mathvariant="bold">s</mi><mi mathvariant="bold">q</mi></msub></mrow><annotation encoding="application/x-tex">\bf{O_t=H_tW_{hq}+bias_q}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathbf">O</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.29444400000000004em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathbf mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathbf">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.29444400000000004em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathbf mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.01597em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathbf mtight">h</span><span class="mord mathbf mtight">q</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathbf">b</span><span class="mord mathbf">i</span><span class="mord mathbf">a</span><span class="mord"><span class="mord mathbf">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16110799999999997em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathbf mtight">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></p>
<p><img src="/2022/10/10/%E5%BE%AA%E7%8E%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E7%AC%94%E8%AE%B0/RNN.png" alt="RNN示意图"></p>
<p>计算新的状态时，只会根据上一个状态和当前输入来计算，再之前的状态只会作为输出（pytorch中）。</p>
<h2 id="训练"><a class="markdownIt-Anchor" href="#训练"></a> 训练</h2>
<p>训练时，输入的形状为**（时间步数，批量大小，词表大小）<strong>，这样是为了方便更新小批量数据的隐状态（？），输出大小为</strong>（时间步数*批量大小，词表大小）**。在pytorch中封装的RNN会直接返回前<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>τ</mi></mrow><annotation encoding="application/x-tex">\tau</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.1132em;">τ</span></span></span></span>个状态（图中淡蓝色框的部分），而非真正的输出，所以想要获得输出还需要再返回的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>τ</mi></mrow><annotation encoding="application/x-tex">\tau</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.1132em;">τ</span></span></span></span>个状态利用线性神经网络进行训练。</p>
<h2 id="测试"><a class="markdownIt-Anchor" href="#测试"></a> 测试</h2>
<p>测试时，输入大小始终为**(1,1,词表大小)**，因为批量大小显然为1，而输出大小为1，所以时间步数也应该为1。在每次获取预测值之前，都要使用空（可能经过初始化）的状态先在生成的网络上跑一遍，以获得当前上一步的状态。</p>
<h1 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h1>
<p>笔者认为RNN有点confusing，毕竟陌生的马尔可夫链和奇怪的输入输出形状实在棘手。这篇博客可能问题很多，欢迎指出。</p>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>深度学习</tag>
        <tag>神经网络</tag>
      </tags>
  </entry>
  <entry>
    <title>数据库作业答案（更新中）</title>
    <url>/2022/10/11/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BD%9C%E4%B8%9A%E7%AD%94%E6%A1%88%EF%BC%88%E6%9B%B4%E6%96%B0%E4%B8%AD%EF%BC%89/</url>
    <content><![CDATA[<h1 id="第一章"><a class="markdownIt-Anchor" href="#第一章"></a> 第一章</h1>
<h1 id="第二章"><a class="markdownIt-Anchor" href="#第二章"></a> 第二章</h1>
<h2 id="1"><a class="markdownIt-Anchor" href="#1"></a> 1、</h2>
<p>Q：<u><em>试述关系模型的完整性规则。在参照完整性中，什么情况下外码属性的值可以为空值？</em></u></p>
<p>A：</p>
<ul>
<li>实体完整性规则：关系R的主属性不能是空或未知。</li>
<li>参照完整性规则：关系R的外码F要么是空值，要么是被参照关系的某个码值。</li>
<li>用户定义的完整性：某一具体应用的数据必须满足语义要求</li>
</ul>
<p>在尚未给该关系设置参照时，此时外码F的值可以全部为空。</p>
<h2 id="2"><a class="markdownIt-Anchor" href="#2"></a> 2、</h2>
<p><img src="/2022/10/11/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BD%9C%E4%B8%9A%E7%AD%94%E6%A1%88%EF%BC%88%E6%9B%B4%E6%96%B0%E4%B8%AD%EF%BC%89/image-20221011220622405.png" alt="第二小题图"></p>
<p>A：</p>
<p>（1)</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>R</mi><mn>1</mn></msub><mo>=</mo><menclose notation="top bottom left right"><mtable rowspacing="0.15999999999999992em" columnalign="center center" columnlines="solid" columnspacing="1em" rowlines="solid solid solid"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>T</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>Y</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>c</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>d</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>e</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>f</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>d</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>e</mi></mstyle></mtd></mtr></mtable></menclose></mrow><annotation encoding="application/x-tex">R_1=\begin{array}{|c|c|}
\hline
T &amp; Y \\
\hline
c &amp; d\\
\hline
e &amp; f\\
\hline
d &amp; e\\
\hline
\end{array}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:4.840000000000001em;vertical-align:-2.1500000000000004em;"></span><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6900000000000004em;"><span style="top:-4.65em;"><span class="pstrut" style="height:4.65em;"></span><span class="mtable"><span class="vertical-separator" style="height:4.800000000000001em;border-right-width:0.04em;border-right-style:solid;margin:0 -0.02em;vertical-align:-2.1500000000000004em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">c</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">e</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="vertical-separator" style="height:4.800000000000001em;border-right-width:0.04em;border-right-style:solid;margin:0 -0.02em;vertical-align:-2.1500000000000004em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">d</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="vertical-separator" style="height:4.800000000000001em;border-right-width:0.04em;border-right-style:solid;margin:0 -0.02em;vertical-align:-2.1500000000000004em;"></span></span></span><span style="top:-2.5em;"><span class="pstrut" style="height:4.65em;"></span><span class="hline" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.7000000000000006em;"><span class="pstrut" style="height:4.65em;"></span><span class="hline" style="border-bottom-width:0.04em;"></span></span><span style="top:-4.9em;"><span class="pstrut" style="height:4.65em;"></span><span class="hline" style="border-bottom-width:0.04em;"></span></span><span style="top:-6.1000000000000005em;"><span class="pstrut" style="height:4.65em;"></span><span class="hline" style="border-bottom-width:0.04em;"></span></span><span style="top:-7.300000000000001em;"><span class="pstrut" style="height:4.65em;"></span><span class="hline" style="border-bottom-width:0.04em;"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span></span></span></span></span></p>
<p>(2)</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>R</mi><mn>2</mn></msub><mo>=</mo><menclose notation="top bottom left right"><mtable rowspacing="0.15999999999999992em" columnalign="center center center center" columnlines="solid solid solid" columnspacing="1em" rowlines="solid solid"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>P</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>Q</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>T</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>Y</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>q</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>a</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>e</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>f</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>7</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>g</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>e</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>f</mi></mstyle></mtd></mtr></mtable></menclose></mrow><annotation encoding="application/x-tex">R_2=
\begin{array}{|c|c|c|c|}
\hline
P &amp; Q &amp; T &amp; Y\\
\hline
q &amp; a &amp; e &amp; f\\
\hline
7 &amp; g &amp; e &amp; f\\
\hline
\end{array}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.6400000000000006em;vertical-align:-1.5500000000000007em;"></span><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.09em;"><span style="top:-4.05em;"><span class="pstrut" style="height:4.05em;"></span><span class="mtable"><span class="vertical-separator" style="height:3.6em;border-right-width:0.04em;border-right-style:solid;margin:0 -0.02em;vertical-align:-1.5500000000000003em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">7</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="vertical-separator" style="height:3.6em;border-right-width:0.04em;border-right-style:solid;margin:0 -0.02em;vertical-align:-1.5500000000000003em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">Q</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">a</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="vertical-separator" style="height:3.6em;border-right-width:0.04em;border-right-style:solid;margin:0 -0.02em;vertical-align:-1.5500000000000003em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">e</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="vertical-separator" style="height:3.6em;border-right-width:0.04em;border-right-style:solid;margin:0 -0.02em;vertical-align:-1.5500000000000003em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="vertical-separator" style="height:3.6em;border-right-width:0.04em;border-right-style:solid;margin:0 -0.02em;vertical-align:-1.5500000000000003em;"></span></span></span><span style="top:-2.4999999999999996em;"><span class="pstrut" style="height:4.05em;"></span><span class="hline" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.6999999999999997em;"><span class="pstrut" style="height:4.05em;"></span><span class="hline" style="border-bottom-width:0.04em;"></span></span><span style="top:-4.8999999999999995em;"><span class="pstrut" style="height:4.05em;"></span><span class="hline" style="border-bottom-width:0.04em;"></span></span><span style="top:-6.1em;"><span class="pstrut" style="height:4.05em;"></span><span class="hline" style="border-bottom-width:0.04em;"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span></span></span></span></span></p>
<p>(3)</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>R</mi><mn>3</mn></msub><mo>=</mo><menclose notation="top bottom left right"><mtable rowspacing="0.15999999999999992em" columnalign="center center center center center" columnlines="solid solid solid solid" columnspacing="1em" rowlines="solid solid solid solid"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>P</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>Q</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>T</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>Y</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>B</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>b</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>c</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>d</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>m</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>b</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>c</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>d</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>n</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>7</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>g</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>c</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>d</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>m</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>7</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>g</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>c</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>d</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>n</mi></mstyle></mtd></mtr></mtable></menclose></mrow><annotation encoding="application/x-tex">R_3=
\begin{array}{|c|c|c|c|c|}
\hline
P &amp; Q &amp; T &amp; Y &amp; B\\
\hline
2 &amp; b &amp; c &amp; d &amp; m\\
\hline
2 &amp; b &amp; c &amp; d &amp; n \\
\hline
7 &amp; g &amp; c &amp; d &amp; m \\
\hline
7 &amp; g &amp; c &amp; d &amp; n\\
\hline
\end{array}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:6.040000000000001em;vertical-align:-2.7500000000000004em;"></span><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.2900000000000005em;"><span style="top:-5.25em;"><span class="pstrut" style="height:5.25em;"></span><span class="mtable"><span class="vertical-separator" style="height:6.000000000000001em;border-right-width:0.04em;border-right-style:solid;margin:0 -0.02em;vertical-align:-2.7500000000000004em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.2500000000000004em;"><span style="top:-5.410000000000001em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span></span><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-1.8099999999999998em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">7</span></span></span><span style="top:-0.6099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">7</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.7500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="vertical-separator" style="height:6.000000000000001em;border-right-width:0.04em;border-right-style:solid;margin:0 -0.02em;vertical-align:-2.7500000000000004em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.2500000000000004em;"><span style="top:-5.410000000000001em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">Q</span></span></span><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">b</span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">b</span></span></span><span style="top:-1.8099999999999998em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span></span></span><span style="top:-0.6099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.7500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="vertical-separator" style="height:6.000000000000001em;border-right-width:0.04em;border-right-style:solid;margin:0 -0.02em;vertical-align:-2.7500000000000004em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.2500000000000004em;"><span style="top:-5.410000000000001em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">c</span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">c</span></span></span><span style="top:-1.8099999999999998em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">c</span></span></span><span style="top:-0.6099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.7500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="vertical-separator" style="height:6.000000000000001em;border-right-width:0.04em;border-right-style:solid;margin:0 -0.02em;vertical-align:-2.7500000000000004em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.2500000000000004em;"><span style="top:-5.410000000000001em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">d</span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">d</span></span></span><span style="top:-1.8099999999999998em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">d</span></span></span><span style="top:-0.6099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.7500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="vertical-separator" style="height:6.000000000000001em;border-right-width:0.04em;border-right-style:solid;margin:0 -0.02em;vertical-align:-2.7500000000000004em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.2500000000000004em;"><span style="top:-5.410000000000001em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">m</span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span></span></span><span style="top:-1.8099999999999998em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">m</span></span></span><span style="top:-0.6099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.7500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="vertical-separator" style="height:6.000000000000001em;border-right-width:0.04em;border-right-style:solid;margin:0 -0.02em;vertical-align:-2.7500000000000004em;"></span></span></span><span style="top:-2.4999999999999996em;"><span class="pstrut" style="height:5.25em;"></span><span class="hline" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.6999999999999997em;"><span class="pstrut" style="height:5.25em;"></span><span class="hline" style="border-bottom-width:0.04em;"></span></span><span style="top:-4.9em;"><span class="pstrut" style="height:5.25em;"></span><span class="hline" style="border-bottom-width:0.04em;"></span></span><span style="top:-6.1000000000000005em;"><span class="pstrut" style="height:5.25em;"></span><span class="hline" style="border-bottom-width:0.04em;"></span></span><span style="top:-7.300000000000001em;"><span class="pstrut" style="height:5.25em;"></span><span class="hline" style="border-bottom-width:0.04em;"></span></span><span style="top:-8.5em;"><span class="pstrut" style="height:5.25em;"></span><span class="hline" style="border-bottom-width:0.04em;"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.7500000000000004em;"><span></span></span></span></span></span></span></span></span></span></p>
<p>(4)</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>R</mi><mn>4</mn></msub><mo>=</mo><menclose notation="top bottom left right"><mtable rowspacing="0.15999999999999992em" columnalign="center center center" columnlines="solid solid" columnspacing="1em" rowlines="solid solid solid"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>Q</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>P</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>Y</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>b</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>f</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>a</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>9</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>f</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>g</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>7</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>f</mi></mstyle></mtd></mtr></mtable></menclose></mrow><annotation encoding="application/x-tex">R_4=
\begin{array}{|c|c|c|}
\hline
Q &amp; P &amp; Y\\
\hline
b &amp; 2 &amp; f\\
\hline
a &amp; 9 &amp; f\\
\hline
g &amp; 7 &amp; f \\
\hline
\end{array}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:4.840000000000001em;vertical-align:-2.1500000000000004em;"></span><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6900000000000004em;"><span style="top:-4.65em;"><span class="pstrut" style="height:4.65em;"></span><span class="mtable"><span class="vertical-separator" style="height:4.800000000000001em;border-right-width:0.04em;border-right-style:solid;margin:0 -0.02em;vertical-align:-2.1500000000000004em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">Q</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">b</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">a</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="vertical-separator" style="height:4.800000000000001em;border-right-width:0.04em;border-right-style:solid;margin:0 -0.02em;vertical-align:-2.1500000000000004em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">9</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">7</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="vertical-separator" style="height:4.800000000000001em;border-right-width:0.04em;border-right-style:solid;margin:0 -0.02em;vertical-align:-2.1500000000000004em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="vertical-separator" style="height:4.800000000000001em;border-right-width:0.04em;border-right-style:solid;margin:0 -0.02em;vertical-align:-2.1500000000000004em;"></span></span></span><span style="top:-2.5em;"><span class="pstrut" style="height:4.65em;"></span><span class="hline" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.7000000000000006em;"><span class="pstrut" style="height:4.65em;"></span><span class="hline" style="border-bottom-width:0.04em;"></span></span><span style="top:-4.9em;"><span class="pstrut" style="height:4.65em;"></span><span class="hline" style="border-bottom-width:0.04em;"></span></span><span style="top:-6.1000000000000005em;"><span class="pstrut" style="height:4.65em;"></span><span class="hline" style="border-bottom-width:0.04em;"></span></span><span style="top:-7.300000000000001em;"><span class="pstrut" style="height:4.65em;"></span><span class="hline" style="border-bottom-width:0.04em;"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span></span></span></span></span></p>
<p>(5)</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>R</mi><mn>5</mn></msub><mo>=</mo><menclose notation="top bottom left right"><mtable rowspacing="0.15999999999999992em" columnalign="center center" columnlines="solid" columnspacing="1em" rowlines="solid solid"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>P</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>Q</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>b</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>7</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>g</mi></mstyle></mtd></mtr></mtable></menclose></mrow><annotation encoding="application/x-tex">R_5=
\begin{array}{|c|c|}
\hline
P &amp; Q \\
\hline
2 &amp; b\\
\hline
7 &amp; g\\
\hline
\end{array}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.6400000000000006em;vertical-align:-1.5500000000000007em;"></span><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.09em;"><span style="top:-4.05em;"><span class="pstrut" style="height:4.05em;"></span><span class="mtable"><span class="vertical-separator" style="height:3.6em;border-right-width:0.04em;border-right-style:solid;margin:0 -0.02em;vertical-align:-1.5500000000000003em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">7</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="vertical-separator" style="height:3.6em;border-right-width:0.04em;border-right-style:solid;margin:0 -0.02em;vertical-align:-1.5500000000000003em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">Q</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">b</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="vertical-separator" style="height:3.6em;border-right-width:0.04em;border-right-style:solid;margin:0 -0.02em;vertical-align:-1.5500000000000003em;"></span></span></span><span style="top:-2.4999999999999996em;"><span class="pstrut" style="height:4.05em;"></span><span class="hline" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.6999999999999997em;"><span class="pstrut" style="height:4.05em;"></span><span class="hline" style="border-bottom-width:0.04em;"></span></span><span style="top:-4.8999999999999995em;"><span class="pstrut" style="height:4.05em;"></span><span class="hline" style="border-bottom-width:0.04em;"></span></span><span style="top:-6.1em;"><span class="pstrut" style="height:4.05em;"></span><span class="hline" style="border-bottom-width:0.04em;"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span></span></span></span></span></p>
<h2 id="3"><a class="markdownIt-Anchor" href="#3"></a> 3、</h2>
<blockquote>
<p>设有一个SPJ数据库，包括S，P，J及SPJ4个关系模式：</p>
<p>S(SNO, SNAME, STATUS, CITY);</p>
<p>P(PNO, PNAME, COLOR, WEIGHT);</p>
<p>J(JNO, JNAME, CITY);</p>
<p>SPJ(SNO, PNO, JNO, QTY)。</p>
<p>供应商表S由供应商代码（SNO）、供应商姓名（SNAME）、供应商状态（STATUS）、供应商所在城市（CITY）组成。</p>
<p>零件表P由零件代码（PNO）、零件名（PNAME）、颜色（COLOR）、重量（WEIGHT）组成。</p>
<p>工程项目表J由工程项目代码（JNO）、工程项目名（JNAME）、工程项目所在城市（CITY）组成。</p>
<p>供应情况表SPJ由供应商代码（SNO）、零件代码（PNO）、工程项目代码（JNO）、供应数量（QTY）组成，表示某供应商供应某种零件给某工程项目的数量为QTY。</p>
<p>试用<font color="red">关系代数</font>完成如下查询：</p>
<p>（1）求供应工程J1零件的供应商号码SNO；</p>
<p>（2）求供应工程J1零件P1的供应商号码SNO;</p>
<p>（3）求供应工程J1零件为红色的供应商号码SNO；</p>
<p>（4）求没有使用天津供应商生产的红色零件的工程号JNO；</p>
<p>（5）求至少使用了供应商S1所供应的全部零件的工程号JNO。</p>
</blockquote>
<p>A:</p>
<p>(1)</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>π</mi><mrow><mi>S</mi><mi>N</mi><mi>O</mi></mrow></msub><mo stretchy="false">(</mo><msub><mi>σ</mi><mrow><mi>J</mi><mi>N</mi><mi>O</mi><mo>=</mo><msub><mi>J</mi><mn>1</mn></msub></mrow></msub><mo stretchy="false">(</mo><mi>S</mi><mi>P</mi><mi>J</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\pi_{SNO}(\sigma_{JNO=J_1}(SPJ))
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0001em;vertical-align:-0.2501em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">O</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.09618em;">J</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">O</span><span class="mrel mtight">=</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.09618em;">J</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.09618em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></span></p>
<p>(2)</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>π</mi><mrow><mi>S</mi><mi>N</mi><mi>O</mi></mrow></msub><mo stretchy="false">(</mo><msub><mi>σ</mi><mrow><mi>J</mi><mi>N</mi><mi>O</mi><mo>=</mo><msub><mi>J</mi><mn>1</mn></msub><mo>⋀</mo><mi>P</mi><mi>N</mi><mi>O</mi><mo>=</mo><msub><mi>P</mi><mn>1</mn></msub></mrow></msub><mo stretchy="false">(</mo><mi>S</mi><mi>P</mi><mi>J</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\pi_{SNO}(\sigma_{JNO=J_1\bigwedge PNO=P_1}(SPJ))
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.105207em;vertical-align:-0.35520699999999994em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">O</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.5198em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.09618em;">J</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">O</span><span class="mrel mtight">=</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.09618em;">J</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.09618em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mspace mtight" style="margin-right:0.19516666666666668em;"></span><span class="mop op-symbol small-op mtight" style="position:relative;top:-0.0000050000000000050004em;">⋀</span><span class="mspace mtight" style="margin-right:0.19516666666666668em;"></span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">O</span><span class="mrel mtight">=</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35520699999999994em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></span></p>
<p>(3)</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>π</mi><mrow><mi>S</mi><mi>N</mi><mi>O</mi></mrow></msub><mo stretchy="false">(</mo><msub><mi>σ</mi><mrow><mi>J</mi><mi>N</mi><mi>O</mi><mo>=</mo><msub><mi>J</mi><mn>1</mn></msub></mrow></msub><mo stretchy="false">(</mo><mi>S</mi><mi>P</mi><mi>J</mi><mo stretchy="false">)</mo><mo>⋈</mo><msub><mi>σ</mi><mrow><mi>C</mi><mi>O</mi><mi>L</mi><mi>O</mi><mi>R</mi><mo>=</mo><mi>r</mi><mi>e</mi><mi>d</mi></mrow></msub><mo stretchy="false">(</mo><mi>P</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\pi_{SNO}(\sigma_{JNO=J_1}(SPJ)\Join\sigma_{COLOR=red}(P) )
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0001em;vertical-align:-0.2501em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">O</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.09618em;">J</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">O</span><span class="mrel mtight">=</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.09618em;">J</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.09618em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⋈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">O</span><span class="mord mathnormal mtight">L</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">O</span><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span><span class="mrel mtight">=</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></span></p>
<p>(4)</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>π</mi><mrow><mi>J</mi><mi>N</mi><mi>O</mi></mrow></msub><mo stretchy="false">(</mo><mi>S</mi><mi>P</mi><mi>J</mi><mo stretchy="false">)</mo><mo>−</mo><msub><mi>π</mi><mrow><mi>J</mi><mi>N</mi><mi>O</mi></mrow></msub><mo stretchy="false">(</mo><mi>S</mi><mi>P</mi><mi>J</mi><mo>⋈</mo><msub><mi>σ</mi><mrow><mi>C</mi><mi>I</mi><mi>T</mi><mi>Y</mi><mo>=</mo><mtext>天津</mtext></mrow></msub><mo stretchy="false">(</mo><mi>S</mi><mo stretchy="false">)</mo><mo>⋈</mo><msub><mi>σ</mi><mrow><mi>C</mi><mi>O</mi><mi>L</mi><mi>O</mi><mi>R</mi><mo>=</mo><mi>r</mi><mi>e</mi><mi>d</mi></mrow></msub><mo stretchy="false">(</mo><mi>P</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\pi_{JNO}(SPJ)-\pi_{JNO}(SPJ\Join\sigma_{CITY=天津}(S)\Join\sigma_{COLOR=red}(P))
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.09618em;">J</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">O</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.09618em;">J</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">O</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⋈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="mord mathnormal mtight" style="margin-right:0.07847em;">I</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span><span class="mord mathnormal mtight" style="margin-right:0.22222em;">Y</span><span class="mrel mtight">=</span><span class="mord cjk_fallback mtight">天</span><span class="mord cjk_fallback mtight">津</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⋈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">O</span><span class="mord mathnormal mtight">L</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">O</span><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span><span class="mrel mtight">=</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></span></p>
<p>(5)</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>π</mi><mrow><mi>J</mi><mi>N</mi><mi>O</mi></mrow></msub><mo stretchy="false">(</mo><mi>S</mi><mi>P</mi><mi>J</mi><mo>÷</mo><msub><mi>π</mi><mrow><mi>P</mi><mi>N</mi><mi>O</mi></mrow></msub><mo stretchy="false">(</mo><msub><mi>σ</mi><mrow><mi>S</mi><mi>N</mi><mi>O</mi><mo>=</mo><msub><mi>s</mi><mn>1</mn></msub></mrow></msub><mo stretchy="false">(</mo><mi>S</mi><mi>P</mi><mi>J</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\pi_{JNO}(SPJ\div \pi_{PNO}(\sigma_{SNO=s_1}(SPJ)))
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.09618em;">J</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">O</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">÷</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0001em;vertical-align:-0.2501em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">O</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">O</span><span class="mrel mtight">=</span><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mclose">)</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></span></p>
<h2 id="4"><a class="markdownIt-Anchor" href="#4"></a> 4、</h2>
<p>题目同上，但是要求用<strong>元组演算</strong>完成</p>
<p>（1）</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo stretchy="false">{</mo><mi>t</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∃</mi><mi>u</mi><mo stretchy="false">(</mo><mi>S</mi><mi>P</mi><mi>J</mi><mo stretchy="false">(</mo><mi>u</mi><mo stretchy="false">)</mo><mo>∧</mo><mi>u</mi><mo stretchy="false">[</mo><mn>3</mn><mo stretchy="false">]</mo><mo>=</mo><msub><mi>J</mi><mn>1</mn></msub><mo>∧</mo><mi>t</mi><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo><mo>=</mo><mi>u</mi><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">)</mo><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{t\vert\exist u( SPJ(u)\wedge u[3]=J_1\land t[1]=u[1] )\}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal">t</span><span class="mord">∣</span><span class="mord">∃</span><span class="mord mathnormal">u</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord mathnormal">u</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">u</span><span class="mopen">[</span><span class="mord">3</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.09618em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">t</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">u</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span><span class="mclose">)</span><span class="mclose">}</span></span></span></span></span></p>
<p>(2)</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo stretchy="false">{</mo><mi>t</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∃</mi><mi>u</mi><mo stretchy="false">(</mo><mi>S</mi><mi>P</mi><mi>J</mi><mo stretchy="false">(</mo><mi>u</mi><mo stretchy="false">)</mo><mo>∧</mo><mi>u</mi><mo stretchy="false">[</mo><mn>3</mn><mo stretchy="false">]</mo><mo>=</mo><msub><mi>J</mi><mn>1</mn></msub><mo>∧</mo><mi>u</mi><mo stretchy="false">[</mo><mn>2</mn><mo stretchy="false">]</mo><mo>=</mo><msub><mi>P</mi><mn>1</mn></msub><mo>∧</mo><mi>t</mi><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo><mo>=</mo><mi>u</mi><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">)</mo><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{t\vert\exist u ( SPJ(u)\wedge u[3]=J_1\wedge u[2]=P_1\land t[1]=u[1])\}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal">t</span><span class="mord">∣</span><span class="mord">∃</span><span class="mord mathnormal">u</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord mathnormal">u</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">u</span><span class="mopen">[</span><span class="mord">3</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.09618em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">u</span><span class="mopen">[</span><span class="mord">2</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">t</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">u</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span><span class="mclose">)</span><span class="mclose">}</span></span></span></span></span></p>
<p>(3)</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo stretchy="false">{</mo><mi>t</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∃</mi><mi>u</mi><mi mathvariant="normal">∃</mi><mi>t</mi><mo stretchy="false">(</mo><mi>S</mi><mi>P</mi><mi>J</mi><mo stretchy="false">(</mo><mi>u</mi><mo stretchy="false">)</mo><mo>∧</mo><mi>P</mi><mo stretchy="false">(</mo><mi>a</mi><mo stretchy="false">)</mo><mo>∧</mo><mi>u</mi><mo stretchy="false">[</mo><mn>3</mn><mo stretchy="false">]</mo><mo>=</mo><msub><mi>J</mi><mn>1</mn></msub><mo>∧</mo><mi>a</mi><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo><mo>=</mo><mi>u</mi><mo stretchy="false">[</mo><mn>2</mn><mo stretchy="false">]</mo><mo>∧</mo><mi>a</mi><mo stretchy="false">[</mo><mn>3</mn><mo stretchy="false">]</mo><mo>=</mo><mi>r</mi><mi>e</mi><mi>d</mi><mo>∧</mo><mi>t</mi><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo><mo>=</mo><mi>u</mi><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">)</mo><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{t\vert\exist{u}\exist{t}(SPJ(u)\wedge P(a) \wedge u[3]=J_1\wedge a[1]=u[2]\wedge a[3]=red\land t[1]=u[1])\}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal">t</span><span class="mord">∣</span><span class="mord">∃</span><span class="mord"><span class="mord mathnormal">u</span></span><span class="mord">∃</span><span class="mord"><span class="mord mathnormal">t</span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord mathnormal">u</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">u</span><span class="mopen">[</span><span class="mord">3</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.09618em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">a</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">u</span><span class="mopen">[</span><span class="mord">2</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">a</span><span class="mopen">[</span><span class="mord">3</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">e</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">t</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">u</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span><span class="mclose">)</span><span class="mclose">}</span></span></span></span></span></p>
<p>(4)</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo stretchy="false">{</mo><mi>t</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∃</mi><mi>a</mi><mi mathvariant="normal">∃</mi><mi>b</mi><mi mathvariant="normal">∃</mi><mi>c</mi><mo stretchy="false">(</mo><mi mathvariant="normal">¬</mi><mo stretchy="false">(</mo><mi>S</mi><mi>P</mi><mi>J</mi><mo stretchy="false">(</mo><mi>a</mi><mo stretchy="false">)</mo><mo>∧</mo><mi>S</mi><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">)</mo><mo>∧</mo><mi>P</mi><mo stretchy="false">(</mo><mi>c</mi><mo stretchy="false">)</mo><mo>∧</mo><mi>b</mi><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo><mo>=</mo><mi>a</mi><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo><mo>∧</mo><mi>b</mi><mo stretchy="false">[</mo><mn>4</mn><mo stretchy="false">]</mo><mo>=</mo><mtext>天津</mtext><mo>∧</mo><mi>c</mi><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo><mo>=</mo><mi>a</mi><mo stretchy="false">[</mo><mn>2</mn><mo stretchy="false">]</mo><mo>∧</mo><mi>c</mi><mo stretchy="false">[</mo><mn>3</mn><mo stretchy="false">]</mo><mo>=</mo><mi>r</mi><mi>e</mi><mi>d</mi><mo stretchy="false">)</mo><mo>∧</mo><mi>t</mi><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo><mo>=</mo><mi>a</mi><mo stretchy="false">[</mo><mn>3</mn><mo stretchy="false">]</mo><mo stretchy="false">)</mo><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{t\vert\exist{a}\exist{b}\exist{c}(\lnot(SPJ(a)\land S(b)\land P(c)\land b[1]=a[1]\land b[4]=天津\land c[1]=a[2]\land c[3]=red)\land t[1]=a[3]) \}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal">t</span><span class="mord">∣</span><span class="mord">∃</span><span class="mord"><span class="mord mathnormal">a</span></span><span class="mord">∃</span><span class="mord"><span class="mord mathnormal">b</span></span><span class="mord">∃</span><span class="mord"><span class="mord mathnormal">c</span></span><span class="mopen">(</span><span class="mord">¬</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mopen">(</span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">c</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">b</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">a</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">b</span><span class="mopen">[</span><span class="mord">4</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">天</span><span class="mord cjk_fallback">津</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">c</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">a</span><span class="mopen">[</span><span class="mord">2</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">c</span><span class="mopen">[</span><span class="mord">3</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">e</span><span class="mord mathnormal">d</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">t</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">a</span><span class="mopen">[</span><span class="mord">3</span><span class="mclose">]</span><span class="mclose">)</span><span class="mclose">}</span></span></span></span></span></p>
<p>(5)</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo stretchy="false">{</mo><mi>t</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∃</mi><mi>a</mi><mo stretchy="false">(</mo><mi>S</mi><mi>P</mi><mi>J</mi><mo stretchy="false">(</mo><mi>a</mi><mo stretchy="false">)</mo><mo>∧</mo><mi mathvariant="normal">∀</mi><mi>b</mi><mo stretchy="false">(</mo><mi>S</mi><mi>P</mi><mi>J</mi><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">)</mo><mo>→</mo><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo><mo>=</mo><msub><mi>S</mi><mn>1</mn></msub><mo>→</mo><mi mathvariant="normal">∃</mi><mi>c</mi><mo stretchy="false">(</mo><mi>S</mi><mi>P</mi><mi>J</mi><mo stretchy="false">(</mo><mi>c</mi><mo stretchy="false">)</mo><mo>∧</mo><mi>a</mi><mo stretchy="false">[</mo><mn>3</mn><mo stretchy="false">]</mo><mo>=</mo><mi>c</mi><mo stretchy="false">[</mo><mn>3</mn><mo stretchy="false">]</mo><mo>∧</mo><mi>c</mi><mo stretchy="false">[</mo><mn>2</mn><mo stretchy="false">]</mo><mo>=</mo><mi>b</mi><mo stretchy="false">[</mo><mn>2</mn><mo stretchy="false">]</mo><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>∧</mo><mi>t</mi><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo><mo>=</mo><mi>a</mi><mo stretchy="false">[</mo><mn>3</mn><mo stretchy="false">]</mo><mo stretchy="false">)</mo><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{t\vert\exist{a}( SPJ(a)\land \forall b(SPJ(b)\rightarrow(b[1]=S_1\rightarrow\exist c(SPJ(c)\land a[3]=c[3]\land c[2]=b[2])))\land t[1]=a[3])\}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal">t</span><span class="mord">∣</span><span class="mord">∃</span><span class="mord"><span class="mord mathnormal">a</span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∀</span><span class="mord mathnormal">b</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">b</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∃</span><span class="mord mathnormal">c</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord mathnormal">c</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">a</span><span class="mopen">[</span><span class="mord">3</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">c</span><span class="mopen">[</span><span class="mord">3</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">c</span><span class="mopen">[</span><span class="mord">2</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">b</span><span class="mopen">[</span><span class="mord">2</span><span class="mclose">]</span><span class="mclose">)</span><span class="mclose">)</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">t</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">a</span><span class="mopen">[</span><span class="mord">3</span><span class="mclose">]</span><span class="mclose">)</span><span class="mclose">}</span></span></span></span></span></p>
<h1 id="第三章"><a class="markdownIt-Anchor" href="#第三章"></a> 第三章</h1>
<h2 id="1-2"><a class="markdownIt-Anchor" href="#1-2"></a> 1、</h2>
<p><img src="/2022/10/11/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BD%9C%E4%B8%9A%E7%AD%94%E6%A1%88%EF%BC%88%E6%9B%B4%E6%96%B0%E4%B8%AD%EF%BC%89/image-20221114192855287.png" alt="第一题"></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> S(<br>Sno <span class="hljs-type">int</span> <span class="hljs-keyword">primary</span> key,<br>Sname <span class="hljs-type">char</span>(<span class="hljs-number">10</span>),<br>Sstatus <span class="hljs-type">char</span>(<span class="hljs-number">10</span>),<br>City <span class="hljs-type">char</span>(<span class="hljs-number">10</span>)<br>);<br><br><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> P(<br>	Pno <span class="hljs-type">int</span> <span class="hljs-keyword">primary</span> key,<br>    Pname <span class="hljs-type">char</span>(<span class="hljs-number">10</span>),<br>    Color <span class="hljs-type">char</span>(<span class="hljs-number">5</span>),<br>    weight <span class="hljs-type">int</span><br>);<br><br><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> J(<br>	Jno <span class="hljs-type">int</span> <span class="hljs-keyword">primary</span> key,<br>    Jname <span class="hljs-type">char</span>(<span class="hljs-number">10</span>),<br>    city <span class="hljs-type">char</span>(<span class="hljs-number">10</span>)<br>);<br><br><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> spj(<br>    sno <span class="hljs-type">int</span>,<br>    pno <span class="hljs-type">int</span>,<br>    jno <span class="hljs-type">int</span>,<br>    qty <span class="hljs-type">int</span>,<br>	<span class="hljs-keyword">foreign</span> key (sno) <span class="hljs-keyword">references</span> S(Sno) <span class="hljs-keyword">on</span> update cascade <span class="hljs-keyword">on</span> <span class="hljs-keyword">delete</span> cascade,<br>    <span class="hljs-keyword">foreign</span> key (pno) <span class="hljs-keyword">references</span> P(Pno) <span class="hljs-keyword">on</span> update cascade <span class="hljs-keyword">on</span> <span class="hljs-keyword">delete</span> cascade,<br>    <span class="hljs-keyword">foreign</span> key (jno) <span class="hljs-keyword">references</span> J(jno) <span class="hljs-keyword">on</span> update cascade <span class="hljs-keyword">on</span> <span class="hljs-keyword">delete</span> cascade,<br>    <span class="hljs-keyword">primary</span> key (sno,pno,jno)<br>);<br></code></pre></td></tr></table></figure>
<h2 id="2-2"><a class="markdownIt-Anchor" href="#2-2"></a> 2、</h2>
<p><img src="/2022/10/11/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BD%9C%E4%B8%9A%E7%AD%94%E6%A1%88%EF%BC%88%E6%9B%B4%E6%96%B0%E4%B8%AD%EF%BC%89/image-20221114192956495.png" alt="第二题"></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- 1</span><br><span class="hljs-keyword">select</span> <span class="hljs-keyword">distinct</span> sno <span class="hljs-keyword">from</span> spj <span class="hljs-keyword">where</span> jno<span class="hljs-operator">=</span>J1;<br><span class="hljs-comment">-- 2</span><br><span class="hljs-keyword">select</span> <span class="hljs-keyword">distinct</span> sno <span class="hljs-keyword">from</span> spj <span class="hljs-keyword">where</span> jno<span class="hljs-operator">=</span>j1 <span class="hljs-keyword">and</span> pno<span class="hljs-operator">=</span>p1;<br><span class="hljs-comment">-- 3</span><br><span class="hljs-keyword">select</span> sno <span class="hljs-keyword">from</span> spj,p <span class="hljs-keyword">where</span> jno<span class="hljs-operator">=</span><span class="hljs-number">32</span> <span class="hljs-keyword">and</span> p.pno<span class="hljs-operator">=</span>spj.pno <span class="hljs-keyword">and</span> color<span class="hljs-operator">=</span><span class="hljs-string">&#x27;red&#x27;</span>;<br><span class="hljs-comment">-- 4</span><br><span class="hljs-keyword">select</span> jno <span class="hljs-keyword">from</span> j <span class="hljs-keyword">where</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">exists</span> (<br>	<span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> s,p,spj <span class="hljs-keyword">where</span> s.sno<span class="hljs-operator">=</span>spj.sno <span class="hljs-keyword">and</span> p.pno<span class="hljs-operator">=</span>spj.pno <span class="hljs-keyword">and</span> j.jno<span class="hljs-operator">=</span>spj.jno <span class="hljs-keyword">and</span> color<span class="hljs-operator">=</span><span class="hljs-string">&#x27;red&#x27;</span> <span class="hljs-keyword">and</span> s.City<span class="hljs-operator">=</span><span class="hljs-string">&#x27;天津&#x27;</span> <br>);<br><span class="hljs-comment">-- 5</span><br><span class="hljs-keyword">select</span> <span class="hljs-keyword">distinct</span> jno <span class="hljs-keyword">from</span> spj t1 <span class="hljs-keyword">where</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">exists</span> (<br>	<span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> spj t2 <span class="hljs-keyword">where</span> t2.sno<span class="hljs-operator">=</span>s1 <span class="hljs-keyword">and</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">exists</span> (<br>		<span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> spj t3 <span class="hljs-keyword">where</span> t3.jno<span class="hljs-operator">=</span>t1.jno <span class="hljs-keyword">and</span> t3.pno<span class="hljs-operator">=</span>t2.pno<br>    )<br>)<br><br></code></pre></td></tr></table></figure>
<h2 id="3-2"><a class="markdownIt-Anchor" href="#3-2"></a> 3、</h2>
<p><img src="/2022/10/11/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BD%9C%E4%B8%9A%E7%AD%94%E6%A1%88%EF%BC%88%E6%9B%B4%E6%96%B0%E4%B8%AD%EF%BC%89/image-20221114193003675.png" alt="第三题"></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- 1</span><br><span class="hljs-keyword">select</span> sname,city <span class="hljs-keyword">from</span> s;<br><span class="hljs-comment">-- 2</span><br><span class="hljs-keyword">select</span> pname,color,weight <span class="hljs-keyword">from</span> p;<br><span class="hljs-comment">-- 3</span><br><span class="hljs-keyword">select</span> <span class="hljs-keyword">distinct</span> jno <span class="hljs-keyword">from</span> spj <span class="hljs-keyword">where</span> sno<span class="hljs-operator">=</span>S1;<br><span class="hljs-comment">-- 4</span><br><span class="hljs-keyword">select</span> pname,qty <span class="hljs-keyword">from</span> spj,p <span class="hljs-keyword">where</span> p.pno<span class="hljs-operator">=</span>spj.pno <span class="hljs-keyword">and</span> jno<span class="hljs-operator">=</span>J2;<br><span class="hljs-comment">-- 5</span><br><span class="hljs-keyword">select</span> <span class="hljs-keyword">distinct</span> pno <span class="hljs-keyword">from</span> spj,s <span class="hljs-keyword">where</span> s.City<span class="hljs-operator">=</span><span class="hljs-string">&#x27;上海&#x27;</span> <span class="hljs-keyword">and</span> s.sno<span class="hljs-operator">=</span>spj.sno;<br><span class="hljs-comment">-- 6</span><br><span class="hljs-keyword">select</span> <span class="hljs-keyword">distinct</span> jname <span class="hljs-keyword">from</span> j,spj,s <span class="hljs-keyword">where</span> s.City<span class="hljs-operator">=</span><span class="hljs-string">&#x27;上海&#x27;</span> <span class="hljs-keyword">and</span> spj.sno<span class="hljs-operator">=</span>s.Sno <span class="hljs-keyword">and</span> j.jno<span class="hljs-operator">=</span>spj.jno;<br><span class="hljs-comment">-- 7</span><br><span class="hljs-keyword">select</span> <span class="hljs-keyword">distinct</span> jno <span class="hljs-keyword">from</span> spj <span class="hljs-keyword">where</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">exists</span>(<br>	<span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> s <span class="hljs-keyword">where</span> spj.sno<span class="hljs-operator">=</span>s.sno <span class="hljs-keyword">and</span> s.city<span class="hljs-operator">=</span><span class="hljs-string">&#x27;天津&#x27;</span><br>);<br><span class="hljs-comment">-- 8</span><br>update p <span class="hljs-keyword">set</span> color<span class="hljs-operator">=</span><span class="hljs-string">&#x27;blue&#x27;</span> <span class="hljs-keyword">where</span> color<span class="hljs-operator">=</span><span class="hljs-string">&#x27;red&#x27;</span>;<br><span class="hljs-comment">-- 9</span><br>update s <span class="hljs-keyword">set</span> sno<span class="hljs-operator">=</span>S3 <span class="hljs-keyword">where</span> sno <span class="hljs-keyword">in</span>(<br>	<span class="hljs-keyword">select</span> sno <span class="hljs-keyword">from</span> spj <span class="hljs-keyword">where</span> sno<span class="hljs-operator">=</span>S5 <span class="hljs-keyword">and</span> jno<span class="hljs-operator">=</span>J4 <span class="hljs-keyword">and</span> pno<span class="hljs-operator">=</span>p6<br>);<br><span class="hljs-comment">-- 10</span><br><span class="hljs-keyword">delete</span> <span class="hljs-keyword">from</span> s <span class="hljs-keyword">where</span> sno<span class="hljs-operator">=</span>S2;<br><span class="hljs-comment">-- 11</span><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> spj <span class="hljs-keyword">values</span> (S2,J6,P4,<span class="hljs-number">200</span>);<br></code></pre></td></tr></table></figure>
<h2 id="4-2"><a class="markdownIt-Anchor" href="#4-2"></a> 4、</h2>
<p><img src="/2022/10/11/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BD%9C%E4%B8%9A%E7%AD%94%E6%A1%88%EF%BC%88%E6%9B%B4%E6%96%B0%E4%B8%AD%EF%BC%89/image-20221114193027757.png" alt="第四题"></p>
<pre class="highlight"><code class="sql"><span class="hljs-comment">--</span>
<span class="hljs-keyword">create</span> <span class="hljs-keyword">view</span> myview (sno,pno,qty) <span class="hljs-keyword">as</span>
(
	<span class="hljs-keyword">select</span> sno,p.pno,qty <span class="hljs-keyword">from</span> spj,p <span class="hljs-keyword">where</span> s.pno<span class="hljs-operator">=</span>spj.pno <span class="hljs-keyword">and</span> jname<span class="hljs-operator">=</span><span class="hljs-string">&#x27;三建工程&#x27;</span>
);
<span class="hljs-comment">-- (1)</span>
<span class="hljs-keyword">select</span> pno,<span class="hljs-built_in">sum</span>(qty) <span class="hljs-keyword">from</span> myview  <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> pno;
<span class="hljs-comment">-- (2)</span>
<span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> myview <span class="hljs-keyword">where</span> sno<span class="hljs-operator">=</span>S1;
</code></pre>
]]></content>
      <categories>
        <category>课内</category>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>课内</tag>
        <tag>数据库</tag>
      </tags>
  </entry>
  <entry>
    <title>数据库作业答案（转载自解凯华）</title>
    <url>/2022/10/12/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BD%9C%E4%B8%9A%E7%AD%94%E6%A1%88%EF%BC%88%E8%BD%AC%E8%BD%BD%E8%87%AA%E8%A7%A3%E5%87%AF%E5%8D%8E%EF%BC%89/</url>
    <content><![CDATA[<h1 id="2"><a class="markdownIt-Anchor" href="#2"></a> 2</h1>
<!-- ![第一题](https://p.ananas.chaoxing.com/star3/origin/a1e6d57ebf0f9b4d6f44ea242aeabd61.png) -->
<h2 id="21"><a class="markdownIt-Anchor" href="#21"></a> 2.1</h2>
<p>已知关系R、W、D如下所示：</p>
<ul>
<li>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi></mrow><annotation encoding="application/x-tex">R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span></p>
<table>
<thead>
<tr>
<th>P</th>
<th>Q</th>
<th>T</th>
<th>Y</th>
</tr>
</thead>
<tbody>
<tr>
<td>2</td>
<td>b</td>
<td>c</td>
<td>d</td>
</tr>
<tr>
<td>9</td>
<td>a</td>
<td>e</td>
<td>f</td>
</tr>
<tr>
<td>2</td>
<td>b</td>
<td>e</td>
<td>f</td>
</tr>
<tr>
<td>9</td>
<td>a</td>
<td>d</td>
<td>e</td>
</tr>
<tr>
<td>7</td>
<td>g</td>
<td>e</td>
<td>f</td>
</tr>
<tr>
<td>7</td>
<td>g</td>
<td>c</td>
<td>d</td>
</tr>
</tbody>
</table>
</li>
<li>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>W</mi></mrow><annotation encoding="application/x-tex">W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span></span></span></p>
<table>
<thead>
<tr>
<th>T</th>
<th>Y</th>
<th>B</th>
</tr>
</thead>
<tbody>
<tr>
<td>c</td>
<td>d</td>
<td>m</td>
</tr>
<tr>
<td>c</td>
<td>d</td>
<td>n</td>
</tr>
<tr>
<td>d</td>
<td>f</td>
<td>n</td>
</tr>
</tbody>
</table>
</li>
<li>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span></span></p>
<table>
<thead>
<tr>
<th>T</th>
<th>Y</th>
</tr>
</thead>
<tbody>
<tr>
<td>c</td>
<td>d</td>
</tr>
<tr>
<td>e</td>
<td>f</td>
</tr>
</tbody>
</table>
</li>
</ul>
<p>给出下列运算的结果：</p>
<ol>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>R</mi><mn>1</mn></msub><mo>=</mo><msub><mi>π</mi><mrow><mi mathvariant="normal">Y</mi><mo separator="true">,</mo><mi mathvariant="normal">T</mi></mrow></msub><mo stretchy="false">(</mo><mi>R</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">R_1 =\pi_{\mathrm{Y,T}}(R)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight" style="margin-right:0.025em;">Y</span><span class="mpunct mtight">,</span><span class="mord mathrm mtight">T</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>R</mi><mn>2</mn></msub><mo>=</mo><msub><mi>σ</mi><mrow><mi mathvariant="normal">P</mi><mo>&gt;</mo><mn>5</mn><mo>∧</mo><mi mathvariant="normal">T</mi><mo>=</mo><mtext>‘</mtext><mi mathvariant="normal">e</mi><mtext>’</mtext></mrow></msub><mo stretchy="false">(</mo><mi>R</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">R_2=\sigma_{\mathrm{P&gt;5\wedge T=‘e’}}(R)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999985em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">P</span><span class="mrel mtight">&gt;</span><span class="mord mathrm mtight">5</span><span class="mbin mtight">∧</span><span class="mord mathrm mtight">T</span><span class="mrel mtight">=</span><span class="mord mathrm mtight">‘</span><span class="mord mathrm mtight">e</span><span class="mord mathrm mtight">’</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.17737em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>R</mi><mn>3</mn></msub><mo>=</mo><mi>R</mi><mo>⋈</mo><mi>W</mi></mrow><annotation encoding="application/x-tex">R_3=R\Join W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68833em;vertical-align:-0.005em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⋈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>R</mi><mn>4</mn></msub><mo>=</mo><msub><mi>π</mi><mrow><mn>2</mn><mo separator="true">,</mo><mn>1</mn><mo separator="true">,</mo><mn>6</mn></mrow></msub><mo stretchy="false">(</mo><msub><mi>σ</mi><mrow><mn>3</mn><mo>&lt;</mo><mn>5</mn></mrow></msub><mo stretchy="false">(</mo><mi>R</mi><mo>×</mo><mi>D</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">R_4=\pi_{2,1,6}(\sigma_{3&lt;5}(R\times D))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mpunct mtight">,</span><span class="mord mtight">1</span><span class="mpunct mtight">,</span><span class="mord mtight">6</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mrel mtight">&lt;</span><span class="mord mtight">5</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.17737em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>R</mi><mn>5</mn></msub><mo>=</mo><mi>R</mi><mo>÷</mo><mi>D</mi></mrow><annotation encoding="application/x-tex">R_5=R\div D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">÷</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span></span></li>
</ol>
<p>结果：</p>
<ol>
<li>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>R</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">R_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p>
<table>
<thead>
<tr>
<th>Y</th>
<th>T</th>
</tr>
</thead>
<tbody>
<tr>
<td>d</td>
<td>c</td>
</tr>
<tr>
<td>f</td>
<td>e</td>
</tr>
<tr>
<td>e</td>
<td>d</td>
</tr>
</tbody>
</table>
</li>
<li>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>R</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">R_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p>
<table>
<thead>
<tr>
<th>P</th>
<th>Q</th>
<th>T</th>
<th>Y</th>
</tr>
</thead>
<tbody>
<tr>
<td>9</td>
<td>a</td>
<td>e</td>
<td>f</td>
</tr>
<tr>
<td>7</td>
<td>g</td>
<td>e</td>
<td>f</td>
</tr>
</tbody>
</table>
</li>
<li>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>R</mi><mn>3</mn></msub></mrow><annotation encoding="application/x-tex">R_3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p>
<table>
<thead>
<tr>
<th>P</th>
<th>Q</th>
<th>T</th>
<th>Y</th>
<th>B</th>
</tr>
</thead>
<tbody>
<tr>
<td>2</td>
<td>b</td>
<td>c</td>
<td>d</td>
<td>m</td>
</tr>
<tr>
<td>2</td>
<td>b</td>
<td>c</td>
<td>d</td>
<td>n</td>
</tr>
<tr>
<td>7</td>
<td>g</td>
<td>c</td>
<td>d</td>
<td>m</td>
</tr>
<tr>
<td>7</td>
<td>g</td>
<td>c</td>
<td>d</td>
<td>n</td>
</tr>
</tbody>
</table>
</li>
<li>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>R</mi><mn>4</mn></msub></mrow><annotation encoding="application/x-tex">R_4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p>
<table>
<thead>
<tr>
<th>Q</th>
<th>P</th>
<th>Y’</th>
</tr>
</thead>
<tbody>
<tr>
<td>b</td>
<td>2</td>
<td>f</td>
</tr>
<tr>
<td>a</td>
<td>9</td>
<td>f</td>
</tr>
<tr>
<td>g</td>
<td>7</td>
<td>f</td>
</tr>
</tbody>
</table>
</li>
<li>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>R</mi><mn>5</mn></msub></mrow><annotation encoding="application/x-tex">R_5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p>
<table>
<thead>
<tr>
<th>P</th>
<th>Q</th>
</tr>
</thead>
<tbody>
<tr>
<td>2</td>
<td>b</td>
</tr>
<tr>
<td>7</td>
<td>g</td>
</tr>
</tbody>
</table>
</li>
</ol>
<h2 id="22"><a class="markdownIt-Anchor" href="#22"></a> 2.2</h2>
<p>题目描述见课本P70问题6，使用关系代数和元组演算完成</p>
<p>答：</p>
<ol>
<li>题目(1)
<ul>
<li>关系代数<br>
<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>π</mi><mrow><mi mathvariant="normal">S</mi><mi mathvariant="normal">N</mi><mi mathvariant="normal">O</mi></mrow></msub><mo stretchy="false">(</mo><msub><mi>σ</mi><mrow><mi mathvariant="normal">J</mi><mi mathvariant="normal">N</mi><mi mathvariant="normal">O</mi><mo>=</mo><mtext>‘</mtext><mi mathvariant="normal">J</mi><mn>1</mn><mtext>’</mtext></mrow></msub><mo stretchy="false">(</mo><mi>S</mi><mi>P</mi><mi>J</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\pi_\mathrm{SNO}(
    \sigma_
    \mathrm{JNO=‘J1’}(SPJ)
)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathrm mtight">S</span><span class="mord mathrm mtight">N</span><span class="mord mathrm mtight">O</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathrm mtight">J</span><span class="mord mathrm mtight">N</span><span class="mord mathrm mtight">O</span><span class="mrel mtight">=</span><span class="mord mathrm mtight">‘</span><span class="mord mathrm mtight">J</span><span class="mord mathrm mtight">1</span><span class="mord mathrm mtight">’</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></li>
<li>元组演算<br>
<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><mi>t</mi><mtext> </mtext><mi mathvariant="normal">∣</mi><mtext> </mtext><mi mathvariant="normal">∃</mi><mi>u</mi><mo stretchy="false">(</mo><mi>S</mi><mi>P</mi><mi>J</mi><mo stretchy="false">(</mo><mi>u</mi><mo stretchy="false">)</mo><mo>∧</mo><mi>u</mi><mo stretchy="false">[</mo><mn>3</mn><mo stretchy="false">]</mo><mo>=</mo><mrow><mtext>‘</mtext><mi mathvariant="normal">J</mi><mn>1</mn><mtext>’</mtext></mrow><mo>∧</mo><mi>t</mi><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo><mo>=</mo><mi>u</mi><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">)</mo><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\lbrace t\space|\space\exist u(
    SPJ(u)\wedge
    u[3]=\mathrm{‘J1’}\wedge
    t[1]=u[1]
)\rbrace</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal">t</span><span class="mspace"> </span><span class="mord">∣</span><span class="mspace"> </span><span class="mord">∃</span><span class="mord mathnormal">u</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord mathnormal">u</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">u</span><span class="mopen">[</span><span class="mord">3</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathrm">‘</span><span class="mord mathrm">J</span><span class="mord mathrm">1</span><span class="mord mathrm">’</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">t</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">u</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span><span class="mclose">)</span><span class="mclose">}</span></span></span></span></li>
</ul>
</li>
<li>题目(2)
<ul>
<li>关系代数<br>
<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>π</mi><mrow><mi mathvariant="normal">S</mi><mi mathvariant="normal">N</mi><mi mathvariant="normal">O</mi></mrow></msub><mo stretchy="false">(</mo><msub><mi>σ</mi><mrow><mi mathvariant="normal">J</mi><mi mathvariant="normal">N</mi><mi mathvariant="normal">O</mi><mo>=</mo><mtext>‘</mtext><mi mathvariant="normal">J</mi><mn>1</mn><mtext>’</mtext><mo>∧</mo><mi mathvariant="normal">P</mi><mi mathvariant="normal">N</mi><mi mathvariant="normal">O</mi><mo>=</mo><mtext>‘</mtext><mi mathvariant="normal">P</mi><mn>1</mn><mtext>’</mtext></mrow></msub><mo stretchy="false">(</mo><mi>S</mi><mi>P</mi><mi>J</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\pi_\mathrm{SNO}(
    \sigma_
    \mathrm{
        JNO=‘J1’\wedge PNO=‘P1’
    }(SPJ)
)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathrm mtight">S</span><span class="mord mathrm mtight">N</span><span class="mord mathrm mtight">O</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathrm mtight">J</span><span class="mord mathrm mtight">N</span><span class="mord mathrm mtight">O</span><span class="mrel mtight">=</span><span class="mord mathrm mtight">‘</span><span class="mord mathrm mtight">J</span><span class="mord mathrm mtight">1</span><span class="mord mathrm mtight">’</span><span class="mbin mtight">∧</span><span class="mord mathrm mtight">P</span><span class="mord mathrm mtight">N</span><span class="mord mathrm mtight">O</span><span class="mrel mtight">=</span><span class="mord mathrm mtight">‘</span><span class="mord mathrm mtight">P</span><span class="mord mathrm mtight">1</span><span class="mord mathrm mtight">’</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></li>
<li>元组演算<br>
<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><mi>t</mi><mtext> </mtext><mi mathvariant="normal">∣</mi><mtext> </mtext><mi mathvariant="normal">∃</mi><mi>u</mi><mo stretchy="false">(</mo><mi>S</mi><mi>P</mi><mi>J</mi><mo stretchy="false">(</mo><mi>u</mi><mo stretchy="false">)</mo><mo>∧</mo><mi>u</mi><mo stretchy="false">[</mo><mn>3</mn><mo stretchy="false">]</mo><mo>=</mo><mrow><mtext>‘</mtext><mi mathvariant="normal">J</mi><mn>1</mn><mtext>’</mtext></mrow><mo>∧</mo><mi>u</mi><mo stretchy="false">[</mo><mn>2</mn><mo stretchy="false">]</mo><mo>=</mo><mrow><mtext>‘</mtext><mi mathvariant="normal">P</mi><mn>1</mn><mtext>’</mtext></mrow><mo>∧</mo><mi>t</mi><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo><mo>=</mo><mi>u</mi><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">)</mo><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\lbrace t\space|\space\exist u(
    SPJ(u)\wedge
    u[3]=\mathrm{‘J1’}\wedge
    u[2]=\mathrm{‘P1’}\wedge
    t[1]=u[1]
)\rbrace</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal">t</span><span class="mspace"> </span><span class="mord">∣</span><span class="mspace"> </span><span class="mord">∃</span><span class="mord mathnormal">u</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord mathnormal">u</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">u</span><span class="mopen">[</span><span class="mord">3</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathrm">‘</span><span class="mord mathrm">J</span><span class="mord mathrm">1</span><span class="mord mathrm">’</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">u</span><span class="mopen">[</span><span class="mord">2</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathrm">‘</span><span class="mord mathrm">P</span><span class="mord mathrm">1</span><span class="mord mathrm">’</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">t</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">u</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span><span class="mclose">)</span><span class="mclose">}</span></span></span></span></li>
</ul>
</li>
<li>题目(3)
<ul>
<li>关系代数<br>
<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>π</mi><mrow><mi mathvariant="normal">S</mi><mi mathvariant="normal">N</mi><mi mathvariant="normal">O</mi></mrow></msub><mo stretchy="false">(</mo><msub><mi>σ</mi><mrow><mi mathvariant="normal">J</mi><mi mathvariant="normal">N</mi><mi mathvariant="normal">O</mi><mo>=</mo><mtext>‘</mtext><mi mathvariant="normal">J</mi><mn>1</mn><mtext>’</mtext></mrow></msub><mo stretchy="false">(</mo><mi>S</mi><mi>P</mi><mi>J</mi><mo stretchy="false">)</mo><mo>⋈</mo><msub><mi>σ</mi><mrow><mi mathvariant="normal">C</mi><mi mathvariant="normal">O</mi><mi mathvariant="normal">L</mi><mi mathvariant="normal">O</mi><mi mathvariant="normal">R</mi><mo>=</mo><mtext>‘红’</mtext></mrow></msub><mo stretchy="false">(</mo><mi>P</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\pi_\mathrm{SNO}(
    \sigma_\mathrm{JNO=‘J1’}(SPJ)
    \Join 
    \sigma_\mathrm{COLOR=‘红’}(P)
)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathrm mtight">S</span><span class="mord mathrm mtight">N</span><span class="mord mathrm mtight">O</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathrm mtight">J</span><span class="mord mathrm mtight">N</span><span class="mord mathrm mtight">O</span><span class="mrel mtight">=</span><span class="mord mathrm mtight">‘</span><span class="mord mathrm mtight">J</span><span class="mord mathrm mtight">1</span><span class="mord mathrm mtight">’</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⋈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathrm mtight">C</span><span class="mord mathrm mtight">O</span><span class="mord mathrm mtight">L</span><span class="mord mathrm mtight">O</span><span class="mord mathrm mtight">R</span><span class="mrel mtight">=</span><span class="mord mathrm mtight">‘</span><span class="mord mathrm cjk_fallback mtight">红</span><span class="mord mathrm mtight">’</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></li>
<li>元组演算<br>
<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><mi>t</mi><mtext> </mtext><mi mathvariant="normal">∣</mi><mtext> </mtext><mi mathvariant="normal">∃</mi><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">(</mo><mi>S</mi><mi>P</mi><mi>J</mi><mo stretchy="false">(</mo><mi>u</mi><mo stretchy="false">)</mo><mo>∧</mo><mi>P</mi><mo stretchy="false">(</mo><mi>v</mi><mo stretchy="false">)</mo><mo>∧</mo><mi>u</mi><mo stretchy="false">[</mo><mn>3</mn><mo stretchy="false">]</mo><mo>=</mo><mrow><mtext>‘</mtext><mi mathvariant="normal">J</mi><mn>1</mn><mtext>’</mtext></mrow><mo>∧</mo><mi>v</mi><mo stretchy="false">[</mo><mn>3</mn><mo stretchy="false">]</mo><mo>=</mo><mtext>‘红’</mtext><mo>∧</mo><mi>u</mi><mo stretchy="false">[</mo><mn>2</mn><mo stretchy="false">]</mo><mo>=</mo><mi>v</mi><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo><mo>∧</mo><mi>t</mi><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo><mo>=</mo><mi>u</mi><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">)</mo><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\lbrace t \space|\space \exist u,v(
    SPJ(u)\wedge
    P(v)\wedge
    u[3]=\mathrm{‘J1’}\wedge
    v[3]=\mathrm{‘红’}\wedge
    u[2]=v[1]\wedge
    t[1]=u[1]
)
\rbrace</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal">t</span><span class="mspace"> </span><span class="mord">∣</span><span class="mspace"> </span><span class="mord">∃</span><span class="mord mathnormal">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord mathnormal">u</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">u</span><span class="mopen">[</span><span class="mord">3</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathrm">‘</span><span class="mord mathrm">J</span><span class="mord mathrm">1</span><span class="mord mathrm">’</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mopen">[</span><span class="mord">3</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathrm">‘</span><span class="mord mathrm cjk_fallback">红</span><span class="mord mathrm">’</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">u</span><span class="mopen">[</span><span class="mord">2</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">t</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">u</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span><span class="mclose">)</span><span class="mclose">}</span></span></span></span></li>
</ul>
</li>
<li>题目(4)
<ul>
<li>关系代数<br>
<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>π</mi><mrow><mi mathvariant="normal">J</mi><mi mathvariant="normal">N</mi><mi mathvariant="normal">O</mi></mrow></msub><mo stretchy="false">(</mo><msub><mi>σ</mi><mrow><mi mathvariant="normal">¬</mi><mo stretchy="false">(</mo><mi mathvariant="normal">C</mi><mi mathvariant="normal">I</mi><mi mathvariant="normal">T</mi><mi mathvariant="normal">Y</mi><mo>=</mo><mtext>‘天津’</mtext><mo>∧</mo><mi mathvariant="normal">C</mi><mi mathvariant="normal">O</mi><mi mathvariant="normal">L</mi><mi mathvariant="normal">O</mi><mi mathvariant="normal">R</mi><mo>=</mo><mtext>‘红’</mtext><mo stretchy="false">)</mo></mrow></msub><mo stretchy="false">(</mo><mi>S</mi><mi>P</mi><mi>J</mi><mo>⋈</mo><mi>P</mi><mo>⋈</mo><mi>S</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\pi_\mathrm{JNO}(
    \sigma_\mathrm{
        \neg (
            CITY=‘天津’\wedge
            COLOR=‘红’
        )
    }(SPJ \Join P \Join S)
)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1052em;vertical-align:-0.3551999999999999em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathrm mtight">J</span><span class="mord mathrm mtight">N</span><span class="mord mathrm mtight">O</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathrm mtight">¬</span><span class="mopen mtight">(</span><span class="mord mathrm mtight">C</span><span class="mord mathrm mtight">I</span><span class="mord mathrm mtight">T</span><span class="mord mathrm mtight" style="margin-right:0.025em;">Y</span><span class="mrel mtight">=</span><span class="mord mathrm mtight">‘</span><span class="mord mathrm cjk_fallback mtight">天</span><span class="mord mathrm cjk_fallback mtight">津</span><span class="mord mathrm mtight">’</span><span class="mbin mtight">∧</span><span class="mord mathrm mtight">C</span><span class="mord mathrm mtight">O</span><span class="mord mathrm mtight">L</span><span class="mord mathrm mtight">O</span><span class="mord mathrm mtight">R</span><span class="mrel mtight">=</span><span class="mord mathrm mtight">‘</span><span class="mord mathrm cjk_fallback mtight">红</span><span class="mord mathrm mtight">’</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⋈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68833em;vertical-align:-0.005em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⋈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></li>
<li>元组演算<br>
<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><mi>t</mi><mtext> </mtext><mi mathvariant="normal">∣</mi><mtext> </mtext><mi mathvariant="normal">∃</mi><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo separator="true">,</mo><mi>w</mi><mo stretchy="false">(</mo><mi>S</mi><mi>P</mi><mi>J</mi><mo stretchy="false">(</mo><mi>u</mi><mo stretchy="false">)</mo><mo>∧</mo><mi>P</mi><mo stretchy="false">(</mo><mi>v</mi><mo stretchy="false">)</mo><mo>∧</mo><mi>S</mi><mo stretchy="false">(</mo><mi>w</mi><mo stretchy="false">)</mo><mo>∧</mo><mi mathvariant="normal">¬</mi><mo stretchy="false">(</mo><mi>w</mi><mo stretchy="false">[</mo><mn>4</mn><mo stretchy="false">]</mo><mo>=</mo><mtext>‘天津’</mtext><mo>∧</mo><mi>v</mi><mo stretchy="false">[</mo><mn>3</mn><mo stretchy="false">]</mo><mo>=</mo><mtext>‘红’</mtext><mo stretchy="false">)</mo><mo>∧</mo><mi>u</mi><mo stretchy="false">[</mo><mn>3</mn><mo stretchy="false">]</mo><mo>=</mo><mi>w</mi><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo><mo>∧</mo><mi>u</mi><mo stretchy="false">[</mo><mn>2</mn><mo stretchy="false">]</mo><mo>=</mo><mi>v</mi><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo><mo>∧</mo><mi>t</mi><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo><mo>=</mo><mi>u</mi><mo stretchy="false">[</mo><mn>3</mn><mo stretchy="false">]</mo><mo stretchy="false">)</mo><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\lbrace t \space|\space \exist u,v,w(
    SPJ(u)\wedge
    P(v)\wedge
    S(w)\wedge
    \neg (
        w[4]=‘天津’ \wedge
        v[3]=‘红’
    )\wedge
    u[3]=w[1]\wedge
    u[2]=v[1]\wedge
    t[1]=u[3]
)
\rbrace</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal">t</span><span class="mspace"> </span><span class="mord">∣</span><span class="mspace"> </span><span class="mord">∃</span><span class="mord mathnormal">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord mathnormal">u</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">¬</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mopen">[</span><span class="mord">4</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">‘</span><span class="mord cjk_fallback">天</span><span class="mord cjk_fallback">津</span><span class="mord">’</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mopen">[</span><span class="mord">3</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">‘</span><span class="mord cjk_fallback">红</span><span class="mord">’</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">u</span><span class="mopen">[</span><span class="mord">3</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">u</span><span class="mopen">[</span><span class="mord">2</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">t</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">u</span><span class="mopen">[</span><span class="mord">3</span><span class="mclose">]</span><span class="mclose">)</span><span class="mclose">}</span></span></span></span></li>
</ul>
</li>
<li>题目(5)
<ul>
<li>关系代数<br>
<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>π</mi><mrow><mi mathvariant="normal">S</mi><mi mathvariant="normal">N</mi><mi mathvariant="normal">O</mi><mo separator="true">,</mo><mi mathvariant="normal">P</mi><mi mathvariant="normal">N</mi><mi mathvariant="normal">O</mi><mo separator="true">,</mo><mi mathvariant="normal">J</mi><mi mathvariant="normal">N</mi><mi mathvariant="normal">O</mi></mrow></msub><mo stretchy="false">(</mo><mi>S</mi><mi>P</mi><mi>J</mi><mo stretchy="false">)</mo><mo>÷</mo><msub><mi>σ</mi><mrow><mi mathvariant="normal">S</mi><mi mathvariant="normal">N</mi><mi mathvariant="normal">O</mi><mo>=</mo><mtext>‘</mtext><mi mathvariant="normal">S</mi><mn>1</mn><mtext>’</mtext></mrow></msub><mo stretchy="false">(</mo><msub><mi>π</mi><mrow><mi mathvariant="normal">S</mi><mi mathvariant="normal">N</mi><mi mathvariant="normal">O</mi><mo separator="true">,</mo><mi mathvariant="normal">P</mi><mi mathvariant="normal">N</mi><mi mathvariant="normal">O</mi></mrow></msub><mo stretchy="false">(</mo><mi>S</mi><mi>P</mi><mi>J</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\pi_\mathrm{SNO,PNO,JNO}(SPJ) \div 
\sigma_\mathrm{
    SNO=‘S1’
}(\pi_\mathrm{
    SNO,PNO
}(SPJ)
)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathrm mtight">S</span><span class="mord mathrm mtight">N</span><span class="mord mathrm mtight">O</span><span class="mpunct mtight">,</span><span class="mord mathrm mtight">P</span><span class="mord mathrm mtight">N</span><span class="mord mathrm mtight">O</span><span class="mpunct mtight">,</span><span class="mord mathrm mtight">J</span><span class="mord mathrm mtight">N</span><span class="mord mathrm mtight">O</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">÷</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathrm mtight">S</span><span class="mord mathrm mtight">N</span><span class="mord mathrm mtight">O</span><span class="mrel mtight">=</span><span class="mord mathrm mtight">‘</span><span class="mord mathrm mtight">S</span><span class="mord mathrm mtight">1</span><span class="mord mathrm mtight">’</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathrm mtight">S</span><span class="mord mathrm mtight">N</span><span class="mord mathrm mtight">O</span><span class="mpunct mtight">,</span><span class="mord mathrm mtight">P</span><span class="mord mathrm mtight">N</span><span class="mord mathrm mtight">O</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></li>
<li>元组演算<br>
<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><mi>t</mi><mtext> </mtext><mi mathvariant="normal">∣</mi><mtext> </mtext><mi mathvariant="normal">∃</mi><mi>u</mi><mo stretchy="false">(</mo><mi>S</mi><mi>P</mi><mi>J</mi><mo stretchy="false">(</mo><mi>u</mi><mo stretchy="false">)</mo><mo>∧</mo><mi>t</mi><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo><mo>=</mo><mi>u</mi><mo stretchy="false">[</mo><mn>3</mn><mo stretchy="false">]</mo><mo>∧</mo><mo stretchy="false">(</mo><mi mathvariant="normal">∀</mi><mi>v</mi><mo stretchy="false">(</mo><mi>S</mi><mi>P</mi><mi>J</mi><mo stretchy="false">(</mo><mi>v</mi><mo stretchy="false">)</mo><mo>∧</mo><mo stretchy="false">(</mo><mi>v</mi><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo><mo>=</mo><mrow><mtext>‘</mtext><mi mathvariant="normal">S</mi><mn>1</mn><mtext>’</mtext></mrow><mo>→</mo><mo stretchy="false">(</mo><mi mathvariant="normal">∃</mi><mi>w</mi><mo stretchy="false">(</mo><mi>S</mi><mi>P</mi><mi>J</mi><mo stretchy="false">(</mo><mi>w</mi><mo stretchy="false">)</mo><mo>∧</mo><mi>w</mi><mo stretchy="false">[</mo><mn>3</mn><mo stretchy="false">]</mo><mo>=</mo><mi>u</mi><mo stretchy="false">[</mo><mn>3</mn><mo stretchy="false">]</mo><mo>∧</mo><mi>w</mi><mo stretchy="false">[</mo><mn>2</mn><mo stretchy="false">]</mo><mo>=</mo><mi>v</mi><mo stretchy="false">[</mo><mn>2</mn><mo stretchy="false">]</mo><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\lbrace t \space|\space \exist u(
    SPJ(u)\wedge
    t[1]=u[3]\wedge(
        \forall v (
            SPJ(v)\wedge(
                v[1]=\mathrm{‘S1’}\rightarrow (
                    \exist w(
                        SPJ(w)\wedge
                        w[3]=u[3]\wedge
                        w[2]=v[2]
                    )
                )
            )
        )
    )
)
\rbrace</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal">t</span><span class="mspace"> </span><span class="mord">∣</span><span class="mspace"> </span><span class="mord">∃</span><span class="mord mathnormal">u</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord mathnormal">u</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">t</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">u</span><span class="mopen">[</span><span class="mord">3</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">∀</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathrm">‘</span><span class="mord mathrm">S</span><span class="mord mathrm">1</span><span class="mord mathrm">’</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">∃</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mopen">[</span><span class="mord">3</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">u</span><span class="mopen">[</span><span class="mord">3</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mopen">[</span><span class="mord">2</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mopen">[</span><span class="mord">2</span><span class="mclose">]</span><span class="mclose">)</span><span class="mclose">)</span><span class="mclose">)</span><span class="mclose">)</span><span class="mclose">)</span><span class="mclose">)</span><span class="mclose">}</span></span></span></span></li>
</ul>
</li>
</ol>
]]></content>
      <categories>
        <category>课内</category>
      </categories>
      <tags>
        <tag>课内</tag>
        <tag>转载</tag>
        <tag>数据库</tag>
      </tags>
  </entry>
  <entry>
    <title>数论基础</title>
    <url>/2022/03/18/%E6%95%B0%E8%AE%BA%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<h1 id="零-概述"><a class="markdownIt-Anchor" href="#零-概述"></a> 零、概述</h1>
<p>由于高中学习算法时对数论这个领域的抽象概念十分难以接受，所以基本没有学习多少数论知识，近日在哔哩哔哩大学看到一个相关的视频，于是便重新开始学习。本文算是对高中没学的知识的一个补充。<br>
<font color="orange">若没有特别说明，本文所有字母均代表整数</font></p>
<h1 id="一-裴蜀定理-font-colorgrey-size4-又称贝祖定理bézouts-lemmafont"><a class="markdownIt-Anchor" href="#一-裴蜀定理-font-colorgrey-size4-又称贝祖定理bézouts-lemmafont"></a> 一、裴蜀定理 <font color="grey" size="4">  又称贝祖定理(Bézout’s lemma)</font></h1>
<blockquote>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo separator="true">,</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">{a},{b}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">a</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">b</span></span></span></span></span>为不全为零的整数，则且<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mi>c</mi><mi>d</mi><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><mi>d</mi></mrow><annotation encoding="application/x-tex">gcd(a,b)=d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">c</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">d</span></span></span></span>，则对于任意整数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow><annotation encoding="application/x-tex">x,y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mi>x</mi><mo>+</mo><mi>b</mi><mi>y</mi></mrow><annotation encoding="application/x-tex">ax+by</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">b</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span>都一定是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi></mrow><annotation encoding="application/x-tex">d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">d</span></span></span></span>的倍数。特别地，一定存在整数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow><annotation encoding="application/x-tex">x,y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span>，使得<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mi>x</mi><mo>+</mo><mi>b</mi><mi>y</mi><mo>=</mo><mi>d</mi></mrow><annotation encoding="application/x-tex">ax+by=d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">b</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">d</span></span></span></span>成立。</p>
</blockquote>
<p>由于裴蜀定理的证明十分枯燥且难懂，证明略。<br>
裴蜀定理的意义在于，对于一个不定方程<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mi>x</mi><mo>+</mo><mi>b</mi><mi>y</mi><mo>=</mo><mi>c</mi></mrow><annotation encoding="application/x-tex">ax+by=c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">b</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">c</span></span></span></span>，该方程有解当且仅当<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">c</span></span></span></span>为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mi>c</mi><mi>d</mi><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">gcd(a,b)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">c</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span></span></span></span>的倍数。<br>
对于一个像我这样的数论小白来说，裴蜀定理也许是个拗口又陌生的名字，但实际上，裴蜀定理是数论这个领域的基石（听别人说的）。</p>
<h1 id="二-同余"><a class="markdownIt-Anchor" href="#二-同余"></a> 二、同余</h1>
<p>从小学学习除法时，我们就学过这样的式子：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mn>14</mn><mo>÷</mo><mn>4</mn><mo>=</mo><mn>3</mn><mo>⋯</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">{14} \div {4} =3 \cdots 2
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">1</span><span class="mord">4</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">÷</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord"><span class="mord">4</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span></span></span></span></span></p>
<p>虽然在中学以及之后的学习中，我们总是希望能把被除数除净，于是引入了小数和分数的概念，但是，在数论中，我们关注更多的是余数。上式通常写成以下形式：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mn>14</mn><mo>≡</mo><mn>2</mn><mspace width="1em"><mrow><mo fence="true">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mspace width="1em"><mn>4</mn><mo fence="true">)</mo></mspace></mrow></mspace></mrow><annotation encoding="application/x-tex">14 \equiv 2\quad \left(mod \quad 4 \right)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">4</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:1em;"></span><span class="mord">4</span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span></span></p>
<p>更一般地，有</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>a</mi><mo>≡</mo><mi>b</mi><mspace width="1em"><mrow><mo fence="true">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mspace width="1em"><mi>p</mi><mo fence="true">)</mo></mspace></mrow></mspace></mrow><annotation encoding="application/x-tex">a \equiv b\quad \left(mod \quad p \right)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46375em;vertical-align:0em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">p</span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span></span></p>
<p>特别地 ，若b=0，则可以记为</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>p</mi><mi mathvariant="normal">∣</mi><mi>a</mi></mrow><annotation encoding="application/x-tex">p|a
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mord">∣</span><span class="mord mathnormal">a</span></span></span></span></span></p>
<p>该式子有不同读法，一般为&quot;a与b在模p意义下同余&quot;，该式在数论中非常常见。<br>
可以想象一下时钟这个例子，在时钟上只有1~12这12个整数，也就是模为12，而不论是1点还是13点亦或是25点（如果有的话），在时钟上表示的结果都为1点。</p>
<h2 id="同余方程"><a class="markdownIt-Anchor" href="#同余方程"></a> 同余方程</h2>
<p>同余方程的概念其实较为广泛，其实就是在模p意义下的方程，讨论比较广泛的是一次的同余方程，接下来会介绍一个简单的算法用于求解一次同余方程。</p>
<p><strong>同余的封闭性</strong><br>
同余的恒等符号与等号十分相似，使人不难联想同余与等号是否有相似的性质。实际上，同余与等号有以下相同的性质：</p>
<ul>
<li>若<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mn>1</mn></msub><mo>≡</mo><msub><mi>b</mi><mn>1</mn></msub><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mspace width="1em"><mi>p</mi><mo stretchy="false">)</mo></mspace></mrow><annotation encoding="application/x-tex">{a}_{1} \equiv {b}_1  (mod \quad p)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61375em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">b</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">p</span><span class="mclose">)</span></span></span></span>且<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mn>2</mn></msub><mo>≡</mo><msub><mi>b</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mspace width="1em"><mi>p</mi><mo stretchy="false">)</mo></mspace></mrow><annotation encoding="application/x-tex">{a}_{2} \equiv {b}_2  (mod \quad p)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61375em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">b</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">p</span><span class="mclose">)</span></span></span></span> ，那么下式也成立：<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>a</mi><mn>1</mn></msub><msub><mi>a</mi><mn>2</mn></msub><mo>≡</mo><msub><mi>b</mi><mn>1</mn></msub><msub><mi>b</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mspace width="1em"><mi>p</mi><mo stretchy="false">)</mo></mspace></mrow><annotation encoding="application/x-tex">a_1a_2 \equiv b_1b_2(mod \quad p)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61375em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">p</span><span class="mclose">)</span></span></span></span></span></p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>a</mi><mn>1</mn></msub><mo>±</mo><msub><mi>a</mi><mn>2</mn></msub><mo>≡</mo><msub><mi>b</mi><mn>1</mn></msub><mo>±</mo><msub><mi>b</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mspace width="1em"><mi>p</mi><mo stretchy="false">)</mo></mspace></mrow><annotation encoding="application/x-tex">a_1\pm a_2 \equiv b_1\pm b_2(mod \quad p)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">±</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.61375em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">±</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">p</span><span class="mclose">)</span></span></span></span></span></p>
</li>
</ul>
<p>即满足加减法和乘法的封闭性。</p>
<ul>
<li>若<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo>+</mo><mi>c</mi><mo>≡</mo><mi>b</mi><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mspace width="1em"><mi>p</mi><mo stretchy="false">)</mo></mspace></mrow><annotation encoding="application/x-tex">a+c \equiv b(mod \quad p)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.46375em;vertical-align:0em;"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">b</span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">p</span><span class="mclose">)</span></span></span></span>成立，那么<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo>≡</mo><mi>b</mi><mo>−</mo><mi>c</mi><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mspace width="1em"><mi>p</mi><mo stretchy="false">)</mo></mspace></mrow><annotation encoding="application/x-tex">a\equiv b-c(mod \quad p)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46375em;vertical-align:0em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">c</span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">p</span><span class="mclose">)</span></span></span></span>也成立。</li>
</ul>
<p>需要格外注意的是，同余对除法并没有封闭性，于是就引出了除法逆元的概念。</p>
<h1 id="三-乘法逆元"><a class="markdownIt-Anchor" href="#三-乘法逆元"></a> 三、乘法逆元</h1>
<p>对于满足</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>a</mi><mo>∗</mo><mi>b</mi><mo>≡</mo><mn>1</mn><mspace width="1em"><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mspace width="1em"><mi>p</mi><mo stretchy="false">)</mo></mspace></mspace></mrow><annotation encoding="application/x-tex">a*b \equiv 1 \quad (mod \quad p)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:1em;"></span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">p</span><span class="mclose">)</span></span></span></span></span></p>
<p>的整数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span></span></span></span>，我们称 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span></span></span></span>为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">a</span></span></span></span>在模<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span></span></span></span>意义下的乘法逆元，记作 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mi>n</mi><mi>v</mi><mo stretchy="false">(</mo><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">inv(a)=b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span></span></span></span> 或 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>a</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo>=</mo><mi>b</mi><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mspace width="1em"><mi>p</mi><mo stretchy="false">)</mo></mspace></mrow><annotation encoding="application/x-tex">a^{-1}=b(mod\quad p)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">b</span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">p</span><span class="mclose">)</span></span></span></span>，需要注意的是，一个数在不同模意义下的乘法逆元通常不同。</p>
<p>乘法逆元有着与倒数十分相似的性质，所以我更喜欢称之为数论倒数。乘法逆元的意义在于，当我们在模p意义下希望计算除法时，我们可以直接乘以除数的乘法逆元（就好像除以一个数等于乘以这个数的倒数一样）</p>
<h2 id="乘法逆元存在定理"><a class="markdownIt-Anchor" href="#乘法逆元存在定理"></a> 乘法逆元存在定理</h2>
<blockquote>
<p>乘法逆元存在的条件是a与模数互质。</p>
</blockquote>
<p>该定理可以简单证明，若一个数a的逆元存在，则可以表示为</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>a</mi><mo>∗</mo><mi>i</mi><mi>n</mi><mi>v</mi><mo stretchy="false">(</mo><mi>a</mi><mo stretchy="false">)</mo><mo>+</mo><mi>p</mi><mo>∗</mo><mi>k</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">a*inv(a)+p*k=1
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.6597200000000001em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></span></p>
<p>由裴蜀定理可知，p和a的公约数必须能整除1，即两数必须互质。</p>
<h2 id="乘法逆元的求解"><a class="markdownIt-Anchor" href="#乘法逆元的求解"></a> 乘法逆元的求解</h2>
<p>要得到一个数在模p意义下的乘法逆元，可以用费马小定理（前提是p为质数）</p>
<blockquote>
<p>费马小定理：<br>
<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>a</mi><mrow><mi>p</mi><mo>−</mo><mn>1</mn></mrow></msup><mo>≡</mo><mn>1</mn><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mspace width="1em"><mi>p</mi><mo stretchy="false">)</mo></mspace></mrow><annotation encoding="application/x-tex">a^{p-1} \equiv 1(mod \quad p)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">p</span><span class="mclose">)</span></span></span></span></p>
</blockquote>
<p>根据费马小定理，有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo>∗</mo><msup><mi>a</mi><mrow><mi>p</mi><mo>−</mo><mn>2</mn></mrow></msup><mo>≡</mo><mn>1</mn><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mspace width="1em"><mi>p</mi><mo stretchy="false">)</mo></mspace></mrow><annotation encoding="application/x-tex">a*a^{p-2} \equiv1(mod \quad p)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mbin mtight">−</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">p</span><span class="mclose">)</span></span></span></span>，所以<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>a</mi><mrow><mi>p</mi><mo>−</mo><mn>2</mn></mrow></msup></mrow><annotation encoding="application/x-tex">a^{p-2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mbin mtight">−</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span>为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">a</span></span></span></span>在模p意义下的乘法逆元。<br>
但是，该算法有较多的局限性，一般情况下，通常用<strong>扩展欧几里得算法</strong>求解乘法逆元。</p>
<h1 id="四-扩展欧几里得算法"><a class="markdownIt-Anchor" href="#四-扩展欧几里得算法"></a> 四、扩展欧几里得算法</h1>
<p>扩展欧几里得算法通常用于求解不定方程<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mi>x</mi><mo>+</mo><mi>b</mi><mi>y</mi><mo>=</mo><mi>d</mi></mrow><annotation encoding="application/x-tex">ax+by=d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">b</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">d</span></span></span></span>的（也就是一次同余方程<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mi>x</mi><mo>≡</mo><mi>d</mi><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mspace width="1em"><mi>b</mi><mo stretchy="false">)</mo></mspace></mrow><annotation encoding="application/x-tex">ax\equiv d(mod\quad b)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46375em;vertical-align:0em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span></span></span></span>），为什么叫做扩展欧几里得算法？就是因为该算法是由欧几里得算法扩展出来的。这里先重温一下欧几里得算法的内容：</p>
<blockquote>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mi>c</mi><mi>d</mi><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><mi>g</mi><mi>c</mi><mi>d</mi><mo stretchy="false">(</mo><mi>b</mi><mo separator="true">,</mo><mi>a</mi><mi mathvariant="normal">%</mi><mi>b</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">gcd(a,b)=gcd(b,a\%b)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">c</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">c</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">a</span><span class="mord">%</span><span class="mord mathnormal">b</span><span class="mclose">)</span></span></span></span></p>
</blockquote>
<p>这个算法在高中就学过了，这里证明略。<br>
接下来是扩展欧几里得算法解不定方程的推导过程：<br>
由裴蜀定理，不定方程中的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi></mrow><annotation encoding="application/x-tex">d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">d</span></span></span></span>必须为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mi>c</mi><mi>d</mi><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">gcd(a,b)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">c</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span></span></span></span>的整数倍,为了简便，我们只计算方程<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mi>x</mi><mo>+</mo><mi>b</mi><mi>y</mi><mo>=</mo><mi>g</mi><mi>c</mi><mi>d</mi><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">ax+by=gcd(a,b)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">b</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">c</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span></span></span></span> 的解，其他情况下的解可以通过倍乘该方程的解来求出。<br>
为简便，我们设<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mo>=</mo><mi>g</mi><mi>c</mi><mi>d</mi><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">g=gcd(a,b)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">c</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span></span></span></span><br>
观察欧几里得算法发现，该算法停止的条件为a=g,b=0，则此时方程可以写为：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>g</mi><mo>∗</mo><mn>1</mn><mo>+</mo><mn>0</mn><mo>∗</mo><mi>y</mi><mo>=</mo><mi>g</mi></mrow><annotation encoding="application/x-tex">g*1+0*y=g
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6597200000000001em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span></span></span></span></span></p>
<p>我们可以试图该状态逆推回，即代入欧几里得算法的条件</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>g</mi><mi>c</mi><mi>d</mi><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><mi>g</mi><mi>c</mi><mi>d</mi><mo stretchy="false">(</mo><mi>b</mi><mo separator="true">,</mo><mi>a</mi><mi mathvariant="normal">%</mi><mi>b</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">gcd(a,b)=gcd(b,a\%b)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">c</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">c</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">a</span><span class="mord">%</span><span class="mord mathnormal">b</span><span class="mclose">)</span></span></span></span></span></p>
<p>我们可以得到</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>g</mi><mi>c</mi><mi>d</mi><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><mi>g</mi><mi>c</mi><mi>d</mi><mo stretchy="false">(</mo><mi>b</mi><mo separator="true">,</mo><mi>a</mi><mi mathvariant="normal">%</mi><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><mi>g</mi><mi>c</mi><mi>d</mi><mo stretchy="false">(</mo><mi>b</mi><mo separator="true">,</mo><mi>a</mi><mo>−</mo><mo stretchy="false">⌊</mo><mfrac><mi>a</mi><mi>b</mi></mfrac><mo stretchy="false">⌋</mo><mo>∗</mo><mi>b</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">gcd(a,b) =gcd(b,a\%b) = gcd(b,a-\lfloor{\frac{a}{b}}\rfloor*b)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">c</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">c</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">a</span><span class="mord">%</span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">c</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.7935600000000003em;vertical-align:-0.686em;"></span><span class="mopen">⌊</span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.10756em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">b</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mclose">⌋</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span></span></span></span></span></p>
<p>即：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>a</mi><mi>x</mi><mo>+</mo><mi>b</mi><mi>y</mi><mo>=</mo><mi>g</mi><mo>=</mo><mi>b</mi><mo>∗</mo><msup><mi>x</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>+</mo><mo stretchy="false">(</mo><mi>a</mi><mo>−</mo><mo stretchy="false">⌊</mo><mfrac><mi>a</mi><mi>b</mi></mfrac><mo stretchy="false">⌋</mo><mo>∗</mo><mi>b</mi><mo stretchy="false">)</mo><mo>∗</mo><msup><mi>y</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>=</mo><mi>a</mi><mo>∗</mo><msup><mi>y</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>+</mo><mi>b</mi><mo>∗</mo><mo stretchy="false">(</mo><msup><mi>x</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>−</mo><mo stretchy="false">⌊</mo><mfrac><mi>a</mi><mi>b</mi></mfrac><mo stretchy="false">⌋</mo><mo>∗</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">ax+by=g=b*x^{\prime} + (a-\lfloor{\frac{a}{b}}\rfloor*b)*y^{\prime}=a*y^{\prime}+b*(x^{\prime}-\lfloor{\frac{a}{b}}\rfloor*y)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">b</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8852220000000001em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.7935600000000003em;vertical-align:-0.686em;"></span><span class="mopen">⌊</span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.10756em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">b</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mclose">⌋</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.996332em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.996332em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.051892em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.7935600000000003em;vertical-align:-0.686em;"></span><span class="mopen">⌊</span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.10756em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">b</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mclose">⌋</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span></span></p>
<p>对比左右两个式子可以发现,当我们已经获得“更深一层递归”中的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>x</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">x^{\prime}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>y</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">y^{\prime}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.946332em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>时，我们可以得出x和y：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>x</mi><mo>=</mo><msup><mi>y</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>y</mi><mo>=</mo><msup><mi>x</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>−</mo><mo stretchy="false">⌊</mo><mfrac><mi>a</mi><mi>b</mi></mfrac><mo stretchy="false">⌋</mo><mo>∗</mo><mi>y</mi></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases}
x=y&#x27;\\
y=x&#x27;-\lfloor\frac{a}{b}\rfloor*y
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">⌊</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">⌋</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>所以，当我们利用欧几里得算法计算最大公约数时，我们可以“顺便”递推求出上面这个不定方程的解。<br>
扩展欧几里得算法的C\C++ 代码实现如下：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><code class="hljs C++"><span class="hljs-keyword">typedef</span> <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> LL;<br><span class="hljs-comment">//注意，后两个参数使用的是引用</span><br><span class="hljs-function">LL <span class="hljs-title">exgcd</span><span class="hljs-params">(LL a,LL b,LL &amp;x,LL &amp;y)</span></span><br><span class="hljs-function"></span>&#123;<br>	<span class="hljs-keyword">if</span>(b==<span class="hljs-number">0</span>)<br>	&#123;<br>		x=<span class="hljs-number">1</span>;<br>		y=<span class="hljs-number">0</span>;<br>		<span class="hljs-keyword">return</span> a;<br>	&#125;<br>	LL d=<span class="hljs-built_in">exgcd</span>(b,a%b,x,y);<br>	LL temp=x;<br>	x=y;<br>	y=temp-a/b*y;<br>	<span class="hljs-keyword">return</span> d;<br>&#125;<br></code></pre></td></tr></table></figure>
<p>不难发现，实际上我们需要求解的方程是有无数多组解的，而我们只求出来其中的一组解，我们可以称之为特解，而想要求出通解，可以通过以下方法：<br>
首先，我们设通过此算法求出的特解为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>y</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">x_0,y_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>,将其代入不定方程，设整数k，做如下变换：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>a</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mn>0</mn></msub><mo>+</mo><mi>k</mi><mi>b</mi><mo stretchy="false">)</mo><mo>+</mo><mi>b</mi><mo stretchy="false">(</mo><msub><mi>y</mi><mn>0</mn></msub><mo>−</mo><mi>k</mi><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><mi>g</mi></mrow><annotation encoding="application/x-tex">a(x_0+kb)+b(y_0-ka)=g
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">a</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">b</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span></span></span></span></span></p>
<p>不难发现，该式与原方程是等价的，于是该方程的解可以扩展为</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>x</mi><mo>=</mo><msub><mi>x</mi><mn>0</mn></msub><mo>+</mo><mi>k</mi><mi>b</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>y</mi><mo>=</mo><msub><mi>y</mi><mn>0</mn></msub><mo>−</mo><mi>k</mi><mi>a</mi></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases}
x=x_0+kb\\
y=y_0-ka
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal">b</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>实际上，这样的解并不能包含全部的解，我们并不需要设这样一个“整数”k，只需要满足<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mi>b</mi></mrow><annotation encoding="application/x-tex">kb</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal">b</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mi>a</mi></mrow><annotation encoding="application/x-tex">ka</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal">a</span></span></span></span>均为整数即可，我们可以将k的条件扩大，变为：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>a</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mn>0</mn></msub><mo>+</mo><mfrac><mi>k</mi><mi>g</mi></mfrac><mo>∗</mo><mi>b</mi><mo stretchy="false">)</mo><mo>+</mo><mi>b</mi><mo stretchy="false">(</mo><msub><mi>y</mi><mn>0</mn></msub><mo>−</mo><mfrac><mi>k</mi><mi>g</mi></mfrac><mo>∗</mo><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><mi>g</mi></mrow><annotation encoding="application/x-tex">a(x_0+\frac{k}{g}*b)+b(y_0-\frac{k}{g}*a)=g
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">a</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.25188em;vertical-align:-0.8804400000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">b</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.25188em;vertical-align:-0.8804400000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span></span></span></span></span></p>
<p>所以，最终的解系为：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>x</mi><mo>=</mo><msub><mi>x</mi><mn>0</mn></msub><mo>+</mo><mfrac><mi>k</mi><mi>g</mi></mfrac><mo>∗</mo><mi>b</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>y</mi><mo>=</mo><msub><mi>y</mi><mn>0</mn></msub><mo>−</mo><mfrac><mi>k</mi><mi>g</mi></mfrac><mo>∗</mo><mi>a</mi></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases}
x=x_0+\frac{k}{g}*b\\
y=y_0-\frac{k}{g}*a
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7391079999999999em;"><span style="top:-3.739108em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">b</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2391079999999999em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>利用这样的一个解系，可以求出满足不定方程的所有解，大部分问题会要求算出满足的x中的最小值，则可以利用该式求出。<br>
<strong>对于不定方程右边不为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mi>c</mi><mi>d</mi><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">gcd(a,b)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">c</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span></span></span></span>的情况（但必须是gcd的t倍），只需要将解系中的x和y也乘以t即可</strong></p>
<h2 id="利扩展用欧几里得算法求解乘法逆元"><a class="markdownIt-Anchor" href="#利扩展用欧几里得算法求解乘法逆元"></a> 利扩展用欧几里得算法求解乘法逆元</h2>
<p>乘法逆元的定义为</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>a</mi><mo>∗</mo><mi>i</mi><mi>n</mi><mi>v</mi><mo stretchy="false">(</mo><mi>a</mi><mo stretchy="false">)</mo><mo>≡</mo><mn>1</mn><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mspace width="1em"><mi>p</mi><mo stretchy="false">)</mo></mspace></mrow><annotation encoding="application/x-tex">a*inv(a)\equiv1(mod\quad p)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">p</span><span class="mclose">)</span></span></span></span></span></p>
<p>则我们设一个整数k，该式可以表达为</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>a</mi><mo>∗</mo><mi>i</mi><mi>n</mi><mi>v</mi><mo stretchy="false">(</mo><mi>a</mi><mo stretchy="false">)</mo><mo>+</mo><mi>p</mi><mo>∗</mo><mi>k</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">a*inv(a)+p*k=1
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.6597200000000001em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></span></p>
<p>则该方程其实就是一次同余方程的一种存在形式，前提是a和p互质，利用扩展欧几里得算法可以轻松求出。</p>
<h2 id="更多方程"><a class="markdownIt-Anchor" href="#更多方程"></a> 更多方程？</h2>
<p>扩展欧几里得算法通常只能解一个不定方程，对于多个不定方程的情况，通常使用<em>中国剩余定理</em>求解，将会在今后的文章中介绍。</p>
<p><strong>文中若出现错误，欢迎联系斧正</strong></p>
]]></content>
      <categories>
        <category>算法</category>
        <category>数论</category>
      </categories>
      <tags>
        <tag>数论</tag>
        <tag>ACM</tag>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>网络层部分协议快速入门</title>
    <url>/2022/06/12/%E7%BD%91%E7%BB%9C%E5%B1%82%E9%83%A8%E5%88%86%E5%8D%8F%E8%AE%AE%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/</url>
    <content><![CDATA[<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1>
<p>这两天疯狂复习计网，感觉终于把前后知识融会贯通起来，简单写一篇博客概况一下网络层的协议。此篇主要本着“前人栽树，后人乘凉”的想法讲述自己的理解，<strong>可能会有部分错误</strong>，敬请指正。</p>
<p>学院的计网教材是《数据通信与网络》 ，实在是有点难懂，所以自己去借了《计算机网络》（谢希仁）、《计算机网络自顶向下方法》，稍微学了一下哈工大的计网MOOC，这里推荐给读到这篇博客的读者。</p>
<blockquote>
<p>后续看情况更新传输层或数据链路层或物理层的协议</p>
</blockquote>
<blockquote>
<p>UPD(2022-7-10)：计网考炸了，才81分，可能是我运气不太好吧。</p>
</blockquote>
<h1 id="网络层协议"><a class="markdownIt-Anchor" href="#网络层协议"></a> 网络层协议</h1>
<h2 id="一-逻辑寻址"><a class="markdownIt-Anchor" href="#一-逻辑寻址"></a> 一、逻辑寻址</h2>
<p>当前有（或者说我们学过）两个版本的网络层地址，<strong>IPv4地址</strong>和<strong>IPv6地址</strong></p>
<blockquote>
<p>IPv4和IPv6是协议，是网际协议IP的两个版本，而不是地址。</p>
</blockquote>
<h3 id="ipv4地址"><a class="markdownIt-Anchor" href="#ipv4地址"></a> IPv4地址</h3>
<p>地址一共32位，可以用二进制也可以用点分十进制表示。在<strong>有类寻址</strong>中，IPv4地址被分为ABCDE五类网络，其对应关系如下表：</p>
<table>
<thead>
<tr>
<th style="text-align:center">类</th>
<th style="text-align:center">地址格式(开头)</th>
<th>块的个数</th>
<th>块的大小</th>
<th>应用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">A</td>
<td style="text-align:center">0</td>
<td>128</td>
<td>16777216</td>
<td>单播</td>
</tr>
<tr>
<td style="text-align:center">B</td>
<td style="text-align:center">10</td>
<td>16384</td>
<td>65536</td>
<td>单播</td>
</tr>
<tr>
<td style="text-align:center">C</td>
<td style="text-align:center">110</td>
<td>2097152</td>
<td>256</td>
<td>单播</td>
</tr>
<tr>
<td style="text-align:center">D</td>
<td style="text-align:center">1110</td>
<td>1</td>
<td>268435456</td>
<td>多播</td>
</tr>
<tr>
<td style="text-align:center">E</td>
<td style="text-align:center">1111</td>
<td>1</td>
<td>268435456</td>
<td>保留</td>
</tr>
</tbody>
</table>
<p>有类寻址规定每类字符的前若干位为网络号，后若干位为主机号。地址分配时可能存在大型组织地址不够用，小型组织地址剩余过多的情况，所以就提出了<strong>子网化</strong>和<strong>超网化</strong>的概念。</p>
<p>与有类寻址对应的是<strong>无类寻址</strong>，这个方案不预先规定网络号和主机号，而是通过<strong>掩码</strong>的概念来区分，掩码一般可以用斜杠表示法来表示。</p>
<blockquote>
<p>不知道为什么，感觉分配地址这块很容易考到。</p>
</blockquote>
<h4 id="网络地址转化nat"><a class="markdownIt-Anchor" href="#网络地址转化nat"></a> 网络地址转化NAT</h4>
<p>因为IPv4地址已经短缺，所以提出了<strong>专用地址</strong>的概念，在局域网内部使用特定的地址（如192.168.*.*），而在局域网外只能使用在此之外的地址。<strong>专用地址在局域网内唯一，但在全世界范围内他们并不唯一</strong></p>
<p>这样就需要路由器将局域网内的专用地址转化为全球的地址才能和因特网通信，这就是NAT。然而将来自外部数据报的全球地址转化为专用地址没办法一一映射，就要使用一些其他技术。</p>
<h3 id="ipv6地址"><a class="markdownIt-Anchor" href="#ipv6地址"></a> IPv6地址</h3>
<p>IPv6地址更长，128bit，每4个bit用十六进制数表示，每4个十六进制数再用冒号隔开，这就是<strong>十六进制冒号表示法</strong>。这个表示法也可以用一定的手法缩短，这里不再赘述。</p>
<p>IPv6地址<strong>最高位字节的最低位</strong>决定其是单播地址还是多播地址（0表示单播，1表示多播，全1表示全播）</p>
<h2 id="二-网际协议ipinternet-protocol"><a class="markdownIt-Anchor" href="#二-网际协议ipinternet-protocol"></a> 二、网际协议IP(Internet Protocol)</h2>
<p><strong>IP</strong>这个缩写应该是一个协议名字，而不是我们平常说的IP地址。</p>
<h3 id="ipv4数据报的格式"><a class="markdownIt-Anchor" href="#ipv4数据报的格式"></a> IPv4数据报的格式</h3>
<p><img src="/2022/06/12/%E7%BD%91%E7%BB%9C%E5%B1%82%E9%83%A8%E5%88%86%E5%8D%8F%E8%AE%AE%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/IP/IP_datagram.PNG" alt></p>
<p>比较重要的是头部长度、总长度、标识、标记、分段偏移、生存时间TTL、协议、校验和还有两个IP地址。</p>
<p>值得注意的有以下几点：</p>
<ul>
<li>头部长度要乘以4才是按字节计算的头部长度（20~60字节）</li>
<li>协议字段是定义高层协议的，包括TCP、UDP、ICMP、IGMP</li>
<li>生存时间，虽然叫做时间，但是度量单位是“跳”</li>
<li>校验和，头部每16字节取出来用于计算校验和。</li>
</ul>
<p>IP数据报还有一个比较重要的概念是<strong>分段</strong>。</p>
<h4 id="分段"><a class="markdownIt-Anchor" href="#分段"></a> 分段</h4>
<p>收到链路层协议的约束，IP层的数据报长度也受到了限制，这个长度叫做<strong>最大传输单元MTU</strong>，当数据报长度大于MTU时，就要将IP分段。</p>
<p>其中，数据报的<strong>标识</strong>用于区别各个数据报（即：同一个数据报切分出来的分段具有同样的标识），<strong>标记</strong>中的第二个位‘D’(意为Don’t分段）为0时需要分段，反之不需要分段；第三个位‘M’（意为More分段）为1时表示这个分段之后还有分段，反之表示这是最后一个分段。这里可以联系链表，M表示尾指针是否为NULL。</p>
<p><strong>分段偏移</strong>表示这个分段在原数据报中的相对位置，以8个字节（<strong>不是比特！</strong>）为度量单位。</p>
<blockquote>
<p>也就是说，数据报被分段时第一个字节的编号都能被8整除。</p>
</blockquote>
<h3 id="ipv6数据报格式"><a class="markdownIt-Anchor" href="#ipv6数据报格式"></a> IPv6数据报格式</h3>
<p><s>这部分搞的有点不是很懂</s></p>
<p><img src="/2022/06/12/%E7%BD%91%E7%BB%9C%E5%B1%82%E9%83%A8%E5%88%86%E5%8D%8F%E8%AE%AE%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/IP/IPv6_datagram.PNG" alt></p>
<p>比较值得注意的就是IPv6数据报在40字节的基本头部的基础上又加了扩展头部，又因为种种原因取消了一部分字段，所以想有更多功能就要添加扩展头部。IPv4头部中的分段就被分到了IPv6的扩展头部中（分段方法有点不一样）。此外校验和也被移除，由高层协议负责。</p>
<p>详细的头部和扩展头部比较可以参考教材。</p>
<h3 id="ipv4到ipv6的过渡"><a class="markdownIt-Anchor" href="#ipv4到ipv6的过渡"></a> IPv4到IPv6的过渡</h3>
<p>可以采用双栈协议（全能型选手）、隧道技术（掩耳盗铃）、和头部转换（偷天换日）。</p>
<h2 id="三-地址解析协议arp"><a class="markdownIt-Anchor" href="#三-地址解析协议arp"></a> 三、地址解析协议ARP</h2>
<p><strong>ARP（Address Resolution Protocol)</strong>，是用于将逻辑地址（如IPv4地址）转化硬件地址（如MAC地址）的协议。</p>
<blockquote>
<p>硬件地址不止有MAC地址，逻辑地址也不止有IPv4地址。</p>
</blockquote>
<p>分组格式如下：</p>
<p><img src="/2022/06/12/%E7%BD%91%E7%BB%9C%E5%B1%82%E9%83%A8%E5%88%86%E5%8D%8F%E8%AE%AE%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/IP/ARP.PNG" alt></p>
<p>这个分组并不难理解，基本看字面意思就可以猜出来用处。比较特别的是<strong>目标硬件地址</strong>，因为发送方想要知道的就是目标的硬件地址,所以发送方的分组的这个字段是全0，接收方收到分组后，发送自己的ARP分组，回答相应的请求。</p>
<p>简单的说就是你写了封信问小美的电话号码，然后把她的电话号码那一栏留空，她给你回信的时候再填上（但此时发送方和接收方需要颠倒）。这个例子比较好理解ARP在干什么，但是不太准确，因为<strong>ARP请求是广播发送</strong>，实际上应该是你给身边所有人写了封信，问小美电话，小美看到就会回你，但是其他人，比如说小明，就不会鸟你，也即<strong>ARP回答报文是单播发送</strong>。</p>
<p>ARP协议还用到了高速缓存、代理ARP的技术，想了解建议看书。</p>
<h2 id="四-因特网控制报文协议icmp"><a class="markdownIt-Anchor" href="#四-因特网控制报文协议icmp"></a> 四、因特网控制报文协议ICMP</h2>
<p>由于IP协议只提供不可靠和无连接的服务，没有差错控制机制，也没有办法管理主机，于是ICMP协议就诞生了。ICMP不是高层协议，而是装在IP数据报中的协议。</p>
<p>ICMP报文有两类，一类是差错报告报文，另一类是查询报文。两类下又有更细的分类，这里就不再说了（<s>主要是我也不是很懂</s>），想了解可以看思维导图或者看书。</p>
<p><strong>ping命令和Traceroute程序就是依赖ICMP协议来运行的。</strong></p>
<h2 id="五-因特网组管理协议igmp"><a class="markdownIt-Anchor" href="#五-因特网组管理协议igmp"></a> 五、因特网组管理协议IGMP</h2>
<p><strong>多播</strong>需要将相同的报文转发给多个分组，对报文一次一次地复制需要付出很大的带价，所以网络层需要维护若干个组，利用<strong>多播路由选择协议</strong>对组内的主机进行转发，组的维护就要靠<strong>IGMP（Internet Group Management Protocol）</strong>。</p>
<blockquote>
<p>IGMP协议一个管理组成员的协议，而不是多播路由协议。它帮助多播路由器创建和更新组成员的列表。</p>
</blockquote>
<p>IGMP也有多重报文类型，包括查询、成员报告、离开报告。</p>
<p>IGMP的工作可以分为两个阶段：</p>
<ul>
<li>主机想加入一个新的多播组，它向多播组的多播地址发送一个IGMP报文，本地的多播路由器收到IGMP报文后，把这个报文转发给多播组的其他路由器。</li>
<li>多播路由器周期性地试探本地局域网上的成员，以便知道这些主机还是不是该组的成员。</li>
</ul>
<blockquote>
<p>IGMP的目标是局域网，所以其IP分组的TTL字段值为1</p>
</blockquote>
<h2 id="六-自治系统as"><a class="markdownIt-Anchor" href="#六-自治系统as"></a> 六、自治系统AS</h2>
<p>因为互联网规模过大，互联网规格也有所差异，且互联网上许多组织不希望自己网络的细节被外界了解，所以可以把整个互联网分割为多个<strong>自治系统AS</strong>。于是在自治系统内外，就需要不同的路由选择协议,分别为<strong>内部网关协议</strong>和<strong>外部网关协议</strong>。</p>
<h3 id="内部网关协议igp"><a class="markdownIt-Anchor" href="#内部网关协议igp"></a> 内部网关协议IGP</h3>
<h4 id="路由信息协议rip"><a class="markdownIt-Anchor" href="#路由信息协议rip"></a> 路由信息协议RIP</h4>
<p>**RIP（Routing Information Protocol）**是基于距离向量的一种路由选择协议，其最大的优点就是简单，开销小。因为其简单的特性，RIP只适用于小型的局域网，所以IP分组中的TTL通常为16。</p>
<p><strong>RIP交换信息的方法</strong></p>
<ul>
<li>RIP仅和相邻路由器交换信息。</li>
<li>RIP向相邻路由器交换自己所知道的全部信息，即所有的路由表。</li>
<li>按固定时间间隔交换信息（如每隔30s）</li>
</ul>
<p>整个算法是基于<em>Bellman-Ford算法</em> ，过程还蛮有意思的，感兴趣的可以了解一下。</p>
<p>RIP交换信息有个缺点，就是“好消息传的块，坏消息穿的慢”，在一个网络或路由器出故障时，可能需要花费较多的时间才能让其他网络和路由器知会，且路径收敛慢，所以只使用于小规模局域网。</p>
<blockquote>
<p>虽然这篇博客只讨论网络层，但是RIP协议在应用层，为网络层服务，在运输层使用UDP协议，<strong>使用端口号是520</strong></p>
</blockquote>
<h4 id="开放最短路径优先ospf"><a class="markdownIt-Anchor" href="#开放最短路径优先ospf"></a> 开放最短路径优先OSPF</h4>
<p>为了克服RIP的缺点，基于Dijkstra算法<strong>OSPF（Open Shortest Path First）</strong>。其特点有：</p>
<ul>
<li>使用洪泛法向自治系统的所有路由器发送消息。</li>
<li>发送的信息是与自己相邻的所有路由器的链路状态，“链路状态”的度量方式比较灵活，可以由网络管理人员自己决定。</li>
<li>仅当链路状态发生变化或间隔一定时间后更新链路状态信息。</li>
</ul>
<p>还有点可能会考到，就是OSPF通过**问候（Hello）**分组来发现和维持邻站相邻的可能性。</p>
<blockquote>
<p>OSPF工作在网络层。</p>
</blockquote>
<h3 id="外部网关协议bgp"><a class="markdownIt-Anchor" href="#外部网关协议bgp"></a> 外部网关协议BGP</h3>
<p>BGP的测量和IGP有所不同，原因如下：</p>
<ul>
<li>互联网规模太大，使得AS之间的路由选择非常困难。</li>
<li>自治系统AS之间的选择必须考虑有关策略（比如中国的消息不希望经过美国被转发，不够安全）。</li>
</ul>
<p>所以BGP并不渴望寻找到一条最佳路由，而是选择出一条<strong>比较好</strong>的路由。</p>
<blockquote>
<p>BGP工作在应用层。</p>
</blockquote>
<p>BGP的选择有点复杂，没搞懂，估计考试也不会考。</p>
<h1 id="没了"><a class="markdownIt-Anchor" href="#没了"></a> 没了！</h1>
<p>三千多字，比我想象中难多了，后续随缘更新，且看其珍惜吧。</p>
<p>写的比较赶，可能问题比较多，欢迎指正。</p>
<p>留个言或者给点反馈会给我更多更下去的动力，Pls！</p>
]]></content>
      <categories>
        <category>课内</category>
        <category>计算机网络</category>
      </categories>
      <tags>
        <tag>计算机网络</tag>
        <tag>网络层</tag>
      </tags>
  </entry>
  <entry>
    <title>计算机中的数据编码</title>
    <url>/2022/03/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B8%AD%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BC%96%E7%A0%81/</url>
    <content><![CDATA[<h1 id="计算机中的数据编码"><a class="markdownIt-Anchor" href="#计算机中的数据编码"></a> 计算机中的数据编码</h1>
<h2 id="一-进制及其转化"><a class="markdownIt-Anchor" href="#一-进制及其转化"></a> 一、进制及其转化</h2>
<p>冯诺依曼计算机体系中，为了在物理上表示方便，采用了二进制编码的形式。由于进制等内容较为简单，中学、大学知识中有均提及，此处不再赘述。<strong>本文只讨论纯整数编码</strong></p>
<h2 id="二-原码"><a class="markdownIt-Anchor" href="#二-原码"></a> 二、原码</h2>
<p>原码是最简单的一种编码形式，由1位符号位和n-1位数据位构成。以<strong>4位</strong>码位为例，第一位是符号位，0表示正数，1表示负数，其余位由于表示该数值的绝对值。<br>
可以用以下数学公式来表示<br>
<s>暂时还没学会lateX，先上个手写的</s></p>
<p><img src="/2022/03/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B8%AD%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BC%96%E7%A0%81/data_code/yuanma_fml.PNG" alt="原码表达公式"></p>
<p>这是数学上的公式表示，显然不够直观，接下来在数轴（仍然是码位为4的情况）上表示数值与编码的关系。<br>
<strong>其中数轴下方是编码（为直观起见，转化成十进制），数轴上方是在计算机中代表的实际数值</strong></p>
<p><img src="/2022/03/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B8%AD%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BC%96%E7%A0%81/data_code/yuanma_line.PNG" alt="原码在数轴上的呈现"><br>
可以看到，如果将数轴平分为两部分[0,7]与[8,15]，则左半轴均为正数，右半轴均为负数。这便是原码区分正负数的方法。</p>
<h1 id="三-反码"><a class="markdownIt-Anchor" href="#三-反码"></a> 三、反码</h1>
<p>反码在数学上的定义为：<br>
<img src="/2022/03/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B8%AD%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BC%96%E7%A0%81/data_code/fanma_fml.PNG" alt="反码表达公式"><br>
易从公式中看出，当X的值小于等于0时2的n次方-1实际上就是一串全1的编码，而一串全1的编码按位减去X即为对X按位求非。<br>
由以上可以得出一个反码的更直观定义，即：</p>
<blockquote>
<p>当X为正数时X的反码即为它本身，X为负数时X的反码为X的原码的<strong>非符号位</strong>按位求非。</p>
</blockquote>
<p>这便是“反码”中“反”字的来源。</p>
<p>下面是反码在数轴上的分布：<br>
<img src="/2022/03/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B8%AD%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BC%96%E7%A0%81/data_code/fanma_line.PNG" alt="反码在数轴上的呈现"><br>
不难发现，反码与原码的区别就是反码在右半轴的分布与原码恰好对称。</p>
<p>在《计算机组成与系统结构[裘雪红]》一书中，对反码有如下描述：</p>
<blockquote>
<p>反码通常用来作为由原码求补码或者由补码求原码的中间过渡。</p>
</blockquote>
<p>可见，反码在计算机中实际的使用场景应该很少。</p>
<h1 id="四-补码"><a class="markdownIt-Anchor" href="#四-补码"></a> 四、补码</h1>
<p>补码在数学上的定义为：<br>
<img src="/2022/03/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B8%AD%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BC%96%E7%A0%81/data_code/buma_fml.PNG" alt="补码表达公式"><br>
不难发现，负数与其自身的补码相加后就等于2的n次方，这种关系可以与角度中的互补类比，如30°与150°互补，这便是“补码”中“补”字的来源。<br>
值得一提的是，由于编码位数为n位，所以该编码是<strong>mod 2的n次方</strong>意义下的，所以负数与其自身补码相加实际上发生了溢出，实际上的值变为了0。<br>
补码也可以有如下的定义：</p>
<blockquote>
<p>正数的补码即为其原码本身，负数的补码为其反码+1</p>
</blockquote>
<p>补码在数轴上的分布如下图所示<br>
<img src="/2022/03/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B8%AD%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BC%96%E7%A0%81/data_code/buma_fml.PNG" alt="补码在数轴上的呈现"><br>
可以看出，补码在右半轴的分布相对于反码右移了一个单位。</p>
<h2 id="1求补运算"><a class="markdownIt-Anchor" href="#1求补运算"></a> 1.求补运算</h2>
<p>计算机中还存在一中与补码的求法十分相似的运算，称为求补运算，十分容易和“求补码”混淆。其运算过程如下：</p>
<blockquote>
<p>将编码按位取反（包括符号位），然后+1</p>
</blockquote>
<p>求补运算与“求补码”的区别如下：</p>
<ul>
<li>求补运算将符号位也取反，而“求补码”只需要将数据位取反</li>
<li>求补运算对正负数都有效，而整数求补码后仍是它本身</li>
<li>任何数求补后都会变成其相反数</li>
</ul>
<p><strong>求补运算在计算机的数值计算中十分常用</strong></p>
<h2 id="2补码的特性"><a class="markdownIt-Anchor" href="#2补码的特性"></a> 2.补码的特性</h2>
<ul>
<li>与原码和反码不同，补码不存在“正零”和“负零”的区别。</li>
<li>[X-Y]补=[X]补+[-Y]补=[X]补+（[Y]补）求补，这一特性使得补码在计算机的运算中非常常用。</li>
</ul>
<p><img src="/2022/03/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B8%AD%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BC%96%E7%A0%81/data_code/buma_cal.PNG" alt="补码的加减特性"></p>
<h2 id="3变形补码双符号位补码"><a class="markdownIt-Anchor" href="#3变形补码双符号位补码"></a> 3.变形补码（双符号位补码）</h2>
<p>在实际计算中，为了判断加减的结果是否溢出，常常设置两个符号位。若加减结果的两个符号位不相等（01或10），则发生了溢出；如果符号相等，则不发生溢出。</p>
<h3 id="变形补码的实质"><a class="markdownIt-Anchor" href="#变形补码的实质"></a> 变形补码的实质</h3>
<p>不难发现，由于多出来的一位符号位，n位变形补码的数据范围只有补码的一半，将其在数轴上画出后：<br>
<img src="/2022/03/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B8%AD%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BC%96%E7%A0%81/data_code/bianxingbm.PNG" alt="补码与变形补码"><br>
从图中可以看出，符号位为01和10的情况在数轴上是存在的，我们或许可以强行将其看成补码，则可以获取其代表的值。但变形补码的意义在于判断计算结果的溢出，所以我们将变形补码的范围压缩到数轴最左边和最右边分别1/4部分，将中间一部分视为“禁区”，当计算结果进入中间时，计算机就抛出“溢出”的计算结果。<br>
<strong>可见，变形补码是舍弃一部分数据范围以保证数据没有发生溢出</strong></p>
<p>这也是在《计组》后续的章节中，恢复余数法中间步骤出现了01的符号位而不影响计算的原因<br>
<img src="/2022/03/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B8%AD%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BC%96%E7%A0%81/data_code/bxbm_cal.PNG" alt="用恢复余数法计算除法的步骤"><br>
<strong>这里的变形补码是中间的计算结果，可以将其看成有效的数值参与下一步计算，但是若结果出现了01或10的符号位，则是不符合规范的，发生了溢出。</strong></p>
<h1 id="四-移码"><a class="markdownIt-Anchor" href="#四-移码"></a> 四、移码</h1>
<p>移码是数值在模2的n次方意义下平移后的结果。如上图数轴所示，想要比较以上三种编码的数值的大小，均无法通过编码来比较。而移码有着“单调”的特点，即随着编码的增大，编码所代表的数值也增大。<br>
移码的定义：2的n次方+X<br>
可以证明，移码与补码之间存在关系：<strong>移码和补码的符号位是相反的</strong></p>
<h2 id="移码的使用场景举例"><a class="markdownIt-Anchor" href="#移码的使用场景举例"></a> 移码的使用场景举例</h2>
<p>在IEEE754标准中，其指数使用的是移码。不过这里的移码有所不同<br>
，移动的位数是127（单精度）/1023（双精度），这里为什么是127/1023而不是128/1024？很多人可能没有深究这里的原因。<br>
其实原因很简单，IEEE754标准中对尾数要求规格化，即小数点后第一位必须为1，且规定把这个1给省略。这里移码比正常少位移一位，就是考虑到这里的这个1。如果位移128位，尾数的表达就是0.1xxxx，如果位移127位，尾数的表达就是1.xxxxx，<strong>这样一来，增大了浮点数可以表达的范围</strong>。</p>
]]></content>
      <categories>
        <category>课内</category>
        <category>计组</category>
      </categories>
      <tags>
        <tag>计算机组成原理</tag>
      </tags>
  </entry>
  <entry>
    <title>计网大作业-web应用之爬虫</title>
    <url>/2022/06/07/%E8%AE%A1%E7%BD%91%E5%A4%A7%E4%BD%9C%E4%B8%9A-web%E5%BA%94%E7%94%A8%E4%B9%8B%E7%88%AC%E8%99%AB/</url>
    <content><![CDATA[<h1 id="计算机通信与网络课外实验"><a class="markdownIt-Anchor" href="#计算机通信与网络课外实验"></a> 计算机通信与网络课外实验</h1>
<h4 id="作者u周洪锋2000920-刘勇建2000920u"><a class="markdownIt-Anchor" href="#作者u周洪锋2000920-刘勇建2000920u"></a> 作者：<u>周洪锋2000920**** 刘勇建2000920****</u></h4>
<h2 id="实验题目"><a class="markdownIt-Anchor" href="#实验题目"></a> 实验题目</h2>
<p><strong>WEB应用——利用爬虫爬取”电影天堂“网站的电影</strong></p>
<h2 id="实验目的"><a class="markdownIt-Anchor" href="#实验目的"></a> 实验目的</h2>
<ul>
<li>通过爬虫工具的使用，加强对<strong>HTTP</strong>协议的理解</li>
<li>学会如何发送请求头，完成与HTTP服务器的交互</li>
<li>在解析页面的过程中熟悉<strong>HTML</strong> 代码</li>
</ul>
<h2 id="实验工具"><a class="markdownIt-Anchor" href="#实验工具"></a> 实验工具</h2>
<ul>
<li>python（装有<code>request</code>、<code>bs4</code>等模块）</li>
<li>chrome浏览器</li>
</ul>
<h2 id="实验原理"><a class="markdownIt-Anchor" href="#实验原理"></a> 实验原理</h2>
<h3 id="http协议"><a class="markdownIt-Anchor" href="#http协议"></a> HTTP协议</h3>
<p>HTTP协议是面向事务的应用层协议，可以完成超文本内容的传送。其基本过程如下图所示：服务器不断在<strong>80端口</strong>监听是否有客户端浏览器的请求，一旦监听到请求后，便由客户端发起TCP连接的建立。随后浏览器向客户机发送HTTP请求报文，申请获取<strong>指定URL</strong>的页面，服务器收到请求后，便向客户机发送对应的页面（通常是HTML代码，后由浏览器解析）。</p>
<p><img src="/2022/06/07/%E8%AE%A1%E7%BD%91%E5%A4%A7%E4%BD%9C%E4%B8%9A-web%E5%BA%94%E7%94%A8%E4%B9%8B%E7%88%AC%E8%99%AB/dytt/HTTP.png" alt="HTTP协议基本原理"></p>
<p><strong>HTTP协议有以下特点</strong></p>
<ul>
<li><strong>HTTP是无状态的</strong>。浏览器不会记得曾经访问过的客户，也不会记录客户的信息。但是，Cookies技术可以改变这一特点。</li>
<li><strong>HTTP的请求报文头使用ASCII码，是可读的</strong>。用户可以检查浏览器发出的请求头和收到的响应头来获得相应信息（本实验中，使用请求头的<em>User-Agent</em>信息来伪装请求报文。同时响应头中含有状态码，可以用于查看服务器的响应情况。</li>
<li><strong>HTTP使用HTML（超文本标记语言）作为制作页面的语言</strong>。可以使用Python的相关模块对HTML进行解析，提取其中的信息。</li>
</ul>
<p><img src="/2022/06/07/%E8%AE%A1%E7%BD%91%E5%A4%A7%E4%BD%9C%E4%B8%9A-web%E5%BA%94%E7%94%A8%E4%B9%8B%E7%88%AC%E8%99%AB/dytt/request_header.png" alt="请求头的格式"></p>
<h3 id="爬虫原理"><a class="markdownIt-Anchor" href="#爬虫原理"></a> 爬虫原理</h3>
<p>正常的HTTP访问请求中，由浏览器发送请求报文，而爬虫便是使用Python等工具向服务器发送大量请求报文，批量获取服务器的响应，并从中获取有效信息。</p>
<p>在爬取之前，需要了解目标网站的<strong>网址、网页结构、是否有反爬虫机制</strong>等相关信息。</p>
<h2 id="实验步骤"><a class="markdownIt-Anchor" href="#实验步骤"></a> 实验步骤</h2>
<h3 id="1-分析网站结构"><a class="markdownIt-Anchor" href="#1-分析网站结构"></a> 1、分析网站结构</h3>
<p>通过在chrome浏览器中对网页进行检查，可以发现，在网站的 <em>电影-&gt;最新电影-&gt;下载页面</em> 中有规律地列出了许多最新电影的下载页面，可以从该页面<a href="https://www.dy2018.com/html/gndy/dyzz/index.html">电影天堂</a>开始作为爬取的对象。</p>
<p>查看网页的<strong>HTML代码</strong>，可以发现下载跳转链接都被放在一个<code>&lt;div class='bd3r'&gt;</code>标签中，可以使用网页解析工具对该页面进行解析，抽取出想要的电影信息。</p>
<img src="/2022/06/07/%E8%AE%A1%E7%BD%91%E5%A4%A7%E4%BD%9C%E4%B8%9A-web%E5%BA%94%E7%94%A8%E4%B9%8B%E7%88%AC%E8%99%AB/dytt/index.png" style="zoom:67%;">
<p>当然，一页的电影肯定是不够的，需要考虑<strong>下载多个页面的内容</strong>，不难发现，该网站不同页的url有以下的规律</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//</span>www.dy2018.com<span class="hljs-regexp">/html/g</span>ndy<span class="hljs-regexp">/dyzz/i</span>ndex.html <span class="hljs-regexp">//</span>第一页<br>https:<span class="hljs-regexp">//</span>www.dy2018.com<span class="hljs-regexp">/html/g</span>ndy<span class="hljs-regexp">/dyzz/i</span>ndex_2.html <span class="hljs-regexp">//</span>第二页<br>https:<span class="hljs-regexp">//</span>www.dy2018.com<span class="hljs-regexp">/html/g</span>ndy<span class="hljs-regexp">/dyzz/i</span>ndex_3.html <span class="hljs-regexp">//</span>第三页<br></code></pre></td></tr></table></figure>
<p>这样，我们就可以简单推出所有页面的url。</p>
<h3 id="2-发出http请求"><a class="markdownIt-Anchor" href="#2-发出http请求"></a> 2、发出HTTP请求</h3>
<p>python3中带有requests模块，其中的<code>get()</code>函数可以自动向HTTP服务器发出请求,可以通过以下的调用发出请求</p>
<figure class="highlight python"><table><tr><td class="code"><pre><code class="hljs python">url = <span class="hljs-string">&quot;https://www.dy2018.com/html/gndy/dyzz/index.html&quot;</span><br>requests.get(url)<br></code></pre></td></tr></table></figure>
<p>但是，检查返回的状态码会发现，HTTP并没有给出正确的响应，因为requests.get()发出的请求被服务器识别为不正常的请求，为了让服务器能够正常响应，<strong>需要伪装请求头</strong>。打开浏览器的检查，通过抓包可以查看浏览器发出的请求头信息：</p>
<p><img src="/2022/06/07/%E8%AE%A1%E7%BD%91%E5%A4%A7%E4%BD%9C%E4%B8%9A-web%E5%BA%94%E7%94%A8%E4%B9%8B%E7%88%AC%E8%99%AB/dytt/header.png" alt="请求头信息"></p>
<p><code>user-agent</code>代表的是客户端浏览器的相关信息，为了防止服务器拒绝我们的请求，可以在调用get函数时携带headers参数，来伪装成是浏览器发出的请求，同时还可以<strong>设置cookies</strong>来保持登录状态。</p>
<p>以下为获得<strong>HTTP响应</strong>的代码</p>
<figure class="highlight python"><table><tr><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">GetHtml</span>(<span class="hljs-params">url</span>):</span><br>    ua = UserAgent()<br>    headers=&#123;<br>        <span class="hljs-string">&#x27;user-agent&#x27;</span>:<span class="hljs-built_in">str</span>(ua.random),<br>        <span class="hljs-string">&#x27;Connection&#x27;</span>:<span class="hljs-string">&#x27;close&#x27;</span><br>    &#125;<br><br>    r = requests.get(url,headers=headers)<br>    <br>    <span class="hljs-keyword">if</span> r.status_code == <span class="hljs-number">200</span>:<br>        r.encoding = <span class="hljs-string">&#x27;gb2312&#x27;</span><br>        soup = BeautifulSoup(r.text,<span class="hljs-string">&#x27;lxml&#x27;</span>) //使用bs4模块对获取的页面解析<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br>    <span class="hljs-keyword">return</span> soup<br></code></pre></td></tr></table></figure>
<h3 id="3-页面解析-信息提取"><a class="markdownIt-Anchor" href="#3-页面解析-信息提取"></a> 3、页面解析、信息提取</h3>
<p>再次检查页面，可以发现每一部电影的链接都置于标签<code>&lt;a class='ulink'&gt;</code>中，可以考虑使用<code>BeautifulSoup</code>模块抽取出页面每一个class为ulink的标签，进行进一步解析。</p>
<p><img src="/2022/06/07/%E8%AE%A1%E7%BD%91%E5%A4%A7%E4%BD%9C%E4%B8%9A-web%E5%BA%94%E7%94%A8%E4%B9%8B%E7%88%AC%E8%99%AB/dytt/html.png" alt></p>
<p>提取出的标签含有较多无用信息，可以考虑对标签中的信息进一步清洗。</p>
<ul>
<li>电影的标题考虑使用正则表达式来匹配书名号中的内容</li>
<li>电影详细页面的链接可以使用<code>BeautifulSoup</code>来提取出标签中的<code>href</code></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">Parser</span>(<span class="hljs-params">soup</span>):</span><br>    raw = soup.find_all(<span class="hljs-string">&quot;a&quot;</span>,class_=<span class="hljs-string">&#x27;ulink&#x27;</span>)<br>    ptn = re.<span class="hljs-built_in">compile</span>(<span class="hljs-string">r&quot;《[\u4e00-\u9fa5]*》&quot;</span>)<br>    movies = []<br>    urls = []<br>    <span class="hljs-keyword">for</span> each <span class="hljs-keyword">in</span> raw:<br>        movies.extend(ptn.findall(each.string))<br>        urls.append(each[<span class="hljs-string">&quot;href&quot;</span>])<br>    full_urls = []<br>    <span class="hljs-keyword">for</span> url <span class="hljs-keyword">in</span> urls:<br>        full_urls.append(parse.urljoin(root_url,url))<br>    <span class="hljs-keyword">return</span> movies,full_urls<br></code></pre></td></tr></table></figure>
<p>这样，就可以爬取出<strong>电影和电影的详细页面</strong>，但是还无法获得下载电影的磁力链接。电影磁力链接在详细页面中可以找到，所以可以通过上一步获得的详细页面链接，尝试访问详细信息页面，用类似的方法（正则表达式）提取出电影的磁力链接。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">SubHtml</span>(<span class="hljs-params">urls</span>):</span><br>    magnet = []<br>    <span class="hljs-keyword">for</span> url <span class="hljs-keyword">in</span> urls:<br>        soup = GetHtml(url)<br>        <span class="hljs-keyword">if</span> soup == <span class="hljs-literal">None</span>:<br>            <span class="hljs-keyword">continue</span><br>        get = soup.find(<span class="hljs-string">&quot;a&quot;</span>,href=re.<span class="hljs-built_in">compile</span>(<span class="hljs-string">r&#x27;magnet(.*?\.mp4)?&#x27;</span>))<br>        <span class="hljs-keyword">if</span> get != <span class="hljs-literal">None</span>:<br>            magnet.append(get.string)<br>            <span class="hljs-built_in">print</span>(get.string)<br>    <span class="hljs-keyword">return</span> magnet<br></code></pre></td></tr></table></figure>
<h3 id="4-开始爬取"><a class="markdownIt-Anchor" href="#4-开始爬取"></a> 4、开始爬取</h3>
<p>整个爬虫程序的流程图如下所示：</p>
<p><img src="/2022/06/07/%E8%AE%A1%E7%BD%91%E5%A4%A7%E4%BD%9C%E4%B8%9A-web%E5%BA%94%E7%94%A8%E4%B9%8B%E7%88%AC%E8%99%AB/dytt/step.png" alt></p>
<h2 id="实验结果"><a class="markdownIt-Anchor" href="#实验结果"></a> 实验结果</h2>
<p>将爬取到的信息储存到txt文本文档中，结果如下所示：</p>
<p><img src="/2022/06/07/%E8%AE%A1%E7%BD%91%E5%A4%A7%E4%BD%9C%E4%B8%9A-web%E5%BA%94%E7%94%A8%E4%B9%8B%E7%88%AC%E8%99%AB/dytt/result.png" alt></p>
<h2 id="完整代码"><a class="markdownIt-Anchor" href="#完整代码"></a> 完整代码</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> re<br><span class="hljs-keyword">from</span> sre_constants <span class="hljs-keyword">import</span> AT<br><span class="hljs-keyword">from</span> bs4 <span class="hljs-keyword">import</span> BeautifulSoup<br><span class="hljs-keyword">from</span> selenium <span class="hljs-keyword">import</span> webdriver<br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">from</span> urllib <span class="hljs-keyword">import</span> parse<br><span class="hljs-keyword">import</span> time<br><span class="hljs-keyword">from</span> requests.adapters <span class="hljs-keyword">import</span> HTTPAdapter<br><span class="hljs-keyword">from</span> fake_useragent <span class="hljs-keyword">import</span> UserAgent<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">GetHtml</span>(<span class="hljs-params">url</span>):</span><br>    ua = UserAgent()<br>    headers=&#123;<br>        <span class="hljs-string">&#x27;user-agent&#x27;</span>:<span class="hljs-built_in">str</span>(ua.random), //使用随机UA，防止被服务器拒绝<br>        <span class="hljs-string">&#x27;Connection&#x27;</span>:<span class="hljs-string">&#x27;close&#x27;</span><br>    &#125;<br><br>    r = requests.get(url,headers=headers)<br>    <br>    <span class="hljs-keyword">if</span> r.status_code == <span class="hljs-number">200</span>:<br>        r.encoding = <span class="hljs-string">&#x27;gb2312&#x27;</span><br>        soup = BeautifulSoup(r.text,<span class="hljs-string">&#x27;lxml&#x27;</span>)<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br>    <span class="hljs-comment">#print(r.text)</span><br>    <span class="hljs-keyword">return</span> soup<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">Parser</span>(<span class="hljs-params">soup</span>):</span><br>    raw = soup.find_all(<span class="hljs-string">&quot;a&quot;</span>,class_=<span class="hljs-string">&#x27;ulink&#x27;</span>)<br>    <span class="hljs-comment">#print(raw)</span><br>    ptn = re.<span class="hljs-built_in">compile</span>(<span class="hljs-string">r&quot;《[\u4e00-\u9fa5]*》&quot;</span>)<br>    movies = []<br>    urls = []<br>    <span class="hljs-keyword">for</span> each <span class="hljs-keyword">in</span> raw:<br>        movies.extend(ptn.findall(each.string))<br>        urls.append(each[<span class="hljs-string">&quot;href&quot;</span>])<br>    <span class="hljs-comment">#print(movies)</span><br>    <span class="hljs-comment">#print(urls)</span><br>    full_urls = []<br>    <span class="hljs-keyword">for</span> url <span class="hljs-keyword">in</span> urls:<br>        full_urls.append(parse.urljoin(root_url,url))<br>    <span class="hljs-keyword">return</span> movies,full_urls<br>        <br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">Save</span>(<span class="hljs-params">movies,urls,magnets</span>):</span><br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">r&quot;D:\AAA桌面映射文档\抢课app\爬虫\text.txt&quot;</span>,<span class="hljs-string">&quot;a+&quot;</span>,encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>) <span class="hljs-keyword">as</span> fp:<br>        <span class="hljs-keyword">for</span> m,u,magnet <span class="hljs-keyword">in</span> <span class="hljs-built_in">zip</span>(movies,urls,magnets):<br>            fp.write(m+<span class="hljs-string">&#x27;\n&#x27;</span>)<br>            fp.write(u+<span class="hljs-string">&#x27;\n&#x27;</span>)<br>            fp.write(magnet+<span class="hljs-string">&#x27;\n&#x27;</span>)<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">SubHtml</span>(<span class="hljs-params">urls</span>):</span><br>    magnet = []<br>    <span class="hljs-keyword">for</span> url <span class="hljs-keyword">in</span> urls:<br>        soup = GetHtml(url)<br>        <span class="hljs-keyword">if</span> soup == <span class="hljs-literal">None</span>:<br>            <span class="hljs-keyword">continue</span><br>        <span class="hljs-comment">#print(soup)</span><br>        get = soup.find(<span class="hljs-string">&quot;a&quot;</span>,href=re.<span class="hljs-built_in">compile</span>(<span class="hljs-string">r&#x27;magnet(.*?\.mp4)?&#x27;</span>))<br>        <span class="hljs-keyword">if</span> get != <span class="hljs-literal">None</span>:<br>            magnet.append(get.string)<br>            <span class="hljs-built_in">print</span>(get.string)<br>            <span class="hljs-comment">#print(get.string)</span><br>    <span class="hljs-keyword">return</span> magnet<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    root_url = <span class="hljs-string">&quot;https://www.dy2018.com/html/gndy/dyzz/index.html&quot;</span><br>    soup = GetHtml(root_url)<br>    movies,urls = Parser(soup)<br>    magnets = SubHtml(urls)<br>    Save(movies,urls,magnets)<br><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">2</span>,<span class="hljs-number">6</span>):<br>        root_url = <span class="hljs-string">&quot;https://www.dy2018.com/html/gndy/dyzz/index_&#123;0&#125;.html&quot;</span>.<span class="hljs-built_in">format</span>(<span class="hljs-built_in">str</span>(i))<br>        soup = GetHtml(root_url)<br>        movies,urls = Parser(soup)<br>        magnets = SubHtml(urls)<br>        <span class="hljs-comment">#print(magnets)</span><br>        Save(movies,urls,magnets)<br><br></code></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>课内</category>
        <category>计算机网络</category>
      </categories>
      <tags>
        <tag>爬虫</tag>
        <tag>实验</tag>
      </tags>
  </entry>
  <entry>
    <title>计算机视觉学习记录</title>
    <url>/2022/09/09/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>计算机视觉</tag>
      </tags>
  </entry>
  <entry>
    <title>面向对象语言中的虚函数</title>
    <url>/2022/09/03/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%AF%AD%E8%A8%80%E4%B8%AD%E7%9A%84%E8%99%9A%E5%87%BD%E6%95%B0/</url>
    <content><![CDATA[<p>前段时间在写C#脚本时遇到了一些问题，<s>具体是啥问题我现在也忘了</s>，但是我还是发现了出现问题的原因，就是C#中虚函数和实函数是存在区别的。</p>
<h1 id="何为虚函数"><a class="markdownIt-Anchor" href="#何为虚函数"></a> 何为虚函数</h1>
<p>在编程语言中，一个函数的相对地址在运行过程中是不会改变的。但是面向对象语言为了<strong>多态</strong>性，通常希望基类的函数在调用时能够灵活根据自己的实例类来灵活的执行函数，所以加入了<strong>虚函数</strong>这个东西。参考下列C#代码：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs c#">using System;<br><br>namespace CsharpLearning<br>&#123;<br>    class Animal<br>    &#123;<br>        static void Main(string[] args)<br>        &#123;<br>            Animal animal_1 = new Dog();<br>            Animal animal_2 = new Cat();<br>            animal_1.Call();<br>            animal_2.Call();<br>        &#125;<br>        public void Call()<br>        &#123;<br>            Console.WriteLine(&quot;Do nothing&quot;);<br>        &#125;<br>    &#125;<br><br>    class Dog:Animal<br>    &#123;<br>        public new void Call()<br>        &#123;<br>            Console.WriteLine(&quot;Wah Wah!&quot;);<br>        &#125;<br>    &#125;<br>    class Cat : Animal<br>    &#123;<br>        public new void Call()<br>        &#123;<br>            Console.WriteLine(&quot;Miao~&quot;);<br>        &#125;<br>    &#125;<br>&#125;<br>/*<br>输出：<br>Do nothing<br>Do nothing<br>*/<br></code></pre></td></tr></table></figure>
<p>这里调用了<code>Dog</code>和<code>Cat</code> 两个实例类方法，可是调用的却是基类中的方法，所以输出的是两行<code>Do nothing</code>。原因是C#中的函数均为实函数（除了抽象函数），所以在通过声明类（基类）的方法调用时，只会调用这个基类中的方法。这也是为什么编译器要求在派生类的同签名函数前需要添加<code>new</code>关键字，否则会有警告的原因。</p>
<p>C#提供了<code>virtual</code>、<code>override</code>关键字来声明和继承虚函数。在上面代码中做以下修改：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs C#">[...]<br>	//Animal类中<br>	public virtual void Call()<br>    &#123;<br>        [...]<br>    &#125;<br>	<br>	//Dog类中<br>	public override void Call()<br>    &#123;<br>        [...]<br>    &#125;<br><br>	//Cat类不变<br>    public new void Call()<br>    &#123;<br>        <br>    &#125;<br>[...]<br>/*输出结果：<br>Wah Wah!<br>Do nothing<br>*/<br></code></pre></td></tr></table></figure>
<p>基类中标记<code>Call</code>函数为虚函数，在通过声明类（基类）调用时会自动地向类继承树的深处寻找，直到找到对应的由<code>override</code>标记的函数为止，所以<code>Dog</code>类调用产生的结果符合我们的预期。但是这里<code>Cat</code>类使用了<code>new</code>关键字，表明这个函数与父类中的函数的不同的函数（即使它们签名相同），所以调用的结果是Do nothing。如果在继承类中没有添加<code>new</code>或者<code>override</code>关键字，编译器会产生一个警告，且默认该方法为<code>new</code>的方法。</p>
<h1 id="其他语言"><a class="markdownIt-Anchor" href="#其他语言"></a> 其他语言</h1>
<p>在C/C++中，和C#一样，默认函数为实函数，需要使用<code>virtual</code>关键字来声明虚函数。而Java中除<code>final</code>以外所有函数均为虚函数，直接继承就可以实现多态，不需要额外的声明。之前一直在用Java写MC mod，转到C#一下有点不适应，可能这就是遇到问题的原因吧。</p>
<p>我本来想探究一下python有没有虚函数和实函数的区别，但是打开之后发现Python是弱类型的语言，不存在声明类和实例类的区别，所以不需要关键字，直接继承自父类即可实现多态。</p>
]]></content>
      <categories>
        <category>编程语言</category>
      </categories>
      <tags>
        <tag>编程语言</tag>
      </tags>
  </entry>
</search>
