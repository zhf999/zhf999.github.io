## 25. K个一组翻转链表

[题目链接](https://leetcode.cn/problems/reverse-nodes-in-k-group/description/?envType=study-plan-v2&envId=top-100-liked)

### 题面

给你一个链表，要求每k个链表为一组，将它们翻转。当剩余的链表不足k个时，不做任何操作。

```
输入：head = [1,2,3,4,5], k = 2
输出：[2,1,4,3,5]
```

### 思路

首先，可以再定义一个函数`reverse(ListNode *head,ListNode *tail)`用来转置`head`到`tail`的左闭右开区间的链表。接下来就是如何确定这些区间，我们可以用一个循环，位移指针来确定每次翻转的左右边界。

组内翻转是很容易的，但是翻转后还要考虑如何将各个组链接起来。注意这里有一个坑，就是翻转完第`i`组后，我们并不知道第`i`组的尾巴要连接到哪里，因为下一组也是需要翻转的。所以要等到第`i+1`组翻转完，才能确定尾巴并连接。这样就很自然地想到了递归。~~好像看代码更好理解。~~

[代码](./leetcode-note/k-reverse.txt)
