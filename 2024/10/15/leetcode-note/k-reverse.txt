```C++
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* reverseKGroup(ListNode* head, int k) {
        // return reverse(head,k,head->next->next);
        ListNode *tail = head;
        for(int i=1;i<=k;i++)
        {
            if(tail==nullptr)
                return head;
            tail = tail->next;
        }
        ListNode *nhead = reverse(head,tail);
        head->next = reverseKGroup(tail,k);
        return nhead;
    }

    ListNode* reverse(ListNode *begin,ListNode *nhead)
    {
        ListNode *prev = nullptr, *cur = begin;
        while(cur!=nhead){
            ListNode *next = cur->next;
            cur->next = prev;
            prev = cur;
            cur = next;
        }
        return prev;
    }
};
```

