/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* next;
    Node* random;
    
    Node(int _val) {
        val = _val;
        next = NULL;
        random = NULL;
    }
};
*/

class Solution {
public:
    Node* copyRandomList(Node* head) {
        if(head==nullptr)
            return nullptr;
        
        Node *p = head;
        Node *nh = nullptr;
        while(p!=nullptr)
        {
            nh = new Node(p->val);
            nh->next = p->next;
            p->next = nh;
            p = nh->next;
        }
        p = head;
        while(p!=nullptr)
        {
            nh = p->next;
            if(p->random!=nullptr)
                nh->random = p->random->next;
            p = nh->next;
        }
        p = head;
        Node *fhead = nullptr;
        while(p!=nullptr)
        {
            nh = p->next;
            if(fhead==nullptr)
                fhead = nh;
            p->next = nh->next;
            p = p->next;
            if(p!=nullptr)
                nh->next = p->next;
        }
        return fhead;
    }
};