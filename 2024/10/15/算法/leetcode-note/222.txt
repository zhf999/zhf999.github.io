/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int countNodes(TreeNode* root) {
        if(root==nullptr)
            return 0;
        
        int level = 0;
        TreeNode * cur =root;
        while(cur->left!=nullptr)
        {
            level++;
            cur = cur->left;
        }

        int left = 1, right = 1<<level;
        int ans = 0;
        while(left<=right)
        {
            int mid = (left+right)>>1;
            if(exists(root,level,mid))
            {
                ans = mid;
                left = mid + 1;
            }else right = mid -1;
        }

        return ans+ ((1<<(level))-1);
    }

    bool exists(TreeNode* root,int level,int k)
    {
        if(level==0)
            return true;
        k -= 1;
        int bits = 1<<(level-1);
        while(bits)
        {
            bool dir = bits&k;
            if(dir)
            {
                if(root->right==nullptr)
                    return false;
                root = root->right;
            }else
            {
                if(root->left==nullptr)
                    return false;
                root = root->left;
            }
            bits >>= 1;
        }
        return true;
    }
};