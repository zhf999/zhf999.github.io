class Solution {
public:
    int findKthLargest(vector<int>& nums, int k) {
        int n = nums.size();
        for(int i=n/2-1;i>=0;i--)
        {
            heapify(nums,i,n);
        }
        int len = n;
        for(int i=1;i<k;i++)
        {
            swap(nums[0],nums[len-1]);
            len--;
            heapify(nums,0,len);
        }
        return nums[0];
    }

    void heapify(vector<int> &nums, int father, int heapSize)
    {
        int son = father*2+1;
        while(son<heapSize)
        {
            if(son+1<heapSize&&nums[son+1]>nums[son])
            {
                son++;
            }
            if(nums[son]>nums[father])
            {
                swap(nums[son],nums[father]);
                father = son;
                son = son*2+1;
            }
            else break;
        }
    }
};